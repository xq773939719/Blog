{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/other/1/index.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1608111639153},{"_id":"source/other/2/index.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1608111644866},{"_id":"source/CNAME","hash":"c8c41fdae8f94ab2ca219b066ca6904c3b586a1b","modified":1608057061587},{"_id":"source/README.md","hash":"8e564773895887bad183377fbc54140eb132ec8c","modified":1608057061587},{"_id":"source/_data/link.yml","hash":"4e11cf947db3ca9fa1c2162dd8d91e4ce6f06a2a","modified":1608122975408},{"_id":"source/_posts/1.C++学习的四个层次.md","hash":"28297f452c77fdf4ad8eba894afbd8a65725691c","modified":1608119046892},{"_id":"source/_posts/10.读《如何自学Android》有感.md","hash":"30699dffd2cc51befaf0dc362f8c073828ec0c68","modified":1608057061587},{"_id":"source/_posts/11.NPM与Yarn源管理工具.md","hash":"c51cd18f4a3d54482e07d4f6e81006eb8a46303e","modified":1608057061587},{"_id":"source/_posts/12.后端学习网站.md","hash":"545cd89e88c919d032ce4e88e5fd91814cc53e21","modified":1608057061587},{"_id":"source/_posts/13.前端学习网站.md","hash":"c109c00352bddb9906d2eb004ed2a5655a70c27a","modified":1608057061588},{"_id":"source/_posts/14.算法学习网站.md","hash":"3f6d861b071f30b53e17f7ca45a384116a3d09ee","modified":1608057061588},{"_id":"source/_posts/16.移动端学习网站.md","hash":"b5b20d6e265921a02f2c23ba56070b57489abd2f","modified":1608057061588},{"_id":"source/_posts/17.OpenGL学习.md","hash":"383d064e0b21d8cb0ab8cf521f71c6b8eb790066","modified":1608057088032},{"_id":"source/_posts/2.内存管理.md","hash":"6df959c2b511265325e65d4a189fcadb712311ec","modified":1608057061588},{"_id":"source/_posts/18.阅读进度.md","hash":"ef088206cf1fee769a77fb3995f891dd6af42ae7","modified":1608057061588},{"_id":"source/_posts/3.自我驱动.md","hash":"6b8990291bf1f9562f100553553365f962f39be9","modified":1608057061588},{"_id":"source/_posts/15.项目学习网站.md","hash":"77e2880cac4fd168c925f60161cccb7a0b1d0830","modified":1608057061588},{"_id":"source/_posts/4.计算机网络浅谈.md","hash":"cccc7afcd59ccc23e15eddfca4003c642a68fb8d","modified":1608057061589},{"_id":"source/_posts/5.Git命令.md","hash":"90b3b4c7189e4f760dbf33a3f1f4dd41ea9e982e","modified":1608057061589},{"_id":"source/_posts/8.深度探索C++对象模型.md","hash":"b62735c7c77666d2f075276c4c5dc328e6256228","modified":1608057061589},{"_id":"source/_posts/7.收藏夹.md","hash":"b317e637de975927ec130289b529a149c02fb4bc","modified":1608057088032},{"_id":"source/_posts/6.红黑树的实现.md","hash":"b5b9a5872dd68f1d7f8e1057432b819831f2c3f4","modified":1608057061589},{"_id":"source/categories/index.md","hash":"33d4f18ab1c90de753264543e794783a766b3f01","modified":1608103676950},{"_id":"source/about/index.md","hash":"19f6e2379410337abe38bc950b493cd4e046cc75","modified":1608057061589},{"_id":"source/link/index.md","hash":"161e625e184ca87fc7edddf2cc84c15f34ccbb89","modified":1608103676948},{"_id":"source/template/文章模板.md","hash":"7df6ef3c4ca486ebe8801f22251e471252711a80","modified":1608103509353},{"_id":"source/tags/index.md","hash":"39660d62b361b78ad0107f1ddefecb193e35ca22","modified":1608103676945},{"_id":"source/template/页面模板.md","hash":"60d75d19993fcf14a6b1666ecb601a36b736c507","modified":1608103472003},{"_id":"source/_posts/9.iOS开发知识点集合.md","hash":"1c6a0dd987d7eb3c7730556b4c7171d6a8586832","modified":1608057061589},{"_id":"themes/butterfly/README.md","hash":"2328f2975a5588ffc658475908e31c1e6545badd","modified":1608120581532},{"_id":"themes/butterfly/README_CN.md","hash":"53cf17eb877cd5417a5cba178426d721afd12893","modified":1608120581533},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1608120581532},{"_id":"themes/butterfly/_config.yml","hash":"704a5d46d6ec3c585de4889643215da0de0033a1","modified":1608120581533},{"_id":"themes/butterfly/package.json","hash":"4893ffc080e2149ae94b0cfda6de60b854fa2c9e","modified":1608120581553},{"_id":"themes/butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1608120581532},{"_id":"themes/butterfly/languages/default.yml","hash":"9840c4341123f326bb8ae1e871cda916a4e4825a","modified":1608120581533},{"_id":"themes/butterfly/languages/en.yml","hash":"69bdeac93fd3e816eb5ed9748b9be0a570fcef03","modified":1608120581533},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"b434d133125cd6bb597c91e0e591fb1d563377e7","modified":1608120581533},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"fe97468c40dbce850756f9b262389270f7fe9421","modified":1608120581534},{"_id":"themes/butterfly/layout/404.pug","hash":"cb7b4fb164621d1fd7c33184241bd24662c85299","modified":1608120581534},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1608120581534},{"_id":"themes/butterfly/layout/category.pug","hash":"d014234c26d2c07caaea6703f7b48cb69c51907d","modified":1608120581534},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1608120581552},{"_id":"themes/butterfly/layout/page.pug","hash":"d5063ec93d33bd8488c12007709b6aafd8b9cf5f","modified":1608120581552},{"_id":"themes/butterfly/layout/post.pug","hash":"de0c69f0583347f6064e9f2c344aac6b97c2a74d","modified":1608120581553},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1608120581553},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1608120581532},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1608120581532},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1608120581532},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"6961a4f98f9971581e7d41d527fd90f9d2e82163","modified":1608120581534},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1608120581534},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"6c517d30c606c22883053998ce0d89e11da2f769","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"fb0617d91725433da023f342c094d8634fd5ffaa","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c543384810f7989a5381b3cdf191e7daac17178b","modified":1608120581539},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":1608120581539},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f81b25dfabfa50e76acd100b97774936179ad85f","modified":1608120581540},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1608120581553},{"_id":"themes/butterfly/scripts/events/init.js","hash":"43b245c308797c2d62cb70429a85f1a05d3395ab","modified":1608120581554},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1608120581554},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1608120581554},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0f5017be123ae2b2ddf231d9d71a5c4cd1f2f206","modified":1608120581554},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"f30b0c108474b2869b35ee70dbc6ed2f2066979d","modified":1608120581555},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e01e86233820a32690e3e2e14a20f01511407644","modified":1608120581555},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"51fb52f76423e4dbebd198f0a2a4190ed14e3093","modified":1608120581555},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"0d8ba6120dce617a2a1fbc9167572db2ee9f22ef","modified":1608120581555},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1608120581555},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1608120581555},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1608120581555},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1608120581555},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1608120581556},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1608120581556},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1608120581562},{"_id":"themes/butterfly/source/css/var.styl","hash":"e92eaefda462315051872b7894a6f6eb70a29006","modified":1608120581562},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1608120581562},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1608120581562},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1608120581562},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1608120581563},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1608120581563},{"_id":"themes/butterfly/source/js/main.js","hash":"bc1c37de776d04c394b328d4595c75082593858e","modified":1608120581564},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1608120581565},{"_id":"themes/butterfly/source/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1608120581565},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"5390f2aea030486bf78678b910bda177b0ba5d05","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"afb58249ddd121e5a8cf5d289fe215e15b90b82a","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"3da1dc28cfb2ae1ca4a7a52c760fdc8e1e983215","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"189ab8ea17a8c342b0aafd68439f32889a096253","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/js.pug","hash":"de4eb7c3536e5cfb82f5d7586afa9a093e85e695","modified":1608120581535},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"2969801004f03b921c185d6ee91d40d8b394e7bd","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"abfa1d6a4f57273baedc6d1106d568d9c5c8014f","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"14cd0f9c0c578512896b487263cd48570d74771a","modified":1608120581536},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"0a8b0b3d82bef350fea5b42b1f69dbb6551b8627","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"6953601a8050574a60b812a8c5d6c241c1187a53","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"7ffcf93bc5ee95ca461aea2735cedc0785c9884d","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1608120581537},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"1ba251eca702b7d34f4f65d58d51a87db1799144","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/page/artitalk.pug","hash":"1c74c4125da66b88a2ff09db8033d37f0b376c14","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"da24e13ca15a376373fa3bae65f2bfb02f881b87","modified":1608120581538},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1608120581539},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1608120581539},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"bab59f87da66386e5abc84550614752c660a0705","modified":1608120581539},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/baidu_push.pug","hash":"6c8f95d54f337e2c6b3a40beff01d8554605df75","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"491d177a0a9c72321a8d208f3a186f667c170087","modified":1608120581544},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"cf8f2fff10e7adf1b0404b8d194c49dc35796721","modified":1608120581544},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1608120581544},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"50f0574a1db1c62d56042b10880ba348d65d8fd9","modified":1608120581547},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1608120581548},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"e9021b43f7604925c37880f30ff3e47a8d65206a","modified":1608120581549},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"11d838823a448ec75e0fa555fb049d45feacd180","modified":1608120581549},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"963f888309cf9fa4e631fbde730b62c620abebf6","modified":1608120581549},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"be6f71e64e6837720489a0edd69fa6e9a7076e8e","modified":1608120581550},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"ee5b3c88c6ffcc4564fde6972d4ea8351671cc45","modified":1608120581550},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"8931b62fb5d80deb2ea15928c6e94b0839f3dca4","modified":1608120581550},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"a7211fe629ef697421b0ec38c5e731b081defcf8","modified":1608120581550},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"cdf2f1f7d23e23d830b1267b589dbf5cc422ebad","modified":1608120581551},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"9bc2abbed03ff1c8cc29cac81b51d2443690abcc","modified":1608120581551},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"57075d81b1c44be7f279aa7c43bd4105f33940df","modified":1608120581551},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"13321de90ca8d5e092b9124dbe65f36a07c14af7","modified":1608120581556},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"73f91a3aa5bb7d684954797515d1809fd3d61a73","modified":1608120581556},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"3305ab95795801339bc515affca56c11ddc954e6","modified":1608120581557},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1608120581557},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"a510b67364d40794f9f0575c24b6987cab0b802a","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"f75e02cca49c8bd35a932625982e263c2608bc3e","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"24eea44716748c528725d994ae84cec19c308c5b","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"9e63cad808503d787b1485211333bef8e8a37571","modified":1608120581558},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"5edca90d42cc25ca60cfeed167a52951ed14865d","modified":1608120581559},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"76d67b9a42e8b0c3d17316a6d75c5b5b4c65fb68","modified":1608120581559},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"7bf7af4754baba07edfc614621bdb965442cdc2f","modified":1608120581559},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bb266c8cb123cdad508527e5a742566bc59d16c3","modified":1608120581559},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1608120581559},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"9a5f3ef155545814b349171d4c8203babbdfb57c","modified":1608120581559},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"9754bbe2ce8f9f1f1af7364715a9317ebbfbf592","modified":1608120581559},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"34eaa6c01ad4fcb1572781d98db925bba9303731","modified":1608120581559},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1608120581559},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1608120581560},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"275091fc84f69f2b75b9dc4b0da1bc3c2c9d7a59","modified":1608120581560},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"43f00986410f3dc0eed9e0bf9478801da32be24f","modified":1608120581560},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d486cf1dfcfdbc0acd1a414c78f6a66df7432aa0","modified":1608120581560},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1608120581560},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1608120581560},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1608120581560},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"51f2bd03a2d0787911d0c090fb555a664b3fac8b","modified":1608120581560},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"a7fc7624a8d893bdf9444f14154484c29c790e99","modified":1608120581561},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1608120581561},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1608120581561},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1608120581561},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1608120581561},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1608120581561},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1608120581562},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1608120581564},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1608120581564},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1608120581540},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f617cacf5d1e8335abba96ee1ce4b79c17411e1e","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b2fb4af74d54f1daa39d4afc321d38a2a72e0ddd","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"b579b947a87da500a4f3abbdf870fb5a6f2a5a79","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"99dbf2b87b372f07315a3b879a77131eaf3da066","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"426bb56ec4529b9d33c09f802f84c00904a7f3e7","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"63d28a7655df2b3b2a70ab2b0c5c5e775a7662bf","modified":1608120581541},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"21a91f397164a0ca743090cadc9cb178d4c4c15f","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"3370ecaa57bd9738ee3d82718b13ab6767f6e1f4","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"53af4ffa8119c7bbba3f066de74845be91400b5b","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"21b7ec96c606823d3d72e72775495ef77502b4cb","modified":1608120581542},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cdad89a0f7e5c404fd277c1469330cb0703c8079","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b94df53a56b66afb33b2c438b946f5c5a37d5f02","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"e00a551263f19d9aa39dfdd7e2d55cb0cc70ec55","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/leancloud.pug","hash":"ddcf0fe0c774027fc588b4ca0db7186a6fd366b2","modified":1608120581543},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"b6e031f62dc44936eb2ebc9e75d38da74933af25","modified":1608120581544},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1608120581544},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1608120581545},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1608120581545},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1608120581546},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1608120581547},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c40f7d6973811e53fcfbe881174ab373b4ea03ad","modified":1608120581547},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1608120581547},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"52c63a50a37fa315753e72b3661676156aeae794","modified":1608120581557},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1608120581557},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"897a18a82c0cad141b3ed9e2f1b4af60c24c334b","modified":1608120581557},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1608120581557},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"3bcd66576d13db8f93fa5b799a973d55e060a708","modified":1608120581557},{"_id":"public/atom.xml","hash":"4c605650581a5612dfbed1ff30d68cea5d42c0cb","modified":1608123997434},{"_id":"public/search.xml","hash":"7d673c1c0f162dcb5330820bf6430b34f2a3e12b","modified":1608120612752},{"_id":"public/other/1/index.html","hash":"e6188a2af015be7188b4cce2db5e7ea115a26703","modified":1608124102353},{"_id":"public/other/2/index.html","hash":"d1e027b96519e8994f8c22b362437ce32cbed409","modified":1608124102353},{"_id":"public/about/index.html","hash":"3d9fd3500e25ac61dcbbc96b493cb5c6bc6c16d0","modified":1608124102353},{"_id":"public/categories/index.html","hash":"d2c42f7b7f79cf7169793bf29ac51ead2eb8da06","modified":1608124102353},{"_id":"public/link/index.html","hash":"5fa7e99359c13b0c2f31ddaaa85ef36ebe83f019","modified":1608124102353},{"_id":"public/tags/index.html","hash":"cffce9e0916a55252d80774d0cf5886b59c04cb1","modified":1608124102353},{"_id":"public/template/文章模板.html","hash":"0452cf2cadd2276d3fc83c3a51827080eb4aede0","modified":1608124102353},{"_id":"public/template/页面模板.html","hash":"3a7c338d44c98e6b134fcd287cb55a89120233b3","modified":1608124102353},{"_id":"public/posts/18.阅读进度/index.html","hash":"33a9a31ae2b227760e7368c5b9c3c3954fa26ac5","modified":1608124102353},{"_id":"public/posts/16.移动端学习网站/index.html","hash":"18eb66749b9bfee144bd997f4394c424ade59e62","modified":1608124102353},{"_id":"public/posts/17.OpenGL学习/index.html","hash":"9515f1e40d6657691b1edc3d629fba7e774287ec","modified":1608124102353},{"_id":"public/posts/15.项目学习网站/index.html","hash":"dde4dd398c7e9511a8dc7dcf17291de45560ad8c","modified":1608124102353},{"_id":"public/posts/13.前端学习网站/index.html","hash":"59fcc4f37b88f38a881adbe6b4f9f2e0adb35a5b","modified":1608124102353},{"_id":"public/posts/14.算法学习网站/index.html","hash":"75cebe032b2a75cd1c62b38ff4b72af9633b3b96","modified":1608124102353},{"_id":"public/posts/12.后端学习网站/index.html","hash":"0d73fbba199af424aa39895e530f91fe80967803","modified":1608124102353},{"_id":"public/posts/11.NPM与Yarn源管理工具/index.html","hash":"cc99ba4d8f8618f98db887e581be593d6b78aeea","modified":1608124102353},{"_id":"public/posts/10.读《如何自学Android》有感/index.html","hash":"f59dc28ca7c3378ec57e3788c0268942ecf310f8","modified":1608124102353},{"_id":"public/posts/9.iOS开发知识点集合/index.html","hash":"826afb794e62a3682cc5ea01cfac5c192f009e44","modified":1608124102353},{"_id":"public/posts/8.深度探索C++对象模型/index.html","hash":"36e3d5fe31ebf2cf1d72979f2e64877268cb0aaf","modified":1608124102353},{"_id":"public/posts/7.收藏夹/index.html","hash":"9620080f794cca4398aa87c80fd4bb057a9a3689","modified":1608124102353},{"_id":"public/posts/6.红黑树的实现/index.html","hash":"ed1015cf3201ef4b32d0234d45f96ea3afb89293","modified":1608124102353},{"_id":"public/posts/5.Git命令/index.html","hash":"4d17b11441de91cbda7b0afae78096324331df51","modified":1608124102353},{"_id":"public/posts/4.计算机网络浅谈/index.html","hash":"e923721e72704fdd72681093f1b2bb3791f0aa6e","modified":1608124102353},{"_id":"public/posts/3.自我驱动/index.html","hash":"9c31f4e7374141a4fcb90715a06e2761a7bc0721","modified":1608124102353},{"_id":"public/posts/2.内存管理/index.html","hash":"828aafe37c44e38734c93cc0849d653af507b12f","modified":1608124102353},{"_id":"public/posts/1.C++学习的四个层次/index.html","hash":"a238e0dba346481d4c0dc23ac66d97d7ed5003e6","modified":1608124102353},{"_id":"public/archives/index.html","hash":"c07d297f0fb91ec122e0f7da0ad5ae425e490f58","modified":1608124102353},{"_id":"public/archives/page/2/index.html","hash":"c8cda6e01cb7f48057b56ea058a1799397dae21e","modified":1608124102353},{"_id":"public/archives/2020/index.html","hash":"45577dc8d22d0481c15b7c61aea767289c6e1b51","modified":1608124102353},{"_id":"public/archives/2020/page/2/index.html","hash":"ad7f42bd0a3d208893c2bedd32acdc2a8dbca611","modified":1608124102353},{"_id":"public/archives/2020/12/index.html","hash":"5d82de2372fecc67ce541ee529309dea2a2551b3","modified":1608124102353},{"_id":"public/archives/2020/12/page/2/index.html","hash":"574c9d398382a36433ed11c2816eb140de1916de","modified":1608124102353},{"_id":"public/categories/技术/index.html","hash":"015e15a7d03aa815b4fa108375f9d022c081deff","modified":1608124102353},{"_id":"public/categories/技术/page/2/index.html","hash":"8b9c2c344fbce89eb83731a0923821dd29e5da0c","modified":1608124102353},{"_id":"public/tags/C/index.html","hash":"cbe3d2060acdacc2b942d57e8000a687fe3e9100","modified":1608124102353},{"_id":"public/tags/Android/index.html","hash":"c96542f06aca99a6d6fd4ace44623e88bfb825a9","modified":1608124102353},{"_id":"public/tags/源管理/index.html","hash":"76c5aa76f275ad6cc2812c8b72ff0880e4e6e65a","modified":1608124102353},{"_id":"public/tags/后端/index.html","hash":"9b1c7c1ab1f9e45e840857e1a4ca1a59a38fbdba","modified":1608124102353},{"_id":"public/tags/前端/index.html","hash":"4c4d1958ae5c6bfc7cab5c31180be22305f9f80e","modified":1608124102353},{"_id":"public/tags/算法/index.html","hash":"b889f7fe2e6b56093e291f007368697989f79b96","modified":1608124102353},{"_id":"public/tags/项目/index.html","hash":"dec2e6b8d67367776e6f96d269e557fc4ec7287b","modified":1608124102353},{"_id":"public/tags/移动端/index.html","hash":"deb7ce0291bb3541293419443bdd9f49223a117a","modified":1608124102353},{"_id":"public/tags/OpenGL/index.html","hash":"73a4e101b87ab18ca67856cf900efc2d316311a5","modified":1608124102353},{"_id":"public/tags/阅读/index.html","hash":"99d954644bf7072d4c7158a9f4f8609735ef1db4","modified":1608124102353},{"_id":"public/tags/通用/index.html","hash":"7bdc372a2d880df77627f7d4f30a08921025dbe8","modified":1608124102353},{"_id":"public/tags/软实力/index.html","hash":"c75a8b58c166fcd8084bddf2c913b3615750e368","modified":1608124102353},{"_id":"public/tags/网络/index.html","hash":"1f884db30dc1282e2591ae13358a45b69eabe7ed","modified":1608124102353},{"_id":"public/tags/HTTP/index.html","hash":"6e912b04d24f3686f34f0d7a8e005e1a2af5cbd5","modified":1608124102353},{"_id":"public/tags/HTTPS/index.html","hash":"b77bea88b55dfa05aace5c216e995104a45518dd","modified":1608124102353},{"_id":"public/tags/数据结构/index.html","hash":"96211cc4560381642ffd4d9ee534a476efeedd0d","modified":1608124102353},{"_id":"public/tags/红黑树/index.html","hash":"a29a250f318f7d5276f5ee48ae861bafa876b1a5","modified":1608124102353},{"_id":"public/tags/对象/index.html","hash":"32a8ac12ca8828dd53e63f8eebe64eb0d8446a8b","modified":1608124102353},{"_id":"public/tags/收藏夹/index.html","hash":"509148128d73ce38624f633cb91cfcc81ae903ec","modified":1608124102353},{"_id":"public/tags/iOS/index.html","hash":"0e63b5938b75973276dfac92b9638a5ce1b013db","modified":1608124102353},{"_id":"public/index.html","hash":"fbcea4e5c98cc855069955387b77a177cd3db65c","modified":1608124102353},{"_id":"public/page/2/index.html","hash":"ecb1d39b05977e93bf03a8ed75f12a02a9dbacbf","modified":1608124102353},{"_id":"public/CNAME","hash":"c8c41fdae8f94ab2ca219b066ca6904c3b586a1b","modified":1608120612752},{"_id":"public/README.md","hash":"8e564773895887bad183377fbc54140eb132ec8c","modified":1608120612752},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1608120612752},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1608120612752},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1608120612752},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1608120612752},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1608120612752},{"_id":"public/css/prism-tomorrow.css","hash":"3b99487dfc9b4e51e9105a93743b92a761840e34","modified":1608120612752},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1608120612752},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1608120612752},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1608120612752},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1608120612752},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1608120612752},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1608120612752},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1608120612752},{"_id":"public/css/index.css","hash":"31762b093b5e91334add1c98fe58039cdc47ed83","modified":1608120612752},{"_id":"public/js/main.js","hash":"bc1c37de776d04c394b328d4595c75082593858e","modified":1608120612752},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1608120612752}],"Category":[{"name":"技术","_id":"ckirdhqrd00093th82xdt8u28"}],"Data":[{"_id":"link","data":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}],"Page":[{"_content":"","source":"other/1/index.md","raw":"","date":"2020-12-16T09:40:39.153Z","updated":"2020-12-16T09:40:39.153Z","path":"other/1/index.html","title":"","comments":1,"layout":"page","_id":"ckirdhqqp00003th881d85n41","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/PacManGrid.png","excerpt":"","more":""},{"_content":"","source":"other/2/index.md","raw":"","date":"2020-12-16T09:40:44.866Z","updated":"2020-12-16T09:40:44.866Z","path":"other/2/index.html","title":"","comments":1,"layout":"page","_id":"ckirdhqqr00013th88wx78a2m","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/donut.png","excerpt":"","more":""},{"title":"关于","date":"2018-10-30T16:45:54.000Z","type":"about","layout":"about","copyright":true,"comments":1,"_content":"\n## 1.自我介绍\n\n努力做小白\n\n## 2.联系我吧\n\nEmail：773939719@qq.com\nWechat：xq773939719\n\n## 3.友链申请\n\n发送`Email`: 773939719@qq.com\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-10-31 00:45:54\ntype: \"about\"\nlayout: \"about\"\ncopyright: true\ncomments: true\n---\n\n## 1.自我介绍\n\n努力做小白\n\n## 2.联系我吧\n\nEmail：773939719@qq.com\nWechat：xq773939719\n\n## 3.友链申请\n\n发送`Email`: 773939719@qq.com\n","updated":"2020-12-15T18:31:01.589Z","path":"about/index.html","_id":"ckirdhqr400023th881dm3z76","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"1-自我介绍\"><a href=\"#1-自我介绍\" class=\"headerlink\" title=\"1.自我介绍\"></a>1.自我介绍</h2><p>努力做小白</p>\n<h2 id=\"2-联系我吧\"><a href=\"#2-联系我吧\" class=\"headerlink\" title=\"2.联系我吧\"></a>2.联系我吧</h2><p>Email：<a href=\"mailto:&#x37;&#x37;&#51;&#x39;&#51;&#x39;&#x37;&#x31;&#57;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;\">&#x37;&#x37;&#51;&#x39;&#51;&#x39;&#x37;&#x31;&#57;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a><br>Wechat：xq773939719</p>\n<h2 id=\"3-友链申请\"><a href=\"#3-友链申请\" class=\"headerlink\" title=\"3.友链申请\"></a>3.友链申请</h2><p>发送<code>Email</code>: <a href=\"mailto:&#55;&#x37;&#51;&#57;&#x33;&#57;&#x37;&#x31;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;\">&#55;&#x37;&#51;&#57;&#x33;&#57;&#x37;&#x31;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/night.png","excerpt":"","more":"<h2 id=\"1-自我介绍\"><a href=\"#1-自我介绍\" class=\"headerlink\" title=\"1.自我介绍\"></a>1.自我介绍</h2><p>努力做小白</p>\n<h2 id=\"2-联系我吧\"><a href=\"#2-联系我吧\" class=\"headerlink\" title=\"2.联系我吧\"></a>2.联系我吧</h2><p>Email：<a href=\"mailto:&#x37;&#x37;&#51;&#x39;&#51;&#x39;&#x37;&#x31;&#57;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;\">&#x37;&#x37;&#51;&#x39;&#51;&#x39;&#x37;&#x31;&#57;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a><br>Wechat：xq773939719</p>\n<h2 id=\"3-友链申请\"><a href=\"#3-友链申请\" class=\"headerlink\" title=\"3.友链申请\"></a>3.友链申请</h2><p>发送<code>Email</code>: <a href=\"mailto:&#55;&#x37;&#51;&#57;&#x33;&#57;&#x37;&#x31;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;\">&#55;&#x37;&#51;&#57;&#x33;&#57;&#x37;&#x31;&#x39;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;</a></p>\n"},{"title":"分类","date":"2018-10-31T03:29:04.000Z","type":"categories","comments":1,"layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-10-31 11:29:04\ntype: \"categories\"\ncomments: true\nlayout: \"categories\"\n---\n","updated":"2020-12-16T07:27:56.950Z","path":"categories/index.html","_id":"ckirdhqr700043th8445jb9r8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/iLamp_withoutgradients.png","excerpt":"","more":""},{"title":"友链","date":"2018-10-31T03:29:04.000Z","type":"link","comments":1,"layout":"link","_content":"","source":"link/index.md","raw":"---\ntitle: 友链\ndate: 2018-10-31 11:29:04\ntype: \"link\"\ncomments: true\nlayout: \"link\"\n---\n","updated":"2020-12-16T07:27:56.948Z","path":"link/index.html","_id":"ckirdhqrb00073th86lt446th","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Music.png","excerpt":"","more":""},{"title":"标签","date":"2018-10-31T03:15:51.000Z","type":"tags","comments":1,"layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-10-31 11:15:51\ntype: \"tags\"\ncomments: true\nlayout: \"tags\"\n---\n","updated":"2020-12-16T07:27:56.945Z","path":"tags/index.html","_id":"ckirdhqre000a3th8f22n6524","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Rise.png","excerpt":"","more":""},{"title":"","date":"2020-12-16T11:46:50.912Z","updated":"2020-12-16T07:25:09.353Z","tags":null,"categories":null,"keywords":null,"description":null,"top_img":null,"comments":1,"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/tetons-at-night.png","toc":null,"toc_number":null,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"mathjax":null,"katex":null,"aplayer":null,"highlight_shrink":null,"aside":null,"_content":"\ntitle\t【必需】文章標題\ndate\t【必需】文章創建日期\nupdated\t【可選】文章更新日期\ntags\t【可選】文章標籤\ncategories\t【可選】文章分類\nkeywords\t【可選】文章關鍵字\ndescription\t【可選】文章描述\ntop_img\t【可選】文章頂部圖片\ncover\t【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)\ncomments\t【可選】顯示文章評論模塊(默認 true)\ntoc\t【可選】顯示文章TOC(默認為設置中toc的enable配置)\ntoc_number\t【可選】顯示toc_number(默認為設置中toc的number配置)\ncopyright\t【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)\ncopyright_author\t【可選】文章版權模塊的文章作者\ncopyright_author_href\t【可選】文章版權模塊的文章作者鏈接\ncopyright_url\t【可選】文章版權模塊的文章連結鏈接\ncopyright_info\t【可選】文章版權模塊的版權聲明文字\nmathjax\t【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)\nkatex\t【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)\naplayer\t【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置\nhighlight_shrink\t【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)\naside\t【可選】顯示側邊欄 (默認 true)\n","source":"template/文章模板.md","raw":"---\ntitle:\ndate:\nupdated:\ntags:\ncategories:\nkeywords:\ndescription:\ntop_img:\ncomments:\ncover:\ntoc:\ntoc_number:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\naside:\n---\n\ntitle\t【必需】文章標題\ndate\t【必需】文章創建日期\nupdated\t【可選】文章更新日期\ntags\t【可選】文章標籤\ncategories\t【可選】文章分類\nkeywords\t【可選】文章關鍵字\ndescription\t【可選】文章描述\ntop_img\t【可選】文章頂部圖片\ncover\t【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)\ncomments\t【可選】顯示文章評論模塊(默認 true)\ntoc\t【可選】顯示文章TOC(默認為設置中toc的enable配置)\ntoc_number\t【可選】顯示toc_number(默認為設置中toc的number配置)\ncopyright\t【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)\ncopyright_author\t【可選】文章版權模塊的文章作者\ncopyright_author_href\t【可選】文章版權模塊的文章作者鏈接\ncopyright_url\t【可選】文章版權模塊的文章連結鏈接\ncopyright_info\t【可選】文章版權模塊的版權聲明文字\nmathjax\t【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)\nkatex\t【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)\naplayer\t【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置\nhighlight_shrink\t【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)\naside\t【可選】顯示側邊欄 (默認 true)\n","path":"template/文章模板.html","layout":"page","_id":"ckirdhqri000c3th82d8n5hr1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>title    【必需】文章標題<br>date    【必需】文章創建日期<br>updated    【可選】文章更新日期<br>tags    【可選】文章標籤<br>categories    【可選】文章分類<br>keywords    【可選】文章關鍵字<br>description    【可選】文章描述<br>top_img    【可選】文章頂部圖片<br>cover    【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)<br>comments    【可選】顯示文章評論模塊(默認 true)<br>toc    【可選】顯示文章TOC(默認為設置中toc的enable配置)<br>toc_number    【可選】顯示toc_number(默認為設置中toc的number配置)<br>copyright    【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)<br>copyright_author    【可選】文章版權模塊的文章作者<br>copyright_author_href    【可選】文章版權模塊的文章作者鏈接<br>copyright_url    【可選】文章版權模塊的文章連結鏈接<br>copyright_info    【可選】文章版權模塊的版權聲明文字<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)<br>aside    【可選】顯示側邊欄 (默認 true)</p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"excerpt":"","more":"<p>title    【必需】文章標題<br>date    【必需】文章創建日期<br>updated    【可選】文章更新日期<br>tags    【可選】文章標籤<br>categories    【可選】文章分類<br>keywords    【可選】文章關鍵字<br>description    【可選】文章描述<br>top_img    【可選】文章頂部圖片<br>cover    【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)<br>comments    【可選】顯示文章評論模塊(默認 true)<br>toc    【可選】顯示文章TOC(默認為設置中toc的enable配置)<br>toc_number    【可選】顯示toc_number(默認為設置中toc的number配置)<br>copyright    【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)<br>copyright_author    【可選】文章版權模塊的文章作者<br>copyright_author_href    【可選】文章版權模塊的文章作者鏈接<br>copyright_url    【可選】文章版權模塊的文章連結鏈接<br>copyright_info    【可選】文章版權模塊的版權聲明文字<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)<br>aside    【可選】顯示側邊欄 (默認 true)</p>\n"},{"title":"","date":"2020-12-16T11:46:50.918Z","updated":"2020-12-16T07:24:32.003Z","type":null,"comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"_content":"\ntitle\t【必需】頁面標題\ndate\t【必需】頁面創建日期\ntype\t【必需】標籤、分類和友情鏈接三個頁面需要配置\nupdated\t【可選】頁面更新日期\ndescription\t【可選】頁面描述\nkeywords\t【可選】頁面關鍵字\ncomments\t【可選】顯示頁面評論模塊(默認 true)\ntop_img\t【可選】頁面頂部圖片\nmathjax\t【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)\nkatex\t【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)\naside\t【可選】顯示側邊欄 (默認 true)\naplayer\t【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置\nhighlight_shrink\t【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)\n","source":"template/页面模板.md","raw":"---\ntitle:\ndate:\nupdated:\ntype:\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\n---\n\ntitle\t【必需】頁面標題\ndate\t【必需】頁面創建日期\ntype\t【必需】標籤、分類和友情鏈接三個頁面需要配置\nupdated\t【可選】頁面更新日期\ndescription\t【可選】頁面描述\nkeywords\t【可選】頁面關鍵字\ncomments\t【可選】顯示頁面評論模塊(默認 true)\ntop_img\t【可選】頁面頂部圖片\nmathjax\t【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)\nkatex\t【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)\naside\t【可選】顯示側邊欄 (默認 true)\naplayer\t【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置\nhighlight_shrink\t【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)\n","path":"template/页面模板.html","layout":"page","_id":"ckirdhqrl000h3th83de89gdd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>title    【必需】頁面標題<br>date    【必需】頁面創建日期<br>type    【必需】標籤、分類和友情鏈接三個頁面需要配置<br>updated    【可選】頁面更新日期<br>description    【可選】頁面描述<br>keywords    【可選】頁面關鍵字<br>comments    【可選】顯示頁面評論模塊(默認 true)<br>top_img    【可選】頁面頂部圖片<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aside    【可選】顯示側邊欄 (默認 true)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/TronLightCycle1.png","excerpt":"","more":"<p>title    【必需】頁面標題<br>date    【必需】頁面創建日期<br>type    【必需】標籤、分類和友情鏈接三個頁面需要配置<br>updated    【可選】頁面更新日期<br>description    【可選】頁面描述<br>keywords    【可選】頁面關鍵字<br>comments    【可選】顯示頁面評論模塊(默認 true)<br>top_img    【可選】頁面頂部圖片<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aside    【可選】顯示側邊欄 (默認 true)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</p>\n"}],"Post":[{"title":"C++学习的四个层次","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T05:22:37.000Z","updated":"2020-12-03T05:22:40.000Z","keywords":"C++","description":null,"passwords":null,"img":null,"abstract":"根据C++层次学习与实践","_content":"\n第一层次，C++基础：挑选一本入门书籍，如《C++ Primer》、《C++大学教程》、或Stroustrup撰写的经典《C++程序设计语言》或他力作《C++程序设计原理与实践》，而一般C++课程也止于此，另外《C++ 标准程序库》及《The C++ Standard Library Extensions》可供参考\n\n第二层次，正确高效地使用C++：此层次开始必须自修，阅读过《(More)Effective C++》、《(More)Exceptional C++》、《Effective STL》及《C++编程规范》等，才适宜踏入专业C++开发之路\n\n第三层次，深入了解C++：关于全局问题可读《深入探索C++对象模型》、《Imperfect C++》、《C++沉思录》、《STL源码剖析》，要挑战智商，可看关于模版及模版元编程的书籍如《C++ Templates》、《C++设计新思维》、《C++模版元编程》\n\n第四层次，研究C++：阅读《C++语言的设计和演化》、《编程的本质》(含STL设计背后的数学根基)、C++标准文件《ISO/IEC 14882:2003》、C++标准委员会的提案书和报告书、关于C++的学术文献\n","source":"_posts/1.C++学习的四个层次.md","raw":"---\ntitle: C++学习的四个层次\ncategories: \n- [技术]\ntags: [C++]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 13:22:37\nupdated: 2020-12-03 13:22:40\nkeywords: C++\ndescription: \npasswords:\nimg: \nabstract: 根据C++层次学习与实践\n---\n\n第一层次，C++基础：挑选一本入门书籍，如《C++ Primer》、《C++大学教程》、或Stroustrup撰写的经典《C++程序设计语言》或他力作《C++程序设计原理与实践》，而一般C++课程也止于此，另外《C++ 标准程序库》及《The C++ Standard Library Extensions》可供参考\n\n第二层次，正确高效地使用C++：此层次开始必须自修，阅读过《(More)Effective C++》、《(More)Exceptional C++》、《Effective STL》及《C++编程规范》等，才适宜踏入专业C++开发之路\n\n第三层次，深入了解C++：关于全局问题可读《深入探索C++对象模型》、《Imperfect C++》、《C++沉思录》、《STL源码剖析》，要挑战智商，可看关于模版及模版元编程的书籍如《C++ Templates》、《C++设计新思维》、《C++模版元编程》\n\n第四层次，研究C++：阅读《C++语言的设计和演化》、《编程的本质》(含STL设计背后的数学根基)、C++标准文件《ISO/IEC 14882:2003》、C++标准委员会的提案书和报告书、关于C++的学术文献\n","slug":"1.C++学习的四个层次","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqr400033th8g4zi669x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>第一层次，C++基础：挑选一本入门书籍，如《C++ Primer》、《C++大学教程》、或Stroustrup撰写的经典《C++程序设计语言》或他力作《C++程序设计原理与实践》，而一般C++课程也止于此，另外《C++ 标准程序库》及《The C++ Standard Library Extensions》可供参考</p>\n<p>第二层次，正确高效地使用C++：此层次开始必须自修，阅读过《(More)Effective C++》、《(More)Exceptional C++》、《Effective STL》及《C++编程规范》等，才适宜踏入专业C++开发之路</p>\n<p>第三层次，深入了解C++：关于全局问题可读《深入探索C++对象模型》、《Imperfect C++》、《C++沉思录》、《STL源码剖析》，要挑战智商，可看关于模版及模版元编程的书籍如《C++ Templates》、《C++设计新思维》、《C++模版元编程》</p>\n<p>第四层次，研究C++：阅读《C++语言的设计和演化》、《编程的本质》(含STL设计背后的数学根基)、C++标准文件《ISO/IEC 14882:2003》、C++标准委员会的提案书和报告书、关于C++的学术文献</p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/CMYKblock.png","excerpt":"","more":"<p>第一层次，C++基础：挑选一本入门书籍，如《C++ Primer》、《C++大学教程》、或Stroustrup撰写的经典《C++程序设计语言》或他力作《C++程序设计原理与实践》，而一般C++课程也止于此，另外《C++ 标准程序库》及《The C++ Standard Library Extensions》可供参考</p>\n<p>第二层次，正确高效地使用C++：此层次开始必须自修，阅读过《(More)Effective C++》、《(More)Exceptional C++》、《Effective STL》及《C++编程规范》等，才适宜踏入专业C++开发之路</p>\n<p>第三层次，深入了解C++：关于全局问题可读《深入探索C++对象模型》、《Imperfect C++》、《C++沉思录》、《STL源码剖析》，要挑战智商，可看关于模版及模版元编程的书籍如《C++ Templates》、《C++设计新思维》、《C++模版元编程》</p>\n<p>第四层次，研究C++：阅读《C++语言的设计和演化》、《编程的本质》(含STL设计背后的数学根基)、C++标准文件《ISO/IEC 14882:2003》、C++标准委员会的提案书和报告书、关于C++的学术文献</p>\n"},{"title":"读《如何自学Android》有感","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:51:03.000Z","updated":"2020-12-03T06:51:03.000Z","keywords":"Android","description":null,"passwords":null,"img":null,"abstract":"求知欲+书籍+源码+总结+勤奋+耐心 = +∞","_content":"\n`Read the fucking source code`\n\n# 1.基础\n- Java基础 《Java编程思想》，《Effective Java》，《Java并发编程实战》，《Java性能优化权威指南》，《Java虚拟机》\n- Android基础 \n\n# 2.进阶\n- 阅读源码：\n- 阅读博客\n- 阅读书籍\n\n# 3.其他\n- 好奇心\n- 知识点的整理总结\n- 天道酬勤\n- 自己解决>求助他人\n- 静下心来+持之以恒+专研\n\n\n\n# #参考\n[如何自学Android](https://zhuanlan.zhihu.com/p/20708611)","source":"_posts/10.读《如何自学Android》有感.md","raw":"---\ntitle: 读《如何自学Android》有感\ncategories: \n- [技术]\ntags: [Android]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:51:03\nupdated: 2020-12-03 14:51:03\nkeywords: Android\ndescription: \npasswords:\nimg: \nabstract: 求知欲+书籍+源码+总结+勤奋+耐心 = +∞\n---\n\n`Read the fucking source code`\n\n# 1.基础\n- Java基础 《Java编程思想》，《Effective Java》，《Java并发编程实战》，《Java性能优化权威指南》，《Java虚拟机》\n- Android基础 \n\n# 2.进阶\n- 阅读源码：\n- 阅读博客\n- 阅读书籍\n\n# 3.其他\n- 好奇心\n- 知识点的整理总结\n- 天道酬勤\n- 自己解决>求助他人\n- 静下心来+持之以恒+专研\n\n\n\n# #参考\n[如何自学Android](https://zhuanlan.zhihu.com/p/20708611)","slug":"10.读《如何自学Android》有感","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqr800053th8d7ku9u90","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><code>Read the fucking source code</code></p>\n<h1 id=\"1-基础\"><a href=\"#1-基础\" class=\"headerlink\" title=\"1.基础\"></a>1.基础</h1><ul>\n<li>Java基础 《Java编程思想》，《Effective Java》，《Java并发编程实战》，《Java性能优化权威指南》，《Java虚拟机》</li>\n<li>Android基础 </li>\n</ul>\n<h1 id=\"2-进阶\"><a href=\"#2-进阶\" class=\"headerlink\" title=\"2.进阶\"></a>2.进阶</h1><ul>\n<li>阅读源码：</li>\n<li>阅读博客</li>\n<li>阅读书籍</li>\n</ul>\n<h1 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3.其他\"></a>3.其他</h1><ul>\n<li>好奇心</li>\n<li>知识点的整理总结</li>\n<li>天道酬勤</li>\n<li>自己解决&gt;求助他人</li>\n<li>静下心来+持之以恒+专研</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"#参考\"></a>#参考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/20708611\">如何自学Android</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/rise-2.png","excerpt":"","more":"<p><code>Read the fucking source code</code></p>\n<h1 id=\"1-基础\"><a href=\"#1-基础\" class=\"headerlink\" title=\"1.基础\"></a>1.基础</h1><ul>\n<li>Java基础 《Java编程思想》，《Effective Java》，《Java并发编程实战》，《Java性能优化权威指南》，《Java虚拟机》</li>\n<li>Android基础 </li>\n</ul>\n<h1 id=\"2-进阶\"><a href=\"#2-进阶\" class=\"headerlink\" title=\"2.进阶\"></a>2.进阶</h1><ul>\n<li>阅读源码：</li>\n<li>阅读博客</li>\n<li>阅读书籍</li>\n</ul>\n<h1 id=\"3-其他\"><a href=\"#3-其他\" class=\"headerlink\" title=\"3.其他\"></a>3.其他</h1><ul>\n<li>好奇心</li>\n<li>知识点的整理总结</li>\n<li>天道酬勤</li>\n<li>自己解决&gt;求助他人</li>\n<li>静下心来+持之以恒+专研</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"#参考\"></a>#参考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/20708611\">如何自学Android</a></p>\n"},{"title":"NPM与Yarn源管理工具","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:51:44.000Z","updated":"2020-12-03T06:51:44.000Z","keywords":"源管理","description":null,"passwords":null,"img":null,"abstract":"NRM、YRM与CGR","_content":"\n# 1.NRM\n\n```\nnpm install -g nrm\nnrm ls\nnrm use taobao\nnrm test\n```\n\n\n# 2.YRM\n```\ninstall -g yrm\nyrm ls\nyrm use taobao\nyrm test\n```\n\n# 3.CGR\n```\nnpm install -g cgr\n```","source":"_posts/11.NPM与Yarn源管理工具.md","raw":"---\ntitle: NPM与Yarn源管理工具\ncategories: \n- [技术]\ntags: [源管理]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:51:44\nupdated: 2020-12-03 14:51:44\nkeywords: 源管理\ndescription: \npasswords:\nimg: \nabstract: NRM、YRM与CGR\n---\n\n# 1.NRM\n\n```\nnpm install -g nrm\nnrm ls\nnrm use taobao\nnrm test\n```\n\n\n# 2.YRM\n```\ninstall -g yrm\nyrm ls\nyrm use taobao\nyrm test\n```\n\n# 3.CGR\n```\nnpm install -g cgr\n```","slug":"11.NPM与Yarn源管理工具","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrc00083th85zk46oxp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-NRM\"><a href=\"#1-NRM\" class=\"headerlink\" title=\"1.NRM\"></a>1.NRM</h1><pre><code>npm install -g nrm\nnrm ls\nnrm use taobao\nnrm test</code></pre>\n<h1 id=\"2-YRM\"><a href=\"#2-YRM\" class=\"headerlink\" title=\"2.YRM\"></a>2.YRM</h1><pre><code>install -g yrm\nyrm ls\nyrm use taobao\nyrm test</code></pre>\n<h1 id=\"3-CGR\"><a href=\"#3-CGR\" class=\"headerlink\" title=\"3.CGR\"></a>3.CGR</h1><pre><code>npm install -g cgr</code></pre>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Music.png","excerpt":"","more":"<h1 id=\"1-NRM\"><a href=\"#1-NRM\" class=\"headerlink\" title=\"1.NRM\"></a>1.NRM</h1><pre><code>npm install -g nrm\nnrm ls\nnrm use taobao\nnrm test</code></pre>\n<h1 id=\"2-YRM\"><a href=\"#2-YRM\" class=\"headerlink\" title=\"2.YRM\"></a>2.YRM</h1><pre><code>install -g yrm\nyrm ls\nyrm use taobao\nyrm test</code></pre>\n<h1 id=\"3-CGR\"><a href=\"#3-CGR\" class=\"headerlink\" title=\"3.CGR\"></a>3.CGR</h1><pre><code>npm install -g cgr</code></pre>\n"},{"title":"后端学习网站","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:55:34.000Z","updated":"2020-12-03T06:55:39.000Z","keywords":"后端","description":null,"passwords":null,"img":null,"abstract":"后端技术栈的网站集合","_content":"\n# 1.Java技术栈\n[Java 全栈知识体系](https://www.pdai.tech/)\n[CycNote](http://www.cyc2018.xyz/)\n[JavaGuide](https://github.com/Snailclimb/JavaGuide)\n\n# 2.C++技术栈\n[C++那些事](https://light-city.club/sc/)\n\n# 3.Python\n[Python中文学习大本营](http://www.pythondoc.com/)","source":"_posts/12.后端学习网站.md","raw":"---\ntitle: 后端学习网站\ncategories: \n- [技术]\ntags: [后端]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:55:34\nupdated: 2020-12-03 14:55:39\nkeywords: 后端\ndescription: \npasswords:\nimg: \nabstract: 后端技术栈的网站集合\n---\n\n# 1.Java技术栈\n[Java 全栈知识体系](https://www.pdai.tech/)\n[CycNote](http://www.cyc2018.xyz/)\n[JavaGuide](https://github.com/Snailclimb/JavaGuide)\n\n# 2.C++技术栈\n[C++那些事](https://light-city.club/sc/)\n\n# 3.Python\n[Python中文学习大本营](http://www.pythondoc.com/)","slug":"12.后端学习网站","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrh000b3th8dy6v9p4c","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-Java技术栈\"><a href=\"#1-Java技术栈\" class=\"headerlink\" title=\"1.Java技术栈\"></a>1.Java技术栈</h1><p><a href=\"https://www.pdai.tech/\">Java 全栈知识体系</a><br><a href=\"http://www.cyc2018.xyz/\">CycNote</a><br><a href=\"https://github.com/Snailclimb/JavaGuide\">JavaGuide</a></p>\n<h1 id=\"2-C-技术栈\"><a href=\"#2-C-技术栈\" class=\"headerlink\" title=\"2.C++技术栈\"></a>2.C++技术栈</h1><p><a href=\"https://light-city.club/sc/\">C++那些事</a></p>\n<h1 id=\"3-Python\"><a href=\"#3-Python\" class=\"headerlink\" title=\"3.Python\"></a>3.Python</h1><p><a href=\"http://www.pythondoc.com/\">Python中文学习大本营</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Circuit.png","excerpt":"","more":"<h1 id=\"1-Java技术栈\"><a href=\"#1-Java技术栈\" class=\"headerlink\" title=\"1.Java技术栈\"></a>1.Java技术栈</h1><p><a href=\"https://www.pdai.tech/\">Java 全栈知识体系</a><br><a href=\"http://www.cyc2018.xyz/\">CycNote</a><br><a href=\"https://github.com/Snailclimb/JavaGuide\">JavaGuide</a></p>\n<h1 id=\"2-C-技术栈\"><a href=\"#2-C-技术栈\" class=\"headerlink\" title=\"2.C++技术栈\"></a>2.C++技术栈</h1><p><a href=\"https://light-city.club/sc/\">C++那些事</a></p>\n<h1 id=\"3-Python\"><a href=\"#3-Python\" class=\"headerlink\" title=\"3.Python\"></a>3.Python</h1><p><a href=\"http://www.pythondoc.com/\">Python中文学习大本营</a></p>\n"},{"title":"前端学习网站","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T07:04:25.000Z","updated":"2020-12-03T07:04:30.000Z","keywords":"前端","description":null,"passwords":null,"img":null,"abstract":"前端技术栈的网站集合","_content":"\n[现代 JavaScript 教程](https://zh.javascript.info/)\n[Vue.js](https://cn.vuejs.org/)\n[React.js](https://zh-hans.reactjs.org/)\n[大前端面试宝典 - 图解前端](https://lucifer.ren/fe-interview/#/)\n[我的第一本书](https://lucifer.ren/automate-everything/#/)","source":"_posts/13.前端学习网站.md","raw":"---\ntitle: 前端学习网站\ncategories: \n- [技术]\ntags: [前端]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 15:04:25\nupdated: 2020-12-03 15:04:30\nkeywords: 前端\ndescription: \npasswords:\nimg: \nabstract: 前端技术栈的网站集合\n---\n\n[现代 JavaScript 教程](https://zh.javascript.info/)\n[Vue.js](https://cn.vuejs.org/)\n[React.js](https://zh-hans.reactjs.org/)\n[大前端面试宝典 - 图解前端](https://lucifer.ren/fe-interview/#/)\n[我的第一本书](https://lucifer.ren/automate-everything/#/)","slug":"13.前端学习网站","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrj000d3th8fxwwfs0d","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"https://zh.javascript.info/\">现代 JavaScript 教程</a><br><a href=\"https://cn.vuejs.org/\">Vue.js</a><br><a href=\"https://zh-hans.reactjs.org/\">React.js</a><br><a href=\"https://lucifer.ren/fe-interview/#/\">大前端面试宝典 - 图解前端</a><br><a href=\"https://lucifer.ren/automate-everything/#/\">我的第一本书</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/stars.png","excerpt":"","more":"<p><a href=\"https://zh.javascript.info/\">现代 JavaScript 教程</a><br><a href=\"https://cn.vuejs.org/\">Vue.js</a><br><a href=\"https://zh-hans.reactjs.org/\">React.js</a><br><a href=\"https://lucifer.ren/fe-interview/#/\">大前端面试宝典 - 图解前端</a><br><a href=\"https://lucifer.ren/automate-everything/#/\">我的第一本书</a></p>\n"},{"title":"算法学习网站","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T07:04:18.000Z","updated":"2020-12-03T07:04:20.000Z","keywords":"算法","description":null,"passwords":null,"img":null,"abstract":"算法的网站集合","_content":"\n[五分钟学算法](https://www.cxyxiaowu.com/)\n[算法小抄](https://labuladong.gitbook.io/algo/)\n[algorithm-visualizer](https://algorithm-visualizer.org/)\n[VisuAlgo](https://visualgo.net/zh)\n[小浩算法](https://www.geekxh.com/)\n[力扣加加](https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/)\n[Acwing](https://www.acwing.com/)","source":"_posts/14.算法学习网站.md","raw":"---\ntitle: 算法学习网站\ncategories: \n- [技术]\ntags: [算法]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 15:04:18\nupdated: 2020-12-03 15:04:20\nkeywords: 算法\ndescription: \npasswords:\nimg: \nabstract: 算法的网站集合\n---\n\n[五分钟学算法](https://www.cxyxiaowu.com/)\n[算法小抄](https://labuladong.gitbook.io/algo/)\n[algorithm-visualizer](https://algorithm-visualizer.org/)\n[VisuAlgo](https://visualgo.net/zh)\n[小浩算法](https://www.geekxh.com/)\n[力扣加加](https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/)\n[Acwing](https://www.acwing.com/)","slug":"14.算法学习网站","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrm000i3th8c49kb4mf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"https://www.cxyxiaowu.com/\">五分钟学算法</a><br><a href=\"https://labuladong.gitbook.io/algo/\">算法小抄</a><br><a href=\"https://algorithm-visualizer.org/\">algorithm-visualizer</a><br><a href=\"https://visualgo.net/zh\">VisuAlgo</a><br><a href=\"https://www.geekxh.com/\">小浩算法</a><br><a href=\"https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/\">力扣加加</a><br><a href=\"https://www.acwing.com/\">Acwing</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/TronLightCycle1.png","excerpt":"","more":"<p><a href=\"https://www.cxyxiaowu.com/\">五分钟学算法</a><br><a href=\"https://labuladong.gitbook.io/algo/\">算法小抄</a><br><a href=\"https://algorithm-visualizer.org/\">algorithm-visualizer</a><br><a href=\"https://visualgo.net/zh\">VisuAlgo</a><br><a href=\"https://www.geekxh.com/\">小浩算法</a><br><a href=\"https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/\">力扣加加</a><br><a href=\"https://www.acwing.com/\">Acwing</a></p>\n"},{"title":"项目学习网站","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T07:09:56.000Z","updated":"2020-12-03T07:09:59.000Z","keywords":"项目","description":null,"passwords":null,"img":null,"abstract":"项目的网站集合","_content":"\n[分享 GitHub 上 有趣、入门级的开源项目](https://hellogithub.com)\n","source":"_posts/15.项目学习网站.md","raw":"---\ntitle: 项目学习网站\ncategories: \n- [技术]\ntags: [项目]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 15:09:56\nupdated: 2020-12-03 15:09:59\nkeywords: 项目\ndescription: \npasswords:\nimg: \nabstract: 项目的网站集合\n---\n\n[分享 GitHub 上 有趣、入门级的开源项目](https://hellogithub.com)\n","slug":"15.项目学习网站","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrn000j3th83f9g3zwk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"https://hellogithub.com/\">分享 GitHub 上 有趣、入门级的开源项目</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/strider.png","excerpt":"","more":"<p><a href=\"https://hellogithub.com/\">分享 GitHub 上 有趣、入门级的开源项目</a></p>\n"},{"title":"移动端学习网站","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T07:11:13.000Z","updated":"2020-12-15T18:31:01.588Z","keywords":"移动端","description":null,"passwords":null,"img":null,"abstract":"移动端的网站集合","_content":"\n# 1.Native原生\n[Android](https://developer.android.com/)\n[iOS](https://developer.apple.com/cn/)\n[Swift](https://www.cnswift.org/)\n\n# 2.跨平台\n[Flutter](https://flutter.cn/)\n[React Native](https://reactnative.cn/)","source":"_posts/16.移动端学习网站.md","raw":"---\ntitle: 移动端学习网站\ncategories: \n- [技术]\ntags: [移动端]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 15:11:13\nupdated: 2020-12月-03 15:11:15\nkeywords: 移动端\ndescription: \npasswords:\nimg: \nabstract: 移动端的网站集合\n---\n\n# 1.Native原生\n[Android](https://developer.android.com/)\n[iOS](https://developer.apple.com/cn/)\n[Swift](https://www.cnswift.org/)\n\n# 2.跨平台\n[Flutter](https://flutter.cn/)\n[React Native](https://reactnative.cn/)","slug":"16.移动端学习网站","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrp000m3th826yubc50","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-Native原生\"><a href=\"#1-Native原生\" class=\"headerlink\" title=\"1.Native原生\"></a>1.Native原生</h1><p><a href=\"https://developer.android.com/\">Android</a><br><a href=\"https://developer.apple.com/cn/\">iOS</a><br><a href=\"https://www.cnswift.org/\">Swift</a></p>\n<h1 id=\"2-跨平台\"><a href=\"#2-跨平台\" class=\"headerlink\" title=\"2.跨平台\"></a>2.跨平台</h1><p><a href=\"https://flutter.cn/\">Flutter</a><br><a href=\"https://reactnative.cn/\">React Native</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/GNU&Linux.jpg","excerpt":"","more":"<h1 id=\"1-Native原生\"><a href=\"#1-Native原生\" class=\"headerlink\" title=\"1.Native原生\"></a>1.Native原生</h1><p><a href=\"https://developer.android.com/\">Android</a><br><a href=\"https://developer.apple.com/cn/\">iOS</a><br><a href=\"https://www.cnswift.org/\">Swift</a></p>\n<h1 id=\"2-跨平台\"><a href=\"#2-跨平台\" class=\"headerlink\" title=\"2.跨平台\"></a>2.跨平台</h1><p><a href=\"https://flutter.cn/\">Flutter</a><br><a href=\"https://reactnative.cn/\">React Native</a></p>\n"},{"title":"OpenGL学习","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T07:11:13.000Z","updated":"2020-12-03T07:11:15.000Z","keywords":"OpenGL","description":null,"passwords":null,"img":null,"abstract":"学习OpenGL","_content":"\n# 1.入门\n\ntransformation 变换\nprojection 投影\nvertices 顶点\n\nshader 着色器\ntexture 纹理\nblending 混合\n\n\n# 2.步骤\n剪裁 -> 投影 -> 光栅化\n\n\n# 参考\n[LearnOpenGL](https://learnopengl-cn.github.io/)","source":"_posts/17.OpenGL学习.md","raw":"---\ntitle: OpenGL学习\ncategories: \n- [技术]\ntags: [OpenGL]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 15:11:13\nupdated: 2020-12-03 15:11:15\nkeywords: OpenGL\ndescription: \npasswords:\nimg: \nabstract: 学习OpenGL\n---\n\n# 1.入门\n\ntransformation 变换\nprojection 投影\nvertices 顶点\n\nshader 着色器\ntexture 纹理\nblending 混合\n\n\n# 2.步骤\n剪裁 -> 投影 -> 光栅化\n\n\n# 参考\n[LearnOpenGL](https://learnopengl-cn.github.io/)","slug":"17.OpenGL学习","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrq000p3th8085if635","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-入门\"><a href=\"#1-入门\" class=\"headerlink\" title=\"1.入门\"></a>1.入门</h1><p>transformation 变换<br>projection 投影<br>vertices 顶点</p>\n<p>shader 着色器<br>texture 纹理<br>blending 混合</p>\n<h1 id=\"2-步骤\"><a href=\"#2-步骤\" class=\"headerlink\" title=\"2.步骤\"></a>2.步骤</h1><p>剪裁 -&gt; 投影 -&gt; 光栅化</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://learnopengl-cn.github.io/\">LearnOpenGL</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/newspaper.png","excerpt":"","more":"<h1 id=\"1-入门\"><a href=\"#1-入门\" class=\"headerlink\" title=\"1.入门\"></a>1.入门</h1><p>transformation 变换<br>projection 投影<br>vertices 顶点</p>\n<p>shader 着色器<br>texture 纹理<br>blending 混合</p>\n<h1 id=\"2-步骤\"><a href=\"#2-步骤\" class=\"headerlink\" title=\"2.步骤\"></a>2.步骤</h1><p>剪裁 -&gt; 投影 -&gt; 光栅化</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://learnopengl-cn.github.io/\">LearnOpenGL</a></p>\n"},{"title":"阅读进度","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T08:08:59.000Z","updated":"2020-12-03T08:09:05.000Z","keywords":"书籍阅读","description":null,"passwords":null,"img":null,"abstract":"记录书籍阅读进度","_content":"\n","source":"_posts/18.阅读进度.md","raw":"---\ntitle: 阅读进度\ncategories: \n- [技术]\ntags: [阅读]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 16:08:59\nupdated: 2020-12-03 16:09:05\nkeywords: 书籍阅读\ndescription: \npasswords:\nimg: \nabstract: 记录书籍阅读进度\n---\n\n","slug":"18.阅读进度","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrs000s3th80tv36zlw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Orbit.png","excerpt":"","more":""},{"title":"内存管理","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:18:09.000Z","updated":"2020-12-03T06:18:13.000Z","keywords":"桌面","description":null,"passwords":null,"img":null,"abstract":"多种编程语言内存管理比较","_content":"\n# 1. OC 内存管理\n\n## 1. 堆 和 栈\n栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址\n\n堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。\n\n## 2. 僵尸对象 空指针 野指针\n僵尸对象：已经被销毁的对象，内存区域无法再被使用。\n\n空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。\n\n野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。\n\n## 3. OC 内存管理\n- 分配内存：创建对象\n- 释放内存：销毁对象\n\n内存管理范围：继承NSObject，非基本数据类型\n\n内存管理方式三阶段：\n\n①MRC 手动引用计数\n对象引用计数为零才可以被销毁，除非程序退出\n使用new alloc init copy MutableCopy 时，对象默认初试RC为1。\n\n发送retain消息，表示持有对象，RC++。\n\n发送release消息，表示不再拥有对象，RC--。\n\n发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放\n\n发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁\n\n一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。\n\n谁创建谁是释放，谁持有谁释放，避免过度释放。\n\n释放后指针成为野指针，记得置空。\n\n@property参数 \n\n生成setter方法\n\n- retain：release旧值，retain新值（用于对象）\n- assign：直接赋值，不做内存管理（用于非对象）\n- copy：release旧值，copy新值（用于NSString不可变）\n\n控制生成set方法\n\n- readwrite get+set\n- readonly get\n\n多线程\n\n- atomic 默认\n- nonatomic 性能好\n\n循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign\n\n②autoreleasepool 自动释放池\n\n运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。\n\n③ARC 自动引用计数\n自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。\nARC是编译器特性，不是其他语言的动态特性GC。\n\n局部变量释放，对象随之释放。\n清空指针，对象随之释放。（例如a = nil）\n默认清空指针是strong的\n不要使用weak保存新创建的对象\n\n循环引用问题：一个strong一个weak\n\n@property参数\n\nstrong ≈ retain\nweak ≈ assign\n\n\n# 2. C++ 内存管理\n\n## 1. 内存分区\n\n①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）\n\n②静态区（static全局变量）c语言区分初始化与非初始化\n\n③自由存储区（malloc分配的，free 清除）\n\n④常量区（不变量）\n\n⑤代码区\n\n常见内存出错：\n\n- 内存分配未成功（记得检查指针不为空）\n- 未初始化（最好赋零值，缺省初值不定）\n- 越界（常见的数组边界）\n- 内存泄漏（忘记销毁对象释放内存，new与delete成对出现）\n- 野指针（释放了内存还在使用内存区域）\n\nstrcpy 复制数组\nstrcmp 比较数组\n复制arr内容，先malloc内存strlen(arr)区域，然后strcpy\n\n参考了 [C/C++内存管理详解](https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/)\n\n# 3. Java 内存管理\n\n## 1.内存分区\n①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。\n运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。\n--XX：（PermSize/MaxPermSize）最大最小\n\n②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。\n\n--Xms：JVM启动时申请的最小内存，默认1/64 && < 1G。\n\n--Xmx：JVM可申请的最大内存，默认1/4 && < 1G。\n\n为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）\n\n年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc\n\n内存首先在年轻代分配对象，如果对象大，直接分配到老年代\n\n老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc\n\n③本地方法栈（多为c）\n\n存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。\n\n④虚拟机栈（JVM栈）\n\n占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等\n\n⑤PC\n\n记录字节码执行位置，为线程行号指示器\n\n## 2. 对象回收判定算法\n\n- 引用计数\n每个对象拥有一个引用计数器。普遍存在循环引用问题。\n- 可达性分析\nroot对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）\n// TODO\n\n## 3. 垃圾收集算法\n\n- 标记清除\n原位置删除，容易产生碎片。标记清除效率不高。\n\n- 复制\n开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。\n\n- 标记整理\n存活对象向一侧移动，清除掉端边界以外的内存。\n\n- 分代收集\nGC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。\n新生代分三个区（eden survivor from survivor to）默认811。\n优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。\n\n## 4. 收集器\n- 串行收集器\n\n- 并行收集器\n\n- CMS（用于永久代）\n\n- G1收集器（并发 增量压缩 暂停时间段）\n\n## 5. HotSpot虚拟机\n垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。\n\n\n参考了\n[JVM内存管理及GC机制](https://blog.csdn.net/suifeng3051/article/details/48292193)\n[JVM自动内存管理机制](https://zhuanlan.zhihu.com/p/38056939)\n","source":"_posts/2.内存管理.md","raw":"---\ntitle: 内存管理\ncategories: \n- [技术]\ntags: [通用]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:18:09\nupdated: 2020-12-03 14:18:13\nkeywords: 桌面\ndescription: \npasswords:\nimg: \nabstract: 多种编程语言内存管理比较\n---\n\n# 1. OC 内存管理\n\n## 1. 堆 和 栈\n栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址\n\n堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。\n\n## 2. 僵尸对象 空指针 野指针\n僵尸对象：已经被销毁的对象，内存区域无法再被使用。\n\n空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。\n\n野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。\n\n## 3. OC 内存管理\n- 分配内存：创建对象\n- 释放内存：销毁对象\n\n内存管理范围：继承NSObject，非基本数据类型\n\n内存管理方式三阶段：\n\n①MRC 手动引用计数\n对象引用计数为零才可以被销毁，除非程序退出\n使用new alloc init copy MutableCopy 时，对象默认初试RC为1。\n\n发送retain消息，表示持有对象，RC++。\n\n发送release消息，表示不再拥有对象，RC--。\n\n发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放\n\n发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁\n\n一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。\n\n谁创建谁是释放，谁持有谁释放，避免过度释放。\n\n释放后指针成为野指针，记得置空。\n\n@property参数 \n\n生成setter方法\n\n- retain：release旧值，retain新值（用于对象）\n- assign：直接赋值，不做内存管理（用于非对象）\n- copy：release旧值，copy新值（用于NSString不可变）\n\n控制生成set方法\n\n- readwrite get+set\n- readonly get\n\n多线程\n\n- atomic 默认\n- nonatomic 性能好\n\n循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign\n\n②autoreleasepool 自动释放池\n\n运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。\n\n③ARC 自动引用计数\n自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。\nARC是编译器特性，不是其他语言的动态特性GC。\n\n局部变量释放，对象随之释放。\n清空指针，对象随之释放。（例如a = nil）\n默认清空指针是strong的\n不要使用weak保存新创建的对象\n\n循环引用问题：一个strong一个weak\n\n@property参数\n\nstrong ≈ retain\nweak ≈ assign\n\n\n# 2. C++ 内存管理\n\n## 1. 内存分区\n\n①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）\n\n②静态区（static全局变量）c语言区分初始化与非初始化\n\n③自由存储区（malloc分配的，free 清除）\n\n④常量区（不变量）\n\n⑤代码区\n\n常见内存出错：\n\n- 内存分配未成功（记得检查指针不为空）\n- 未初始化（最好赋零值，缺省初值不定）\n- 越界（常见的数组边界）\n- 内存泄漏（忘记销毁对象释放内存，new与delete成对出现）\n- 野指针（释放了内存还在使用内存区域）\n\nstrcpy 复制数组\nstrcmp 比较数组\n复制arr内容，先malloc内存strlen(arr)区域，然后strcpy\n\n参考了 [C/C++内存管理详解](https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/)\n\n# 3. Java 内存管理\n\n## 1.内存分区\n①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。\n运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。\n--XX：（PermSize/MaxPermSize）最大最小\n\n②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。\n\n--Xms：JVM启动时申请的最小内存，默认1/64 && < 1G。\n\n--Xmx：JVM可申请的最大内存，默认1/4 && < 1G。\n\n为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）\n\n年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc\n\n内存首先在年轻代分配对象，如果对象大，直接分配到老年代\n\n老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc\n\n③本地方法栈（多为c）\n\n存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。\n\n④虚拟机栈（JVM栈）\n\n占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等\n\n⑤PC\n\n记录字节码执行位置，为线程行号指示器\n\n## 2. 对象回收判定算法\n\n- 引用计数\n每个对象拥有一个引用计数器。普遍存在循环引用问题。\n- 可达性分析\nroot对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）\n// TODO\n\n## 3. 垃圾收集算法\n\n- 标记清除\n原位置删除，容易产生碎片。标记清除效率不高。\n\n- 复制\n开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。\n\n- 标记整理\n存活对象向一侧移动，清除掉端边界以外的内存。\n\n- 分代收集\nGC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。\n新生代分三个区（eden survivor from survivor to）默认811。\n优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。\n\n## 4. 收集器\n- 串行收集器\n\n- 并行收集器\n\n- CMS（用于永久代）\n\n- G1收集器（并发 增量压缩 暂停时间段）\n\n## 5. HotSpot虚拟机\n垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。\n\n\n参考了\n[JVM内存管理及GC机制](https://blog.csdn.net/suifeng3051/article/details/48292193)\n[JVM自动内存管理机制](https://zhuanlan.zhihu.com/p/38056939)\n","slug":"2.内存管理","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrt000v3th83f6xes8a","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-OC-内存管理\"><a href=\"#1-OC-内存管理\" class=\"headerlink\" title=\"1. OC 内存管理\"></a>1. OC 内存管理</h1><h2 id=\"1-堆-和-栈\"><a href=\"#1-堆-和-栈\" class=\"headerlink\" title=\"1. 堆 和 栈\"></a>1. 堆 和 栈</h2><p>栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址</p>\n<p>堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。</p>\n<h2 id=\"2-僵尸对象-空指针-野指针\"><a href=\"#2-僵尸对象-空指针-野指针\" class=\"headerlink\" title=\"2. 僵尸对象 空指针 野指针\"></a>2. 僵尸对象 空指针 野指针</h2><p>僵尸对象：已经被销毁的对象，内存区域无法再被使用。</p>\n<p>空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。</p>\n<p>野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。</p>\n<h2 id=\"3-OC-内存管理\"><a href=\"#3-OC-内存管理\" class=\"headerlink\" title=\"3. OC 内存管理\"></a>3. OC 内存管理</h2><ul>\n<li>分配内存：创建对象</li>\n<li>释放内存：销毁对象</li>\n</ul>\n<p>内存管理范围：继承NSObject，非基本数据类型</p>\n<p>内存管理方式三阶段：</p>\n<p>①MRC 手动引用计数<br>对象引用计数为零才可以被销毁，除非程序退出<br>使用new alloc init copy MutableCopy 时，对象默认初试RC为1。</p>\n<p>发送retain消息，表示持有对象，RC++。</p>\n<p>发送release消息，表示不再拥有对象，RC–。</p>\n<p>发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放</p>\n<p>发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁</p>\n<p>一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。</p>\n<p>谁创建谁是释放，谁持有谁释放，避免过度释放。</p>\n<p>释放后指针成为野指针，记得置空。</p>\n<p>@property参数 </p>\n<p>生成setter方法</p>\n<ul>\n<li>retain：release旧值，retain新值（用于对象）</li>\n<li>assign：直接赋值，不做内存管理（用于非对象）</li>\n<li>copy：release旧值，copy新值（用于NSString不可变）</li>\n</ul>\n<p>控制生成set方法</p>\n<ul>\n<li>readwrite get+set</li>\n<li>readonly get</li>\n</ul>\n<p>多线程</p>\n<ul>\n<li>atomic 默认</li>\n<li>nonatomic 性能好</li>\n</ul>\n<p>循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign</p>\n<p>②autoreleasepool 自动释放池</p>\n<p>运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。</p>\n<p>③ARC 自动引用计数<br>自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。<br>ARC是编译器特性，不是其他语言的动态特性GC。</p>\n<p>局部变量释放，对象随之释放。<br>清空指针，对象随之释放。（例如a = nil）<br>默认清空指针是strong的<br>不要使用weak保存新创建的对象</p>\n<p>循环引用问题：一个strong一个weak</p>\n<p>@property参数</p>\n<p>strong ≈ retain<br>weak ≈ assign</p>\n<h1 id=\"2-C-内存管理\"><a href=\"#2-C-内存管理\" class=\"headerlink\" title=\"2. C++ 内存管理\"></a>2. C++ 内存管理</h1><h2 id=\"1-内存分区\"><a href=\"#1-内存分区\" class=\"headerlink\" title=\"1. 内存分区\"></a>1. 内存分区</h2><p>①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）</p>\n<p>②静态区（static全局变量）c语言区分初始化与非初始化</p>\n<p>③自由存储区（malloc分配的，free 清除）</p>\n<p>④常量区（不变量）</p>\n<p>⑤代码区</p>\n<p>常见内存出错：</p>\n<ul>\n<li>内存分配未成功（记得检查指针不为空）</li>\n<li>未初始化（最好赋零值，缺省初值不定）</li>\n<li>越界（常见的数组边界）</li>\n<li>内存泄漏（忘记销毁对象释放内存，new与delete成对出现）</li>\n<li>野指针（释放了内存还在使用内存区域）</li>\n</ul>\n<p>strcpy 复制数组<br>strcmp 比较数组<br>复制arr内容，先malloc内存strlen(arr)区域，然后strcpy</p>\n<p>参考了 <a href=\"https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/\">C/C++内存管理详解</a></p>\n<h1 id=\"3-Java-内存管理\"><a href=\"#3-Java-内存管理\" class=\"headerlink\" title=\"3. Java 内存管理\"></a>3. Java 内存管理</h1><h2 id=\"1-内存分区-1\"><a href=\"#1-内存分区-1\" class=\"headerlink\" title=\"1.内存分区\"></a>1.内存分区</h2><p>①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。<br>运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。<br>–XX：（PermSize/MaxPermSize）最大最小</p>\n<p>②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。</p>\n<p>–Xms：JVM启动时申请的最小内存，默认1/64 &amp;&amp; &lt; 1G。</p>\n<p>–Xmx：JVM可申请的最大内存，默认1/4 &amp;&amp; &lt; 1G。</p>\n<p>为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）</p>\n<p>年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc</p>\n<p>内存首先在年轻代分配对象，如果对象大，直接分配到老年代</p>\n<p>老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc</p>\n<p>③本地方法栈（多为c）</p>\n<p>存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。</p>\n<p>④虚拟机栈（JVM栈）</p>\n<p>占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等</p>\n<p>⑤PC</p>\n<p>记录字节码执行位置，为线程行号指示器</p>\n<h2 id=\"2-对象回收判定算法\"><a href=\"#2-对象回收判定算法\" class=\"headerlink\" title=\"2. 对象回收判定算法\"></a>2. 对象回收判定算法</h2><ul>\n<li>引用计数<br>每个对象拥有一个引用计数器。普遍存在循环引用问题。</li>\n<li>可达性分析<br>root对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）<br>// TODO</li>\n</ul>\n<h2 id=\"3-垃圾收集算法\"><a href=\"#3-垃圾收集算法\" class=\"headerlink\" title=\"3. 垃圾收集算法\"></a>3. 垃圾收集算法</h2><ul>\n<li><p>标记清除<br>原位置删除，容易产生碎片。标记清除效率不高。</p>\n</li>\n<li><p>复制<br>开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。</p>\n</li>\n<li><p>标记整理<br>存活对象向一侧移动，清除掉端边界以外的内存。</p>\n</li>\n<li><p>分代收集<br>GC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。<br>新生代分三个区（eden survivor from survivor to）默认811。<br>优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。</p>\n</li>\n</ul>\n<h2 id=\"4-收集器\"><a href=\"#4-收集器\" class=\"headerlink\" title=\"4. 收集器\"></a>4. 收集器</h2><ul>\n<li><p>串行收集器</p>\n</li>\n<li><p>并行收集器</p>\n</li>\n<li><p>CMS（用于永久代）</p>\n</li>\n<li><p>G1收集器（并发 增量压缩 暂停时间段）</p>\n</li>\n</ul>\n<h2 id=\"5-HotSpot虚拟机\"><a href=\"#5-HotSpot虚拟机\" class=\"headerlink\" title=\"5. HotSpot虚拟机\"></a>5. HotSpot虚拟机</h2><p>垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。</p>\n<p>参考了<br><a href=\"https://blog.csdn.net/suifeng3051/article/details/48292193\">JVM内存管理及GC机制</a><br><a href=\"https://zhuanlan.zhihu.com/p/38056939\">JVM自动内存管理机制</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Cuh_Cuh_Circle.png","excerpt":"","more":"<h1 id=\"1-OC-内存管理\"><a href=\"#1-OC-内存管理\" class=\"headerlink\" title=\"1. OC 内存管理\"></a>1. OC 内存管理</h1><h2 id=\"1-堆-和-栈\"><a href=\"#1-堆-和-栈\" class=\"headerlink\" title=\"1. 堆 和 栈\"></a>1. 堆 和 栈</h2><p>栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址</p>\n<p>堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。</p>\n<h2 id=\"2-僵尸对象-空指针-野指针\"><a href=\"#2-僵尸对象-空指针-野指针\" class=\"headerlink\" title=\"2. 僵尸对象 空指针 野指针\"></a>2. 僵尸对象 空指针 野指针</h2><p>僵尸对象：已经被销毁的对象，内存区域无法再被使用。</p>\n<p>空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。</p>\n<p>野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。</p>\n<h2 id=\"3-OC-内存管理\"><a href=\"#3-OC-内存管理\" class=\"headerlink\" title=\"3. OC 内存管理\"></a>3. OC 内存管理</h2><ul>\n<li>分配内存：创建对象</li>\n<li>释放内存：销毁对象</li>\n</ul>\n<p>内存管理范围：继承NSObject，非基本数据类型</p>\n<p>内存管理方式三阶段：</p>\n<p>①MRC 手动引用计数<br>对象引用计数为零才可以被销毁，除非程序退出<br>使用new alloc init copy MutableCopy 时，对象默认初试RC为1。</p>\n<p>发送retain消息，表示持有对象，RC++。</p>\n<p>发送release消息，表示不再拥有对象，RC–。</p>\n<p>发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放</p>\n<p>发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁</p>\n<p>一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。</p>\n<p>谁创建谁是释放，谁持有谁释放，避免过度释放。</p>\n<p>释放后指针成为野指针，记得置空。</p>\n<p>@property参数 </p>\n<p>生成setter方法</p>\n<ul>\n<li>retain：release旧值，retain新值（用于对象）</li>\n<li>assign：直接赋值，不做内存管理（用于非对象）</li>\n<li>copy：release旧值，copy新值（用于NSString不可变）</li>\n</ul>\n<p>控制生成set方法</p>\n<ul>\n<li>readwrite get+set</li>\n<li>readonly get</li>\n</ul>\n<p>多线程</p>\n<ul>\n<li>atomic 默认</li>\n<li>nonatomic 性能好</li>\n</ul>\n<p>循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign</p>\n<p>②autoreleasepool 自动释放池</p>\n<p>运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。</p>\n<p>③ARC 自动引用计数<br>自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。<br>ARC是编译器特性，不是其他语言的动态特性GC。</p>\n<p>局部变量释放，对象随之释放。<br>清空指针，对象随之释放。（例如a = nil）<br>默认清空指针是strong的<br>不要使用weak保存新创建的对象</p>\n<p>循环引用问题：一个strong一个weak</p>\n<p>@property参数</p>\n<p>strong ≈ retain<br>weak ≈ assign</p>\n<h1 id=\"2-C-内存管理\"><a href=\"#2-C-内存管理\" class=\"headerlink\" title=\"2. C++ 内存管理\"></a>2. C++ 内存管理</h1><h2 id=\"1-内存分区\"><a href=\"#1-内存分区\" class=\"headerlink\" title=\"1. 内存分区\"></a>1. 内存分区</h2><p>①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）</p>\n<p>②静态区（static全局变量）c语言区分初始化与非初始化</p>\n<p>③自由存储区（malloc分配的，free 清除）</p>\n<p>④常量区（不变量）</p>\n<p>⑤代码区</p>\n<p>常见内存出错：</p>\n<ul>\n<li>内存分配未成功（记得检查指针不为空）</li>\n<li>未初始化（最好赋零值，缺省初值不定）</li>\n<li>越界（常见的数组边界）</li>\n<li>内存泄漏（忘记销毁对象释放内存，new与delete成对出现）</li>\n<li>野指针（释放了内存还在使用内存区域）</li>\n</ul>\n<p>strcpy 复制数组<br>strcmp 比较数组<br>复制arr内容，先malloc内存strlen(arr)区域，然后strcpy</p>\n<p>参考了 <a href=\"https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/\">C/C++内存管理详解</a></p>\n<h1 id=\"3-Java-内存管理\"><a href=\"#3-Java-内存管理\" class=\"headerlink\" title=\"3. Java 内存管理\"></a>3. Java 内存管理</h1><h2 id=\"1-内存分区-1\"><a href=\"#1-内存分区-1\" class=\"headerlink\" title=\"1.内存分区\"></a>1.内存分区</h2><p>①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。<br>运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。<br>–XX：（PermSize/MaxPermSize）最大最小</p>\n<p>②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。</p>\n<p>–Xms：JVM启动时申请的最小内存，默认1/64 &amp;&amp; &lt; 1G。</p>\n<p>–Xmx：JVM可申请的最大内存，默认1/4 &amp;&amp; &lt; 1G。</p>\n<p>为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）</p>\n<p>年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc</p>\n<p>内存首先在年轻代分配对象，如果对象大，直接分配到老年代</p>\n<p>老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc</p>\n<p>③本地方法栈（多为c）</p>\n<p>存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。</p>\n<p>④虚拟机栈（JVM栈）</p>\n<p>占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等</p>\n<p>⑤PC</p>\n<p>记录字节码执行位置，为线程行号指示器</p>\n<h2 id=\"2-对象回收判定算法\"><a href=\"#2-对象回收判定算法\" class=\"headerlink\" title=\"2. 对象回收判定算法\"></a>2. 对象回收判定算法</h2><ul>\n<li>引用计数<br>每个对象拥有一个引用计数器。普遍存在循环引用问题。</li>\n<li>可达性分析<br>root对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）<br>// TODO</li>\n</ul>\n<h2 id=\"3-垃圾收集算法\"><a href=\"#3-垃圾收集算法\" class=\"headerlink\" title=\"3. 垃圾收集算法\"></a>3. 垃圾收集算法</h2><ul>\n<li><p>标记清除<br>原位置删除，容易产生碎片。标记清除效率不高。</p>\n</li>\n<li><p>复制<br>开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。</p>\n</li>\n<li><p>标记整理<br>存活对象向一侧移动，清除掉端边界以外的内存。</p>\n</li>\n<li><p>分代收集<br>GC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。<br>新生代分三个区（eden survivor from survivor to）默认811。<br>优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。</p>\n</li>\n</ul>\n<h2 id=\"4-收集器\"><a href=\"#4-收集器\" class=\"headerlink\" title=\"4. 收集器\"></a>4. 收集器</h2><ul>\n<li><p>串行收集器</p>\n</li>\n<li><p>并行收集器</p>\n</li>\n<li><p>CMS（用于永久代）</p>\n</li>\n<li><p>G1收集器（并发 增量压缩 暂停时间段）</p>\n</li>\n</ul>\n<h2 id=\"5-HotSpot虚拟机\"><a href=\"#5-HotSpot虚拟机\" class=\"headerlink\" title=\"5. HotSpot虚拟机\"></a>5. HotSpot虚拟机</h2><p>垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。</p>\n<p>参考了<br><a href=\"https://blog.csdn.net/suifeng3051/article/details/48292193\">JVM内存管理及GC机制</a><br><a href=\"https://zhuanlan.zhihu.com/p/38056939\">JVM自动内存管理机制</a></p>\n"},{"title":"自我驱动","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:22:01.000Z","updated":"2020-12-03T06:22:05.000Z","keywords":"技术软实力","description":null,"passwords":null,"img":null,"abstract":"码农的自我修养","_content":"\n# 1. OC 内存管理\n\n## 1. 堆 和 栈\n栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址\n\n堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。\n\n## 2. 僵尸对象 空指针 野指针\n僵尸对象：已经被销毁的对象，内存区域无法再被使用。\n\n空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。\n\n野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。\n\n## 3. OC 内存管理\n- 分配内存：创建对象\n- 释放内存：销毁对象\n\n内存管理范围：继承NSObject，非基本数据类型\n\n内存管理方式三阶段：\n\n①MRC 手动引用计数\n对象引用计数为零才可以被销毁，除非程序退出\n使用new alloc init copy MutableCopy 时，对象默认初试RC为1。\n\n发送retain消息，表示持有对象，RC++。\n\n发送release消息，表示不再拥有对象，RC--。\n\n发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放\n\n发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁\n\n一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。\n\n谁创建谁是释放，谁持有谁释放，避免过度释放。\n\n释放后指针成为野指针，记得置空。\n\n@property参数 \n\n生成setter方法\n\n- retain：release旧值，retain新值（用于对象）\n- assign：直接赋值，不做内存管理（用于非对象）\n- copy：release旧值，copy新值（用于NSString不可变）\n\n控制生成set方法\n\n- readwrite get+set\n- readonly get\n\n多线程\n\n- atomic 默认\n- nonatomic 性能好\n\n循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign\n\n②autoreleasepool 自动释放池\n\n运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。\n\n③ARC 自动引用计数\n自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。\nARC是编译器特性，不是其他语言的动态特性GC。\n\n局部变量释放，对象随之释放。\n清空指针，对象随之释放。（例如a = nil）\n默认清空指针是strong的\n不要使用weak保存新创建的对象\n\n循环引用问题：一个strong一个weak\n\n@property参数\n\nstrong ≈ retain\nweak ≈ assign\n\n\n# 2. C++ 内存管理\n\n## 1. 内存分区\n\n①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）\n\n②静态区（static全局变量）c语言区分初始化与非初始化\n\n③自由存储区（malloc分配的，free 清除）\n\n④常量区（不变量）\n\n⑤代码区\n\n常见内存出错：\n\n- 内存分配未成功（记得检查指针不为空）\n- 未初始化（最好赋零值，缺省初值不定）\n- 越界（常见的数组边界）\n- 内存泄漏（忘记销毁对象释放内存，new与delete成对出现）\n- 野指针（释放了内存还在使用内存区域）\n\nstrcpy 复制数组\nstrcmp 比较数组\n复制arr内容，先malloc内存strlen(arr)区域，然后strcpy\n\n参考了 [C/C++内存管理详解](https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/)\n\n# 3. Java 内存管理\n\n## 1.内存分区\n①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。\n运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。\n--XX：（PermSize/MaxPermSize）最大最小\n\n②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。\n\n--Xms：JVM启动时申请的最小内存，默认1/64 && < 1G。\n\n--Xmx：JVM可申请的最大内存，默认1/4 && < 1G。\n\n为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）\n\n年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc\n\n内存首先在年轻代分配对象，如果对象大，直接分配到老年代\n\n老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc\n\n③本地方法栈（多为c）\n\n存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。\n\n④虚拟机栈（JVM栈）\n\n占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等\n\n⑤PC\n\n记录字节码执行位置，为线程行号指示器\n\n## 2. 对象回收判定算法\n\n- 引用计数\n每个对象拥有一个引用计数器。普遍存在循环引用问题。\n- 可达性分析\nroot对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）\n// TODO\n\n## 3. 垃圾收集算法\n\n- 标记清除\n原位置删除，容易产生碎片。标记清除效率不高。\n\n- 复制\n开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。\n\n- 标记整理\n存活对象向一侧移动，清除掉端边界以外的内存。\n\n- 分代收集\nGC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。\n新生代分三个区（eden survivor from survivor to）默认811。\n优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。\n\n## 4. 收集器\n- 串行收集器\n\n- 并行收集器\n\n- CMS（用于永久代）\n\n- G1收集器（并发 增量压缩 暂停时间段）\n\n## 5. HotSpot虚拟机\n垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。\n\n\n参考了\n[JVM内存管理及GC机制](https://blog.csdn.net/suifeng3051/article/details/48292193)\n[JVM自动内存管理机制](https://zhuanlan.zhihu.com/p/38056939)\n","source":"_posts/3.自我驱动.md","raw":"---\ntitle: 自我驱动\ncategories: \n- [技术]\ntags: [软实力]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:22:01\nupdated: 2020-12-03 14:22:05\nkeywords: 技术软实力\ndescription: \npasswords:\nimg: \nabstract: 码农的自我修养\n---\n\n# 1. OC 内存管理\n\n## 1. 堆 和 栈\n栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址\n\n堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。\n\n## 2. 僵尸对象 空指针 野指针\n僵尸对象：已经被销毁的对象，内存区域无法再被使用。\n\n空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。\n\n野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。\n\n## 3. OC 内存管理\n- 分配内存：创建对象\n- 释放内存：销毁对象\n\n内存管理范围：继承NSObject，非基本数据类型\n\n内存管理方式三阶段：\n\n①MRC 手动引用计数\n对象引用计数为零才可以被销毁，除非程序退出\n使用new alloc init copy MutableCopy 时，对象默认初试RC为1。\n\n发送retain消息，表示持有对象，RC++。\n\n发送release消息，表示不再拥有对象，RC--。\n\n发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放\n\n发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁\n\n一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。\n\n谁创建谁是释放，谁持有谁释放，避免过度释放。\n\n释放后指针成为野指针，记得置空。\n\n@property参数 \n\n生成setter方法\n\n- retain：release旧值，retain新值（用于对象）\n- assign：直接赋值，不做内存管理（用于非对象）\n- copy：release旧值，copy新值（用于NSString不可变）\n\n控制生成set方法\n\n- readwrite get+set\n- readonly get\n\n多线程\n\n- atomic 默认\n- nonatomic 性能好\n\n循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign\n\n②autoreleasepool 自动释放池\n\n运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。\n\n③ARC 自动引用计数\n自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。\nARC是编译器特性，不是其他语言的动态特性GC。\n\n局部变量释放，对象随之释放。\n清空指针，对象随之释放。（例如a = nil）\n默认清空指针是strong的\n不要使用weak保存新创建的对象\n\n循环引用问题：一个strong一个weak\n\n@property参数\n\nstrong ≈ retain\nweak ≈ assign\n\n\n# 2. C++ 内存管理\n\n## 1. 内存分区\n\n①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）\n\n②静态区（static全局变量）c语言区分初始化与非初始化\n\n③自由存储区（malloc分配的，free 清除）\n\n④常量区（不变量）\n\n⑤代码区\n\n常见内存出错：\n\n- 内存分配未成功（记得检查指针不为空）\n- 未初始化（最好赋零值，缺省初值不定）\n- 越界（常见的数组边界）\n- 内存泄漏（忘记销毁对象释放内存，new与delete成对出现）\n- 野指针（释放了内存还在使用内存区域）\n\nstrcpy 复制数组\nstrcmp 比较数组\n复制arr内容，先malloc内存strlen(arr)区域，然后strcpy\n\n参考了 [C/C++内存管理详解](https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/)\n\n# 3. Java 内存管理\n\n## 1.内存分区\n①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。\n运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。\n--XX：（PermSize/MaxPermSize）最大最小\n\n②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。\n\n--Xms：JVM启动时申请的最小内存，默认1/64 && < 1G。\n\n--Xmx：JVM可申请的最大内存，默认1/4 && < 1G。\n\n为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）\n\n年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc\n\n内存首先在年轻代分配对象，如果对象大，直接分配到老年代\n\n老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc\n\n③本地方法栈（多为c）\n\n存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。\n\n④虚拟机栈（JVM栈）\n\n占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等\n\n⑤PC\n\n记录字节码执行位置，为线程行号指示器\n\n## 2. 对象回收判定算法\n\n- 引用计数\n每个对象拥有一个引用计数器。普遍存在循环引用问题。\n- 可达性分析\nroot对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）\n// TODO\n\n## 3. 垃圾收集算法\n\n- 标记清除\n原位置删除，容易产生碎片。标记清除效率不高。\n\n- 复制\n开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。\n\n- 标记整理\n存活对象向一侧移动，清除掉端边界以外的内存。\n\n- 分代收集\nGC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。\n新生代分三个区（eden survivor from survivor to）默认811。\n优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。\n\n## 4. 收集器\n- 串行收集器\n\n- 并行收集器\n\n- CMS（用于永久代）\n\n- G1收集器（并发 增量压缩 暂停时间段）\n\n## 5. HotSpot虚拟机\n垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。\n\n\n参考了\n[JVM内存管理及GC机制](https://blog.csdn.net/suifeng3051/article/details/48292193)\n[JVM自动内存管理机制](https://zhuanlan.zhihu.com/p/38056939)\n","slug":"3.自我驱动","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqru000y3th8gzard452","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-OC-内存管理\"><a href=\"#1-OC-内存管理\" class=\"headerlink\" title=\"1. OC 内存管理\"></a>1. OC 内存管理</h1><h2 id=\"1-堆-和-栈\"><a href=\"#1-堆-和-栈\" class=\"headerlink\" title=\"1. 堆 和 栈\"></a>1. 堆 和 栈</h2><p>栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址</p>\n<p>堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。</p>\n<h2 id=\"2-僵尸对象-空指针-野指针\"><a href=\"#2-僵尸对象-空指针-野指针\" class=\"headerlink\" title=\"2. 僵尸对象 空指针 野指针\"></a>2. 僵尸对象 空指针 野指针</h2><p>僵尸对象：已经被销毁的对象，内存区域无法再被使用。</p>\n<p>空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。</p>\n<p>野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。</p>\n<h2 id=\"3-OC-内存管理\"><a href=\"#3-OC-内存管理\" class=\"headerlink\" title=\"3. OC 内存管理\"></a>3. OC 内存管理</h2><ul>\n<li>分配内存：创建对象</li>\n<li>释放内存：销毁对象</li>\n</ul>\n<p>内存管理范围：继承NSObject，非基本数据类型</p>\n<p>内存管理方式三阶段：</p>\n<p>①MRC 手动引用计数<br>对象引用计数为零才可以被销毁，除非程序退出<br>使用new alloc init copy MutableCopy 时，对象默认初试RC为1。</p>\n<p>发送retain消息，表示持有对象，RC++。</p>\n<p>发送release消息，表示不再拥有对象，RC–。</p>\n<p>发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放</p>\n<p>发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁</p>\n<p>一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。</p>\n<p>谁创建谁是释放，谁持有谁释放，避免过度释放。</p>\n<p>释放后指针成为野指针，记得置空。</p>\n<p>@property参数 </p>\n<p>生成setter方法</p>\n<ul>\n<li>retain：release旧值，retain新值（用于对象）</li>\n<li>assign：直接赋值，不做内存管理（用于非对象）</li>\n<li>copy：release旧值，copy新值（用于NSString不可变）</li>\n</ul>\n<p>控制生成set方法</p>\n<ul>\n<li>readwrite get+set</li>\n<li>readonly get</li>\n</ul>\n<p>多线程</p>\n<ul>\n<li>atomic 默认</li>\n<li>nonatomic 性能好</li>\n</ul>\n<p>循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign</p>\n<p>②autoreleasepool 自动释放池</p>\n<p>运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。</p>\n<p>③ARC 自动引用计数<br>自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。<br>ARC是编译器特性，不是其他语言的动态特性GC。</p>\n<p>局部变量释放，对象随之释放。<br>清空指针，对象随之释放。（例如a = nil）<br>默认清空指针是strong的<br>不要使用weak保存新创建的对象</p>\n<p>循环引用问题：一个strong一个weak</p>\n<p>@property参数</p>\n<p>strong ≈ retain<br>weak ≈ assign</p>\n<h1 id=\"2-C-内存管理\"><a href=\"#2-C-内存管理\" class=\"headerlink\" title=\"2. C++ 内存管理\"></a>2. C++ 内存管理</h1><h2 id=\"1-内存分区\"><a href=\"#1-内存分区\" class=\"headerlink\" title=\"1. 内存分区\"></a>1. 内存分区</h2><p>①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）</p>\n<p>②静态区（static全局变量）c语言区分初始化与非初始化</p>\n<p>③自由存储区（malloc分配的，free 清除）</p>\n<p>④常量区（不变量）</p>\n<p>⑤代码区</p>\n<p>常见内存出错：</p>\n<ul>\n<li>内存分配未成功（记得检查指针不为空）</li>\n<li>未初始化（最好赋零值，缺省初值不定）</li>\n<li>越界（常见的数组边界）</li>\n<li>内存泄漏（忘记销毁对象释放内存，new与delete成对出现）</li>\n<li>野指针（释放了内存还在使用内存区域）</li>\n</ul>\n<p>strcpy 复制数组<br>strcmp 比较数组<br>复制arr内容，先malloc内存strlen(arr)区域，然后strcpy</p>\n<p>参考了 <a href=\"https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/\">C/C++内存管理详解</a></p>\n<h1 id=\"3-Java-内存管理\"><a href=\"#3-Java-内存管理\" class=\"headerlink\" title=\"3. Java 内存管理\"></a>3. Java 内存管理</h1><h2 id=\"1-内存分区-1\"><a href=\"#1-内存分区-1\" class=\"headerlink\" title=\"1.内存分区\"></a>1.内存分区</h2><p>①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。<br>运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。<br>–XX：（PermSize/MaxPermSize）最大最小</p>\n<p>②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。</p>\n<p>–Xms：JVM启动时申请的最小内存，默认1/64 &amp;&amp; &lt; 1G。</p>\n<p>–Xmx：JVM可申请的最大内存，默认1/4 &amp;&amp; &lt; 1G。</p>\n<p>为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）</p>\n<p>年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc</p>\n<p>内存首先在年轻代分配对象，如果对象大，直接分配到老年代</p>\n<p>老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc</p>\n<p>③本地方法栈（多为c）</p>\n<p>存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。</p>\n<p>④虚拟机栈（JVM栈）</p>\n<p>占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等</p>\n<p>⑤PC</p>\n<p>记录字节码执行位置，为线程行号指示器</p>\n<h2 id=\"2-对象回收判定算法\"><a href=\"#2-对象回收判定算法\" class=\"headerlink\" title=\"2. 对象回收判定算法\"></a>2. 对象回收判定算法</h2><ul>\n<li>引用计数<br>每个对象拥有一个引用计数器。普遍存在循环引用问题。</li>\n<li>可达性分析<br>root对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）<br>// TODO</li>\n</ul>\n<h2 id=\"3-垃圾收集算法\"><a href=\"#3-垃圾收集算法\" class=\"headerlink\" title=\"3. 垃圾收集算法\"></a>3. 垃圾收集算法</h2><ul>\n<li><p>标记清除<br>原位置删除，容易产生碎片。标记清除效率不高。</p>\n</li>\n<li><p>复制<br>开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。</p>\n</li>\n<li><p>标记整理<br>存活对象向一侧移动，清除掉端边界以外的内存。</p>\n</li>\n<li><p>分代收集<br>GC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。<br>新生代分三个区（eden survivor from survivor to）默认811。<br>优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。</p>\n</li>\n</ul>\n<h2 id=\"4-收集器\"><a href=\"#4-收集器\" class=\"headerlink\" title=\"4. 收集器\"></a>4. 收集器</h2><ul>\n<li><p>串行收集器</p>\n</li>\n<li><p>并行收集器</p>\n</li>\n<li><p>CMS（用于永久代）</p>\n</li>\n<li><p>G1收集器（并发 增量压缩 暂停时间段）</p>\n</li>\n</ul>\n<h2 id=\"5-HotSpot虚拟机\"><a href=\"#5-HotSpot虚拟机\" class=\"headerlink\" title=\"5. HotSpot虚拟机\"></a>5. HotSpot虚拟机</h2><p>垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。</p>\n<p>参考了<br><a href=\"https://blog.csdn.net/suifeng3051/article/details/48292193\">JVM内存管理及GC机制</a><br><a href=\"https://zhuanlan.zhihu.com/p/38056939\">JVM自动内存管理机制</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/donut.png","excerpt":"","more":"<h1 id=\"1-OC-内存管理\"><a href=\"#1-OC-内存管理\" class=\"headerlink\" title=\"1. OC 内存管理\"></a>1. OC 内存管理</h1><h2 id=\"1-堆-和-栈\"><a href=\"#1-堆-和-栈\" class=\"headerlink\" title=\"1. 堆 和 栈\"></a>1. 堆 和 栈</h2><p>栈：编译器与操作系统使用，自动释放，入参或者局部变量，先进后出，不会出现内存碎片。增长方式：向低地址</p>\n<p>堆：程序员动态分配，非基本数据类型，程序结束是OS回收，但是分配的内存无用后不释放会产生内存泄漏。动态分配，会产生碎片。增长方式：向高地址。</p>\n<h2 id=\"2-僵尸对象-空指针-野指针\"><a href=\"#2-僵尸对象-空指针-野指针\" class=\"headerlink\" title=\"2. 僵尸对象 空指针 野指针\"></a>2. 僵尸对象 空指针 野指针</h2><p>僵尸对象：已经被销毁的对象，内存区域无法再被使用。</p>\n<p>空指针：指针无指向，默认nil（0）。给空指针发消息不会有任何反应。</p>\n<p>野指针：指向僵尸对象，发消息会出现地址访问异常（EXC_BAD_ACCESS）错误。</p>\n<h2 id=\"3-OC-内存管理\"><a href=\"#3-OC-内存管理\" class=\"headerlink\" title=\"3. OC 内存管理\"></a>3. OC 内存管理</h2><ul>\n<li>分配内存：创建对象</li>\n<li>释放内存：销毁对象</li>\n</ul>\n<p>内存管理范围：继承NSObject，非基本数据类型</p>\n<p>内存管理方式三阶段：</p>\n<p>①MRC 手动引用计数<br>对象引用计数为零才可以被销毁，除非程序退出<br>使用new alloc init copy MutableCopy 时，对象默认初试RC为1。</p>\n<p>发送retain消息，表示持有对象，RC++。</p>\n<p>发送release消息，表示不再拥有对象，RC–。</p>\n<p>发送retainCount，表示检查RC值，但是（Apple在此处优化-1过程，当retainCount == 1时调用release，该对象一定会被销毁，就不必浪费资源-1为0）不准确，采用dealloc检测内存是否释放</p>\n<p>发送dealloc，当一个对象RC为0，会被销毁。也可以验证dealloc是否被调用判断对象是否被销毁</p>\n<p>一般重写dealloc方法，并且在方法最后调用父类dealloc，[super dealloc]。</p>\n<p>谁创建谁是释放，谁持有谁释放，避免过度释放。</p>\n<p>释放后指针成为野指针，记得置空。</p>\n<p>@property参数 </p>\n<p>生成setter方法</p>\n<ul>\n<li>retain：release旧值，retain新值（用于对象）</li>\n<li>assign：直接赋值，不做内存管理（用于非对象）</li>\n<li>copy：release旧值，copy新值（用于NSString不可变）</li>\n</ul>\n<p>控制生成set方法</p>\n<ul>\n<li>readwrite get+set</li>\n<li>readonly get</li>\n</ul>\n<p>多线程</p>\n<ul>\n<li>atomic 默认</li>\n<li>nonatomic 性能好</li>\n</ul>\n<p>循环引用：同时使用retain持有对象内存无法释放，解决办法是一个retain一个assign</p>\n<p>②autoreleasepool 自动释放池</p>\n<p>运行时，会创建无数个pool，为栈结构，对象调用autorelease时，会入栈。当pool被销毁时，对pool的对象发送release，如果RC 为0，则对象被销毁，不为0则不会被销毁。</p>\n<p>③ARC 自动引用计数<br>自动引用计数，不允许使用release方法，重写dealloc不能调用父类dealloc。<br>ARC是编译器特性，不是其他语言的动态特性GC。</p>\n<p>局部变量释放，对象随之释放。<br>清空指针，对象随之释放。（例如a = nil）<br>默认清空指针是strong的<br>不要使用weak保存新创建的对象</p>\n<p>循环引用问题：一个strong一个weak</p>\n<p>@property参数</p>\n<p>strong ≈ retain<br>weak ≈ assign</p>\n<h1 id=\"2-C-内存管理\"><a href=\"#2-C-内存管理\" class=\"headerlink\" title=\"2. C++ 内存管理\"></a>2. C++ 内存管理</h1><h2 id=\"1-内存分区\"><a href=\"#1-内存分区\" class=\"headerlink\" title=\"1. 内存分区\"></a>1. 内存分区</h2><p>①动态存储区：堆（new 对象初始化，delete清除，开发控制） 栈（局部变量，OS 编译器 控制）（分为动态与静态分配，编译器负责分配，动态alloc函数分配）</p>\n<p>②静态区（static全局变量）c语言区分初始化与非初始化</p>\n<p>③自由存储区（malloc分配的，free 清除）</p>\n<p>④常量区（不变量）</p>\n<p>⑤代码区</p>\n<p>常见内存出错：</p>\n<ul>\n<li>内存分配未成功（记得检查指针不为空）</li>\n<li>未初始化（最好赋零值，缺省初值不定）</li>\n<li>越界（常见的数组边界）</li>\n<li>内存泄漏（忘记销毁对象释放内存，new与delete成对出现）</li>\n<li>野指针（释放了内存还在使用内存区域）</li>\n</ul>\n<p>strcpy 复制数组<br>strcmp 比较数组<br>复制arr内容，先malloc内存strlen(arr)区域，然后strcpy</p>\n<p>参考了 <a href=\"https://chenqx.github.io/2014/09/25/Cpp-Memory-Management/\">C/C++内存管理详解</a></p>\n<h1 id=\"3-Java-内存管理\"><a href=\"#3-Java-内存管理\" class=\"headerlink\" title=\"3. Java 内存管理\"></a>3. Java 内存管理</h1><h2 id=\"1-内存分区-1\"><a href=\"#1-内存分区-1\" class=\"headerlink\" title=\"1.内存分区\"></a>1.内存分区</h2><p>①方法区：存放加载类的信息、类的静态变量、final变量、类的方法。全局共享，持久代。本区域的垃圾回收主要是常量池与已加载类的卸载。<br>运行时常量池：是方法区的部分，存储编译器生成的字面常量、符号引用、直接引用。<br>–XX：（PermSize/MaxPermSize）最大最小</p>\n<p>②堆：GC机制重点关注区域，最大的一块内存区，所有线程共享。虚拟机启东市创建。用来存储对象实例与数组值。可以认为new创建的对象都在此处分配。</p>\n<p>–Xms：JVM启动时申请的最小内存，默认1/64 &amp;&amp; &lt; 1G。</p>\n<p>–Xmx：JVM可申请的最大内存，默认1/4 &amp;&amp; &lt; 1G。</p>\n<p>为了内存回收高效，sun jdk 1.2开始才去分代的管理方式。（young old permanent）</p>\n<p>年轻代按比例分为eden（复制回收） 和 survivor，回收年轻代内存称为minor gc</p>\n<p>内存首先在年轻代分配对象，如果对象大，直接分配到老年代</p>\n<p>老年代指经过多次垃圾回收仍然存活的对象，老年代内存回收称为major gc</p>\n<p>③本地方法栈（多为c）</p>\n<p>存储native方法，与虚拟机栈运行机制一致，虚拟机栈执行java方法。</p>\n<p>④虚拟机栈（JVM栈）</p>\n<p>占用操作系统内存，线程私有，类似于C++的栈，存储局部变量等</p>\n<p>⑤PC</p>\n<p>记录字节码执行位置，为线程行号指示器</p>\n<h2 id=\"2-对象回收判定算法\"><a href=\"#2-对象回收判定算法\" class=\"headerlink\" title=\"2. 对象回收判定算法\"></a>2. 对象回收判定算法</h2><ul>\n<li>引用计数<br>每个对象拥有一个引用计数器。普遍存在循环引用问题。</li>\n<li>可达性分析<br>root对象作为起点，进行深度搜索，走过的路径称为引用链，当链不经过root时，表明从root到当前对象不可达，标记为可回收。java中可以作为root的对象有（虚拟机栈、native方法栈native方法引用的对象、方法区静态属性引用的对象、方法区常量引用的对象）<br>// TODO</li>\n</ul>\n<h2 id=\"3-垃圾收集算法\"><a href=\"#3-垃圾收集算法\" class=\"headerlink\" title=\"3. 垃圾收集算法\"></a>3. 垃圾收集算法</h2><ul>\n<li><p>标记清除<br>原位置删除，容易产生碎片。标记清除效率不高。</p>\n</li>\n<li><p>复制<br>开辟一半区域，存活的对象复制到新区域。解决碎片，但是空间利用率减半。</p>\n</li>\n<li><p>标记整理<br>存活对象向一侧移动，清除掉端边界以外的内存。</p>\n</li>\n<li><p>分代收集<br>GC大都采用分代收集，新生代与老年代，新版本永久代废弃。引入元空间，直接使用物理内存。<br>新生代分三个区（eden survivor from survivor to）默认811。<br>优先使用eden 与 from，用满后，进行GC，（停止复制法）存活的copy到to并清除eden与from，如果to无法容纳，copy到老年代，再无法容纳，full gc。</p>\n</li>\n</ul>\n<h2 id=\"4-收集器\"><a href=\"#4-收集器\" class=\"headerlink\" title=\"4. 收集器\"></a>4. 收集器</h2><ul>\n<li><p>串行收集器</p>\n</li>\n<li><p>并行收集器</p>\n</li>\n<li><p>CMS（用于永久代）</p>\n</li>\n<li><p>G1收集器（并发 增量压缩 暂停时间段）</p>\n</li>\n</ul>\n<h2 id=\"5-HotSpot虚拟机\"><a href=\"#5-HotSpot虚拟机\" class=\"headerlink\" title=\"5. HotSpot虚拟机\"></a>5. HotSpot虚拟机</h2><p>垃圾收集器是垃圾收集算法的实现。依据HotSpot虚拟机。</p>\n<p>参考了<br><a href=\"https://blog.csdn.net/suifeng3051/article/details/48292193\">JVM内存管理及GC机制</a><br><a href=\"https://zhuanlan.zhihu.com/p/38056939\">JVM自动内存管理机制</a></p>\n"},{"title":"计算机网络浅谈","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:24:24.000Z","updated":"2020-12-03T06:24:27.000Z","keywords":"计算机网络","description":null,"passwords":null,"img":null,"abstract":"网络","_content":"\n# 1. HTTP HTTPS\n\n### 什么是HTTP HTTPS？\n\nHyper Text Transfer Protocal 超文本传输协议，是实现数据通信的基石\n\nHTTP协议用于客户端和服务端之间的通信，通过请求和响应的交互达成通信（肯定是先从客户端开始建立通信的，服务器端在没有接收到任何请求之前不会发送响应）\n\nHTTP是无状态的协议，为了实现期望的保存状态的功能，引入了Cookie技术\n\n请求服务器的方法 `post get put head delete options trace connect`\n\n```markdown\nGET 请求资源，服务器解析后返回数据，数据在URL可见，直接传输不安全，记得转码\nPOST 传输实体数据，安全，数据在请求体里面\n× PUT 传输文件，鉴于HTTP／1.1的PUT方法自身不带验证机制，任何人都可以上传文件，存在安全性问题，因此一般的网站不建议使用该方法。若配合Web应用程序的验证机制，或架构设计采用REST标准的同类Web网站，就可能会开放使用PUT方法。\nHEAD 同GET类似，只是为了获得报文首部，用于确认URL有效性以及更新日期\n× DELETE 和PUT一样不带验证\nOPTIONS 查询针对请求URL指定的资源支持的方法\nTRACE 追踪路径，客户端通过TRACE方法可以查询发送出去的请求是怎样被加工修改／篡改的。这是因为，想要连接到源目标服务器可能会通过代理中转，TRACE方法就是用来确认连接过程中发生的一系列操作。\nCONNECT  要求用隧道协议连接代理。CONNECT方法在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL和TLS协议把通信内容经网络隧道传输。\n```\n\n无连接 无状态如何解决？\n\nkeep-alive 只要任意一端没有提出断开连接，则保持TCP连接。管线化，持久连接促进管线化，不必等待下一次请求，就可以发送多个响应。\n\ncookie 通过在请求和响应报文中写入cookie信息来控制客户端状态。\n\n返回结果的HTTP状态码\n\n- 1XX 表示服务器已经接收了客户端请求，客户端可继续发送请求\n- 2XX 请求正常处理完毕\n- 3XX 需要进行附加操作以完成请求\n- 4XX 表示客户端的请求有非法内容\n- 5XX 服务器处理请求出错\n\n通信数据转发程序：代理、网关、隧道\n\n使用代理服务器的理由：利用缓存技术减少网络带宽的流量。代理有多种使用方法，按两种基准分类。一类是 **是否使用缓存** ，另一种是 **是否会修改报文**。\n\n利用网关可以由HTTP请求转化为其他协议通信。\n\n利用缓存可减少对源服务器的访问，可以节省通信流量和通信时间。\n使用缓存的时候，要注意缓存的有效期限，确保我们发起请求获取的是最新的数据资源。\n\n> HTTP 有以下不足：\n>\n> - 通信使用明文（不加密），内容可能会被窃听\n> - 不验证通信方的身份，因此有可能遭遇伪装\n> - 无法证明报文的完整性，所以有可能已遭篡改\n>\n> HTTP + 加密 + 认证 + 完整性 = HTTPS\n>\n> HTTPS并非是应用层的一种新协议。只是HTTP通信接口部分用SSL和TSL协议代替而已，通常，HTTP直接和TCP通信，当使用SSL时，则演变成先和SSL通信，再由SSL和TCP通信了。简言之，所谓HTTPS其实就是身披SSL协议这层外壳的HTTP。\n>\n> 当采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能。而且SSL协议是独立于HTTP的协议，所以不光是HTTP协议，其他运行在应用层的SMTP和Telnet等协议均可配合SSL协议使用。可以说SSL是当今世界上应用最为广泛的网络安全技术。\n>\n> 在讲解SSL之前我们需要首先了解一下加密方法，加密分为对称加密和非对称加密。HTTPS协议则是采用的两者混合的实现方式，为什么要结合两种的实现方式呢？这是因为它们都各自存在自己的优缺点。对于对称加密来说，密钥的传输交换是不安全的，但是效率比较高，而对于非对称加密，是不用担心传输的密钥安全性的问题的，因为我们传递的是公开密钥，任何人都可以获得，但是缺点是效率比较低。对于公钥私钥、数字签名，这个哥们已经总结的相当好了，可以参考一下这篇[文章](http://www.cnblogs.com/f1194361820/archive/2015/01/29/4260025.html)。\n\n### 为什么需要加密\n\nhttp内容是明文传输的，明文数据经过中间代理服务器、路由，如果信息在传输过程中被劫持，内容将会是完全暴露的，甚至可以篡改，这称为中间人攻击。\n\n### 对称加密\n\n一段密钥代码，它可以解密原本的内容。\n\n获取信息的一方持有这个密钥才能和解密获得信息。\n\n### 只有对称加密可行吗\n\n如果通信双方本来就持有密钥，安全性没问题，密钥怎么来的，肯定是浏览器发出请求，服务器响应，告诉双方“你用这个密钥解密”，这样就完全把密钥暴露在外，还是不安全的。\n\n### 非对称加密\n\n公钥内容用私钥解，私钥内容用公钥解，耗时\n\n### 非对称与对称结合\n\n首先，服务器持有公钥A，私钥A，明文传送公钥A传送到客户端，客户端网站生成密钥a，使用服务器的公钥A加密密钥a发送报文到服务端，服务端接受报文并使用密钥A解密得到密钥a，这样的密钥a看似是安全的，双方可以使用密钥a加密解密。但是，如果明文传送的公钥A被中间人获取，并生成密钥α，使用公钥A加密α发送报文，这样双方都获得了α，使用α加密解密，中间人就使用α密钥攻击服务器了。\n\n发生这种情况的原因是服务器收到返回的加密后的密钥a/α，它不知道是不是自己网站产生的密钥。\n\n如何证明是客户端发送请求并且是客户端收到公钥并且是客户端生成密钥a使用公钥A加密后返回的？\n\n- 公信机构，提供证明，例如数字证书，服务器发送网站HTTPS信息前需要申请数字证书，证书存有持有者、持有者公钥、证书对应网址等信息，传数字证书给浏览器，标记此证书对应此网站，浏览器从证书取公钥就好了，不用明文传送公钥。\n\n- 那证书万一被篡改呢？给证书加个防伪标志，数字签名：使用证书内容生成一份签名，比对证书内容和签名是否一致。\n\n- CA数字签名制作（因为公信机构CA拥有服务端公钥私钥，CA对证书明文信息hash，hash使用私钥加密，得到数字签名）。\n- 证书明文和数字签名共同组成数字证书。颁发给网站。\n- 那浏览器如何验证是不是此网站的证书？浏览器使用CA机构的公钥解密签名，并通过证书明文计算签名，对比是否相等，相等则验证成功。\n\n\n\n具体过程如下：获取颁发证书，校验证书是否是CA颁发，服务器响应请求\n\n```\n\n                          CA机构→→2→→→证书明文与证书哈希后私钥加密\n                            ↑                   ↓\n                            ↑\t (服务器有CA私钥)   ↓\n                            1\t\t   (取证书)  \t  3\n(浏览器校验证书是否被替换)    某网站\t\t\t\t\t\t\t\t  ↓\n浏览器→→→→→HTTPS请求→→→→→→→→服务器←←←←←←4←←←←←←←带签名的证书\n(证书)←←←←←←←←←签名证书←←←←←← ↓ ↑\n  →用证书公钥加密客户端密钥→→→→ ↓ ↑ 使用私钥解密客户端密钥存储sessionID\n （建立了安全的连接）          5  6   \n 每次使用客户端密钥加密发送信息← ↓ ↑ \t\t\t\t\t(校验)\n →每次使用服务端公钥加密发送信息 ↓ ↑\t\n                            验证\n                               → {用证书的公钥解密签名得到明文的哈希值}\n                               → {使用哈希函数处理证书明文得到哈希值}\n                               → {对比哈希值}\n                               → 如果相等，安全，没有被篡改\n                               → 如果不等，证书被篡改\n       (请求与响应)\n\n\n```\n\n加密解密的过程在分层网络模型中处于TCP之上的SSL/TSL层\n\n# 2. 常见的字段是什么？\nHost x.x.x 请求地址\ncontent-length 响应数据长度\ncontent-type 响应数据格式\ncontent-encoding 数据压缩格式\nconnection 用于保持长连接\naccept 声明接受的数据格式\naccept-encoding 可接受的压缩格式\n\n\n# 参考\n\n[彻底搞懂HTTPS的加密机制](https://zhuanlan.zhihu.com/p/43789231)\n\n[彻底搞懂HTTP协议](http://www.akathink.com/2016/07/28/彻底搞懂HTTP协议/)\n\n[彻底搞懂HTTP和HTTPS协议](https://liyucang-git.github.io/2019/01/02/彻底搞懂HTTP和HTTPS协议/)\n\n[彻底弄懂HTTP缓存机制及原理](https://www.cnblogs.com/chenqf/p/6386163.html)\n\n[Java Security：公钥私钥、数字签名、消息摘要是什么](https://www.cnblogs.com/f1194361820/p/4260025.html)\n\n[ssl/tls是什么？是怎么工作的？](https://zhuanlan.zhihu.com/p/53329356)\n\n\n\n# 2. XSS CSRF\nxss：用户过分信任网站，放任来自浏览器地址栏代表的那个网站代码在自己本地任意执行。如果没有浏览器的安全机制限制，xss代码可以在用户浏览器为所欲为；\n\ncsrf：网站过分信任用户，放任来自所谓通过访问控制机制的代表合法用户的请求执行网站的某个特定功能。","source":"_posts/4.计算机网络浅谈.md","raw":"---\ntitle: 计算机网络浅谈\ncategories: \n- [技术]\ntags: [网络, HTTP, HTTPS]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:24:24\nupdated: 2020-12-03 14:24:27\nkeywords: 计算机网络\ndescription: \npasswords:\nimg: \nabstract: 网络\n---\n\n# 1. HTTP HTTPS\n\n### 什么是HTTP HTTPS？\n\nHyper Text Transfer Protocal 超文本传输协议，是实现数据通信的基石\n\nHTTP协议用于客户端和服务端之间的通信，通过请求和响应的交互达成通信（肯定是先从客户端开始建立通信的，服务器端在没有接收到任何请求之前不会发送响应）\n\nHTTP是无状态的协议，为了实现期望的保存状态的功能，引入了Cookie技术\n\n请求服务器的方法 `post get put head delete options trace connect`\n\n```markdown\nGET 请求资源，服务器解析后返回数据，数据在URL可见，直接传输不安全，记得转码\nPOST 传输实体数据，安全，数据在请求体里面\n× PUT 传输文件，鉴于HTTP／1.1的PUT方法自身不带验证机制，任何人都可以上传文件，存在安全性问题，因此一般的网站不建议使用该方法。若配合Web应用程序的验证机制，或架构设计采用REST标准的同类Web网站，就可能会开放使用PUT方法。\nHEAD 同GET类似，只是为了获得报文首部，用于确认URL有效性以及更新日期\n× DELETE 和PUT一样不带验证\nOPTIONS 查询针对请求URL指定的资源支持的方法\nTRACE 追踪路径，客户端通过TRACE方法可以查询发送出去的请求是怎样被加工修改／篡改的。这是因为，想要连接到源目标服务器可能会通过代理中转，TRACE方法就是用来确认连接过程中发生的一系列操作。\nCONNECT  要求用隧道协议连接代理。CONNECT方法在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL和TLS协议把通信内容经网络隧道传输。\n```\n\n无连接 无状态如何解决？\n\nkeep-alive 只要任意一端没有提出断开连接，则保持TCP连接。管线化，持久连接促进管线化，不必等待下一次请求，就可以发送多个响应。\n\ncookie 通过在请求和响应报文中写入cookie信息来控制客户端状态。\n\n返回结果的HTTP状态码\n\n- 1XX 表示服务器已经接收了客户端请求，客户端可继续发送请求\n- 2XX 请求正常处理完毕\n- 3XX 需要进行附加操作以完成请求\n- 4XX 表示客户端的请求有非法内容\n- 5XX 服务器处理请求出错\n\n通信数据转发程序：代理、网关、隧道\n\n使用代理服务器的理由：利用缓存技术减少网络带宽的流量。代理有多种使用方法，按两种基准分类。一类是 **是否使用缓存** ，另一种是 **是否会修改报文**。\n\n利用网关可以由HTTP请求转化为其他协议通信。\n\n利用缓存可减少对源服务器的访问，可以节省通信流量和通信时间。\n使用缓存的时候，要注意缓存的有效期限，确保我们发起请求获取的是最新的数据资源。\n\n> HTTP 有以下不足：\n>\n> - 通信使用明文（不加密），内容可能会被窃听\n> - 不验证通信方的身份，因此有可能遭遇伪装\n> - 无法证明报文的完整性，所以有可能已遭篡改\n>\n> HTTP + 加密 + 认证 + 完整性 = HTTPS\n>\n> HTTPS并非是应用层的一种新协议。只是HTTP通信接口部分用SSL和TSL协议代替而已，通常，HTTP直接和TCP通信，当使用SSL时，则演变成先和SSL通信，再由SSL和TCP通信了。简言之，所谓HTTPS其实就是身披SSL协议这层外壳的HTTP。\n>\n> 当采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能。而且SSL协议是独立于HTTP的协议，所以不光是HTTP协议，其他运行在应用层的SMTP和Telnet等协议均可配合SSL协议使用。可以说SSL是当今世界上应用最为广泛的网络安全技术。\n>\n> 在讲解SSL之前我们需要首先了解一下加密方法，加密分为对称加密和非对称加密。HTTPS协议则是采用的两者混合的实现方式，为什么要结合两种的实现方式呢？这是因为它们都各自存在自己的优缺点。对于对称加密来说，密钥的传输交换是不安全的，但是效率比较高，而对于非对称加密，是不用担心传输的密钥安全性的问题的，因为我们传递的是公开密钥，任何人都可以获得，但是缺点是效率比较低。对于公钥私钥、数字签名，这个哥们已经总结的相当好了，可以参考一下这篇[文章](http://www.cnblogs.com/f1194361820/archive/2015/01/29/4260025.html)。\n\n### 为什么需要加密\n\nhttp内容是明文传输的，明文数据经过中间代理服务器、路由，如果信息在传输过程中被劫持，内容将会是完全暴露的，甚至可以篡改，这称为中间人攻击。\n\n### 对称加密\n\n一段密钥代码，它可以解密原本的内容。\n\n获取信息的一方持有这个密钥才能和解密获得信息。\n\n### 只有对称加密可行吗\n\n如果通信双方本来就持有密钥，安全性没问题，密钥怎么来的，肯定是浏览器发出请求，服务器响应，告诉双方“你用这个密钥解密”，这样就完全把密钥暴露在外，还是不安全的。\n\n### 非对称加密\n\n公钥内容用私钥解，私钥内容用公钥解，耗时\n\n### 非对称与对称结合\n\n首先，服务器持有公钥A，私钥A，明文传送公钥A传送到客户端，客户端网站生成密钥a，使用服务器的公钥A加密密钥a发送报文到服务端，服务端接受报文并使用密钥A解密得到密钥a，这样的密钥a看似是安全的，双方可以使用密钥a加密解密。但是，如果明文传送的公钥A被中间人获取，并生成密钥α，使用公钥A加密α发送报文，这样双方都获得了α，使用α加密解密，中间人就使用α密钥攻击服务器了。\n\n发生这种情况的原因是服务器收到返回的加密后的密钥a/α，它不知道是不是自己网站产生的密钥。\n\n如何证明是客户端发送请求并且是客户端收到公钥并且是客户端生成密钥a使用公钥A加密后返回的？\n\n- 公信机构，提供证明，例如数字证书，服务器发送网站HTTPS信息前需要申请数字证书，证书存有持有者、持有者公钥、证书对应网址等信息，传数字证书给浏览器，标记此证书对应此网站，浏览器从证书取公钥就好了，不用明文传送公钥。\n\n- 那证书万一被篡改呢？给证书加个防伪标志，数字签名：使用证书内容生成一份签名，比对证书内容和签名是否一致。\n\n- CA数字签名制作（因为公信机构CA拥有服务端公钥私钥，CA对证书明文信息hash，hash使用私钥加密，得到数字签名）。\n- 证书明文和数字签名共同组成数字证书。颁发给网站。\n- 那浏览器如何验证是不是此网站的证书？浏览器使用CA机构的公钥解密签名，并通过证书明文计算签名，对比是否相等，相等则验证成功。\n\n\n\n具体过程如下：获取颁发证书，校验证书是否是CA颁发，服务器响应请求\n\n```\n\n                          CA机构→→2→→→证书明文与证书哈希后私钥加密\n                            ↑                   ↓\n                            ↑\t (服务器有CA私钥)   ↓\n                            1\t\t   (取证书)  \t  3\n(浏览器校验证书是否被替换)    某网站\t\t\t\t\t\t\t\t  ↓\n浏览器→→→→→HTTPS请求→→→→→→→→服务器←←←←←←4←←←←←←←带签名的证书\n(证书)←←←←←←←←←签名证书←←←←←← ↓ ↑\n  →用证书公钥加密客户端密钥→→→→ ↓ ↑ 使用私钥解密客户端密钥存储sessionID\n （建立了安全的连接）          5  6   \n 每次使用客户端密钥加密发送信息← ↓ ↑ \t\t\t\t\t(校验)\n →每次使用服务端公钥加密发送信息 ↓ ↑\t\n                            验证\n                               → {用证书的公钥解密签名得到明文的哈希值}\n                               → {使用哈希函数处理证书明文得到哈希值}\n                               → {对比哈希值}\n                               → 如果相等，安全，没有被篡改\n                               → 如果不等，证书被篡改\n       (请求与响应)\n\n\n```\n\n加密解密的过程在分层网络模型中处于TCP之上的SSL/TSL层\n\n# 2. 常见的字段是什么？\nHost x.x.x 请求地址\ncontent-length 响应数据长度\ncontent-type 响应数据格式\ncontent-encoding 数据压缩格式\nconnection 用于保持长连接\naccept 声明接受的数据格式\naccept-encoding 可接受的压缩格式\n\n\n# 参考\n\n[彻底搞懂HTTPS的加密机制](https://zhuanlan.zhihu.com/p/43789231)\n\n[彻底搞懂HTTP协议](http://www.akathink.com/2016/07/28/彻底搞懂HTTP协议/)\n\n[彻底搞懂HTTP和HTTPS协议](https://liyucang-git.github.io/2019/01/02/彻底搞懂HTTP和HTTPS协议/)\n\n[彻底弄懂HTTP缓存机制及原理](https://www.cnblogs.com/chenqf/p/6386163.html)\n\n[Java Security：公钥私钥、数字签名、消息摘要是什么](https://www.cnblogs.com/f1194361820/p/4260025.html)\n\n[ssl/tls是什么？是怎么工作的？](https://zhuanlan.zhihu.com/p/53329356)\n\n\n\n# 2. XSS CSRF\nxss：用户过分信任网站，放任来自浏览器地址栏代表的那个网站代码在自己本地任意执行。如果没有浏览器的安全机制限制，xss代码可以在用户浏览器为所欲为；\n\ncsrf：网站过分信任用户，放任来自所谓通过访问控制机制的代表合法用户的请求执行网站的某个特定功能。","slug":"4.计算机网络浅谈","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrv00113th8a3v335q0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-HTTP-HTTPS\"><a href=\"#1-HTTP-HTTPS\" class=\"headerlink\" title=\"1. HTTP HTTPS\"></a>1. HTTP HTTPS</h1><h3 id=\"什么是HTTP-HTTPS？\"><a href=\"#什么是HTTP-HTTPS？\" class=\"headerlink\" title=\"什么是HTTP HTTPS？\"></a>什么是HTTP HTTPS？</h3><p>Hyper Text Transfer Protocal 超文本传输协议，是实现数据通信的基石</p>\n<p>HTTP协议用于客户端和服务端之间的通信，通过请求和响应的交互达成通信（肯定是先从客户端开始建立通信的，服务器端在没有接收到任何请求之前不会发送响应）</p>\n<p>HTTP是无状态的协议，为了实现期望的保存状态的功能，引入了Cookie技术</p>\n<p>请求服务器的方法 <code>post get put head delete options trace connect</code></p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\">GET 请求资源，服务器解析后返回数据，数据在URL可见，直接传输不安全，记得转码\nPOST 传输实体数据，安全，数据在请求体里面\n× PUT 传输文件，鉴于HTTP／1.1的PUT方法自身不带验证机制，任何人都可以上传文件，存在安全性问题，因此一般的网站不建议使用该方法。若配合Web应用程序的验证机制，或架构设计采用REST标准的同类Web网站，就可能会开放使用PUT方法。\nHEAD 同GET类似，只是为了获得报文首部，用于确认URL有效性以及更新日期\n× DELETE 和PUT一样不带验证\nOPTIONS 查询针对请求URL指定的资源支持的方法\nTRACE 追踪路径，客户端通过TRACE方法可以查询发送出去的请求是怎样被加工修改／篡改的。这是因为，想要连接到源目标服务器可能会通过代理中转，TRACE方法就是用来确认连接过程中发生的一系列操作。\nCONNECT  要求用隧道协议连接代理。CONNECT方法在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL和TLS协议把通信内容经网络隧道传输。</code></pre>\n<p>无连接 无状态如何解决？</p>\n<p>keep-alive 只要任意一端没有提出断开连接，则保持TCP连接。管线化，持久连接促进管线化，不必等待下一次请求，就可以发送多个响应。</p>\n<p>cookie 通过在请求和响应报文中写入cookie信息来控制客户端状态。</p>\n<p>返回结果的HTTP状态码</p>\n<ul>\n<li>1XX 表示服务器已经接收了客户端请求，客户端可继续发送请求</li>\n<li>2XX 请求正常处理完毕</li>\n<li>3XX 需要进行附加操作以完成请求</li>\n<li>4XX 表示客户端的请求有非法内容</li>\n<li>5XX 服务器处理请求出错</li>\n</ul>\n<p>通信数据转发程序：代理、网关、隧道</p>\n<p>使用代理服务器的理由：利用缓存技术减少网络带宽的流量。代理有多种使用方法，按两种基准分类。一类是 <strong>是否使用缓存</strong> ，另一种是 <strong>是否会修改报文</strong>。</p>\n<p>利用网关可以由HTTP请求转化为其他协议通信。</p>\n<p>利用缓存可减少对源服务器的访问，可以节省通信流量和通信时间。<br>使用缓存的时候，要注意缓存的有效期限，确保我们发起请求获取的是最新的数据资源。</p>\n<blockquote>\n<p>HTTP 有以下不足：</p>\n<ul>\n<li>通信使用明文（不加密），内容可能会被窃听</li>\n<li>不验证通信方的身份，因此有可能遭遇伪装</li>\n<li>无法证明报文的完整性，所以有可能已遭篡改</li>\n</ul>\n<p>HTTP + 加密 + 认证 + 完整性 = HTTPS</p>\n<p>HTTPS并非是应用层的一种新协议。只是HTTP通信接口部分用SSL和TSL协议代替而已，通常，HTTP直接和TCP通信，当使用SSL时，则演变成先和SSL通信，再由SSL和TCP通信了。简言之，所谓HTTPS其实就是身披SSL协议这层外壳的HTTP。</p>\n<p>当采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能。而且SSL协议是独立于HTTP的协议，所以不光是HTTP协议，其他运行在应用层的SMTP和Telnet等协议均可配合SSL协议使用。可以说SSL是当今世界上应用最为广泛的网络安全技术。</p>\n<p>在讲解SSL之前我们需要首先了解一下加密方法，加密分为对称加密和非对称加密。HTTPS协议则是采用的两者混合的实现方式，为什么要结合两种的实现方式呢？这是因为它们都各自存在自己的优缺点。对于对称加密来说，密钥的传输交换是不安全的，但是效率比较高，而对于非对称加密，是不用担心传输的密钥安全性的问题的，因为我们传递的是公开密钥，任何人都可以获得，但是缺点是效率比较低。对于公钥私钥、数字签名，这个哥们已经总结的相当好了，可以参考一下这篇<a href=\"http://www.cnblogs.com/f1194361820/archive/2015/01/29/4260025.html\">文章</a>。</p>\n</blockquote>\n<h3 id=\"为什么需要加密\"><a href=\"#为什么需要加密\" class=\"headerlink\" title=\"为什么需要加密\"></a>为什么需要加密</h3><p>http内容是明文传输的，明文数据经过中间代理服务器、路由，如果信息在传输过程中被劫持，内容将会是完全暴露的，甚至可以篡改，这称为中间人攻击。</p>\n<h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a>对称加密</h3><p>一段密钥代码，它可以解密原本的内容。</p>\n<p>获取信息的一方持有这个密钥才能和解密获得信息。</p>\n<h3 id=\"只有对称加密可行吗\"><a href=\"#只有对称加密可行吗\" class=\"headerlink\" title=\"只有对称加密可行吗\"></a>只有对称加密可行吗</h3><p>如果通信双方本来就持有密钥，安全性没问题，密钥怎么来的，肯定是浏览器发出请求，服务器响应，告诉双方“你用这个密钥解密”，这样就完全把密钥暴露在外，还是不安全的。</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a>非对称加密</h3><p>公钥内容用私钥解，私钥内容用公钥解，耗时</p>\n<h3 id=\"非对称与对称结合\"><a href=\"#非对称与对称结合\" class=\"headerlink\" title=\"非对称与对称结合\"></a>非对称与对称结合</h3><p>首先，服务器持有公钥A，私钥A，明文传送公钥A传送到客户端，客户端网站生成密钥a，使用服务器的公钥A加密密钥a发送报文到服务端，服务端接受报文并使用密钥A解密得到密钥a，这样的密钥a看似是安全的，双方可以使用密钥a加密解密。但是，如果明文传送的公钥A被中间人获取，并生成密钥α，使用公钥A加密α发送报文，这样双方都获得了α，使用α加密解密，中间人就使用α密钥攻击服务器了。</p>\n<p>发生这种情况的原因是服务器收到返回的加密后的密钥a/α，它不知道是不是自己网站产生的密钥。</p>\n<p>如何证明是客户端发送请求并且是客户端收到公钥并且是客户端生成密钥a使用公钥A加密后返回的？</p>\n<ul>\n<li><p>公信机构，提供证明，例如数字证书，服务器发送网站HTTPS信息前需要申请数字证书，证书存有持有者、持有者公钥、证书对应网址等信息，传数字证书给浏览器，标记此证书对应此网站，浏览器从证书取公钥就好了，不用明文传送公钥。</p>\n</li>\n<li><p>那证书万一被篡改呢？给证书加个防伪标志，数字签名：使用证书内容生成一份签名，比对证书内容和签名是否一致。</p>\n</li>\n<li><p>CA数字签名制作（因为公信机构CA拥有服务端公钥私钥，CA对证书明文信息hash，hash使用私钥加密，得到数字签名）。</p>\n</li>\n<li><p>证书明文和数字签名共同组成数字证书。颁发给网站。</p>\n</li>\n<li><p>那浏览器如何验证是不是此网站的证书？浏览器使用CA机构的公钥解密签名，并通过证书明文计算签名，对比是否相等，相等则验证成功。</p>\n</li>\n</ul>\n<p>具体过程如下：获取颁发证书，校验证书是否是CA颁发，服务器响应请求</p>\n<pre><code>\n                          CA机构→→2→→→证书明文与证书哈希后私钥加密\n                            ↑                   ↓\n                            ↑     (服务器有CA私钥)   ↓\n                            1           (取证书)        3\n(浏览器校验证书是否被替换)    某网站                                  ↓\n浏览器→→→→→HTTPS请求→→→→→→→→服务器←←←←←←4←←←←←←←带签名的证书\n(证书)←←←←←←←←←签名证书←←←←←← ↓ ↑\n  →用证书公钥加密客户端密钥→→→→ ↓ ↑ 使用私钥解密客户端密钥存储sessionID\n （建立了安全的连接）          5  6   \n 每次使用客户端密钥加密发送信息← ↓ ↑                     (校验)\n →每次使用服务端公钥加密发送信息 ↓ ↑    \n                            验证\n                               → &#123;用证书的公钥解密签名得到明文的哈希值&#125;\n                               → &#123;使用哈希函数处理证书明文得到哈希值&#125;\n                               → &#123;对比哈希值&#125;\n                               → 如果相等，安全，没有被篡改\n                               → 如果不等，证书被篡改\n       (请求与响应)\n\n</code></pre>\n<p>加密解密的过程在分层网络模型中处于TCP之上的SSL/TSL层</p>\n<h1 id=\"2-常见的字段是什么？\"><a href=\"#2-常见的字段是什么？\" class=\"headerlink\" title=\"2. 常见的字段是什么？\"></a>2. 常见的字段是什么？</h1><p>Host x.x.x 请求地址<br>content-length 响应数据长度<br>content-type 响应数据格式<br>content-encoding 数据压缩格式<br>connection 用于保持长连接<br>accept 声明接受的数据格式<br>accept-encoding 可接受的压缩格式</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/43789231\">彻底搞懂HTTPS的加密机制</a></p>\n<p><a href=\"http://www.akathink.com/2016/07/28/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82HTTP%E5%8D%8F%E8%AE%AE/\">彻底搞懂HTTP协议</a></p>\n<p><a href=\"https://liyucang-git.github.io/2019/01/02/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82HTTP%E5%92%8CHTTPS%E5%8D%8F%E8%AE%AE/\">彻底搞懂HTTP和HTTPS协议</a></p>\n<p><a href=\"https://www.cnblogs.com/chenqf/p/6386163.html\">彻底弄懂HTTP缓存机制及原理</a></p>\n<p><a href=\"https://www.cnblogs.com/f1194361820/p/4260025.html\">Java Security：公钥私钥、数字签名、消息摘要是什么</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/53329356\">ssl/tls是什么？是怎么工作的？</a></p>\n<h1 id=\"2-XSS-CSRF\"><a href=\"#2-XSS-CSRF\" class=\"headerlink\" title=\"2. XSS CSRF\"></a>2. XSS CSRF</h1><p>xss：用户过分信任网站，放任来自浏览器地址栏代表的那个网站代码在自己本地任意执行。如果没有浏览器的安全机制限制，xss代码可以在用户浏览器为所欲为；</p>\n<p>csrf：网站过分信任用户，放任来自所谓通过访问控制机制的代表合法用户的请求执行网站的某个特定功能。</p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/Copyright.png","excerpt":"","more":"<h1 id=\"1-HTTP-HTTPS\"><a href=\"#1-HTTP-HTTPS\" class=\"headerlink\" title=\"1. HTTP HTTPS\"></a>1. HTTP HTTPS</h1><h3 id=\"什么是HTTP-HTTPS？\"><a href=\"#什么是HTTP-HTTPS？\" class=\"headerlink\" title=\"什么是HTTP HTTPS？\"></a>什么是HTTP HTTPS？</h3><p>Hyper Text Transfer Protocal 超文本传输协议，是实现数据通信的基石</p>\n<p>HTTP协议用于客户端和服务端之间的通信，通过请求和响应的交互达成通信（肯定是先从客户端开始建立通信的，服务器端在没有接收到任何请求之前不会发送响应）</p>\n<p>HTTP是无状态的协议，为了实现期望的保存状态的功能，引入了Cookie技术</p>\n<p>请求服务器的方法 <code>post get put head delete options trace connect</code></p>\n<pre><code class=\"markdown\">GET 请求资源，服务器解析后返回数据，数据在URL可见，直接传输不安全，记得转码\nPOST 传输实体数据，安全，数据在请求体里面\n× PUT 传输文件，鉴于HTTP／1.1的PUT方法自身不带验证机制，任何人都可以上传文件，存在安全性问题，因此一般的网站不建议使用该方法。若配合Web应用程序的验证机制，或架构设计采用REST标准的同类Web网站，就可能会开放使用PUT方法。\nHEAD 同GET类似，只是为了获得报文首部，用于确认URL有效性以及更新日期\n× DELETE 和PUT一样不带验证\nOPTIONS 查询针对请求URL指定的资源支持的方法\nTRACE 追踪路径，客户端通过TRACE方法可以查询发送出去的请求是怎样被加工修改／篡改的。这是因为，想要连接到源目标服务器可能会通过代理中转，TRACE方法就是用来确认连接过程中发生的一系列操作。\nCONNECT  要求用隧道协议连接代理。CONNECT方法在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL和TLS协议把通信内容经网络隧道传输。</code></pre>\n<p>无连接 无状态如何解决？</p>\n<p>keep-alive 只要任意一端没有提出断开连接，则保持TCP连接。管线化，持久连接促进管线化，不必等待下一次请求，就可以发送多个响应。</p>\n<p>cookie 通过在请求和响应报文中写入cookie信息来控制客户端状态。</p>\n<p>返回结果的HTTP状态码</p>\n<ul>\n<li>1XX 表示服务器已经接收了客户端请求，客户端可继续发送请求</li>\n<li>2XX 请求正常处理完毕</li>\n<li>3XX 需要进行附加操作以完成请求</li>\n<li>4XX 表示客户端的请求有非法内容</li>\n<li>5XX 服务器处理请求出错</li>\n</ul>\n<p>通信数据转发程序：代理、网关、隧道</p>\n<p>使用代理服务器的理由：利用缓存技术减少网络带宽的流量。代理有多种使用方法，按两种基准分类。一类是 <strong>是否使用缓存</strong> ，另一种是 <strong>是否会修改报文</strong>。</p>\n<p>利用网关可以由HTTP请求转化为其他协议通信。</p>\n<p>利用缓存可减少对源服务器的访问，可以节省通信流量和通信时间。<br>使用缓存的时候，要注意缓存的有效期限，确保我们发起请求获取的是最新的数据资源。</p>\n<blockquote>\n<p>HTTP 有以下不足：</p>\n<ul>\n<li>通信使用明文（不加密），内容可能会被窃听</li>\n<li>不验证通信方的身份，因此有可能遭遇伪装</li>\n<li>无法证明报文的完整性，所以有可能已遭篡改</li>\n</ul>\n<p>HTTP + 加密 + 认证 + 完整性 = HTTPS</p>\n<p>HTTPS并非是应用层的一种新协议。只是HTTP通信接口部分用SSL和TSL协议代替而已，通常，HTTP直接和TCP通信，当使用SSL时，则演变成先和SSL通信，再由SSL和TCP通信了。简言之，所谓HTTPS其实就是身披SSL协议这层外壳的HTTP。</p>\n<p>当采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能。而且SSL协议是独立于HTTP的协议，所以不光是HTTP协议，其他运行在应用层的SMTP和Telnet等协议均可配合SSL协议使用。可以说SSL是当今世界上应用最为广泛的网络安全技术。</p>\n<p>在讲解SSL之前我们需要首先了解一下加密方法，加密分为对称加密和非对称加密。HTTPS协议则是采用的两者混合的实现方式，为什么要结合两种的实现方式呢？这是因为它们都各自存在自己的优缺点。对于对称加密来说，密钥的传输交换是不安全的，但是效率比较高，而对于非对称加密，是不用担心传输的密钥安全性的问题的，因为我们传递的是公开密钥，任何人都可以获得，但是缺点是效率比较低。对于公钥私钥、数字签名，这个哥们已经总结的相当好了，可以参考一下这篇<a href=\"http://www.cnblogs.com/f1194361820/archive/2015/01/29/4260025.html\">文章</a>。</p>\n</blockquote>\n<h3 id=\"为什么需要加密\"><a href=\"#为什么需要加密\" class=\"headerlink\" title=\"为什么需要加密\"></a>为什么需要加密</h3><p>http内容是明文传输的，明文数据经过中间代理服务器、路由，如果信息在传输过程中被劫持，内容将会是完全暴露的，甚至可以篡改，这称为中间人攻击。</p>\n<h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a>对称加密</h3><p>一段密钥代码，它可以解密原本的内容。</p>\n<p>获取信息的一方持有这个密钥才能和解密获得信息。</p>\n<h3 id=\"只有对称加密可行吗\"><a href=\"#只有对称加密可行吗\" class=\"headerlink\" title=\"只有对称加密可行吗\"></a>只有对称加密可行吗</h3><p>如果通信双方本来就持有密钥，安全性没问题，密钥怎么来的，肯定是浏览器发出请求，服务器响应，告诉双方“你用这个密钥解密”，这样就完全把密钥暴露在外，还是不安全的。</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a>非对称加密</h3><p>公钥内容用私钥解，私钥内容用公钥解，耗时</p>\n<h3 id=\"非对称与对称结合\"><a href=\"#非对称与对称结合\" class=\"headerlink\" title=\"非对称与对称结合\"></a>非对称与对称结合</h3><p>首先，服务器持有公钥A，私钥A，明文传送公钥A传送到客户端，客户端网站生成密钥a，使用服务器的公钥A加密密钥a发送报文到服务端，服务端接受报文并使用密钥A解密得到密钥a，这样的密钥a看似是安全的，双方可以使用密钥a加密解密。但是，如果明文传送的公钥A被中间人获取，并生成密钥α，使用公钥A加密α发送报文，这样双方都获得了α，使用α加密解密，中间人就使用α密钥攻击服务器了。</p>\n<p>发生这种情况的原因是服务器收到返回的加密后的密钥a/α，它不知道是不是自己网站产生的密钥。</p>\n<p>如何证明是客户端发送请求并且是客户端收到公钥并且是客户端生成密钥a使用公钥A加密后返回的？</p>\n<ul>\n<li><p>公信机构，提供证明，例如数字证书，服务器发送网站HTTPS信息前需要申请数字证书，证书存有持有者、持有者公钥、证书对应网址等信息，传数字证书给浏览器，标记此证书对应此网站，浏览器从证书取公钥就好了，不用明文传送公钥。</p>\n</li>\n<li><p>那证书万一被篡改呢？给证书加个防伪标志，数字签名：使用证书内容生成一份签名，比对证书内容和签名是否一致。</p>\n</li>\n<li><p>CA数字签名制作（因为公信机构CA拥有服务端公钥私钥，CA对证书明文信息hash，hash使用私钥加密，得到数字签名）。</p>\n</li>\n<li><p>证书明文和数字签名共同组成数字证书。颁发给网站。</p>\n</li>\n<li><p>那浏览器如何验证是不是此网站的证书？浏览器使用CA机构的公钥解密签名，并通过证书明文计算签名，对比是否相等，相等则验证成功。</p>\n</li>\n</ul>\n<p>具体过程如下：获取颁发证书，校验证书是否是CA颁发，服务器响应请求</p>\n<pre><code>\n                          CA机构→→2→→→证书明文与证书哈希后私钥加密\n                            ↑                   ↓\n                            ↑     (服务器有CA私钥)   ↓\n                            1           (取证书)        3\n(浏览器校验证书是否被替换)    某网站                                  ↓\n浏览器→→→→→HTTPS请求→→→→→→→→服务器←←←←←←4←←←←←←←带签名的证书\n(证书)←←←←←←←←←签名证书←←←←←← ↓ ↑\n  →用证书公钥加密客户端密钥→→→→ ↓ ↑ 使用私钥解密客户端密钥存储sessionID\n （建立了安全的连接）          5  6   \n 每次使用客户端密钥加密发送信息← ↓ ↑                     (校验)\n →每次使用服务端公钥加密发送信息 ↓ ↑    \n                            验证\n                               → &#123;用证书的公钥解密签名得到明文的哈希值&#125;\n                               → &#123;使用哈希函数处理证书明文得到哈希值&#125;\n                               → &#123;对比哈希值&#125;\n                               → 如果相等，安全，没有被篡改\n                               → 如果不等，证书被篡改\n       (请求与响应)\n\n</code></pre>\n<p>加密解密的过程在分层网络模型中处于TCP之上的SSL/TSL层</p>\n<h1 id=\"2-常见的字段是什么？\"><a href=\"#2-常见的字段是什么？\" class=\"headerlink\" title=\"2. 常见的字段是什么？\"></a>2. 常见的字段是什么？</h1><p>Host x.x.x 请求地址<br>content-length 响应数据长度<br>content-type 响应数据格式<br>content-encoding 数据压缩格式<br>connection 用于保持长连接<br>accept 声明接受的数据格式<br>accept-encoding 可接受的压缩格式</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/43789231\">彻底搞懂HTTPS的加密机制</a></p>\n<p><a href=\"http://www.akathink.com/2016/07/28/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82HTTP%E5%8D%8F%E8%AE%AE/\">彻底搞懂HTTP协议</a></p>\n<p><a href=\"https://liyucang-git.github.io/2019/01/02/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82HTTP%E5%92%8CHTTPS%E5%8D%8F%E8%AE%AE/\">彻底搞懂HTTP和HTTPS协议</a></p>\n<p><a href=\"https://www.cnblogs.com/chenqf/p/6386163.html\">彻底弄懂HTTP缓存机制及原理</a></p>\n<p><a href=\"https://www.cnblogs.com/f1194361820/p/4260025.html\">Java Security：公钥私钥、数字签名、消息摘要是什么</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/53329356\">ssl/tls是什么？是怎么工作的？</a></p>\n<h1 id=\"2-XSS-CSRF\"><a href=\"#2-XSS-CSRF\" class=\"headerlink\" title=\"2. XSS CSRF\"></a>2. XSS CSRF</h1><p>xss：用户过分信任网站，放任来自浏览器地址栏代表的那个网站代码在自己本地任意执行。如果没有浏览器的安全机制限制，xss代码可以在用户浏览器为所欲为；</p>\n<p>csrf：网站过分信任用户，放任来自所谓通过访问控制机制的代表合法用户的请求执行网站的某个特定功能。</p>\n"},{"title":"Git命令","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:25:22.000Z","updated":"2020-12-03T06:25:25.000Z","keywords":"Git","description":null,"passwords":null,"img":null,"abstract":"Git版本管理常用命令","_content":"\n# 1. 远程资源库（origin）\n\n本地的代码修改、提交都是origin的工作副本。\n\n`git clone 远程资源库链接`\n\n# 2. 本地资源库\n\n常用三连\n\n`git add . && git commit -m “” && git push` \n\n```shell\n本地资源库维护三棵树（工作目录，缓存区stage，本地资源库HEAD）\ngit add . 是把工作目录的修改暂存到缓存（stage）中，添加index\ngit commit -m \"\" 把本次缓存中的修改提交到本地资源库，此时HEAD指向最近一次的提交\ngit pull 之后自动合并解决冲突后再 git push 推送到远程资源库，同步功能\n```\n\n\n\n```shell\n# 通用化\n\n# 暂存\ngit add <fileName>\ngit add *\n\n# 提交\ngit commit -m \"\"\n\n# 推送\ngit push\ngit push origin <branchName>\ngit remote add origin <server> # 如果没有克隆现有仓库，需要连接\n\n# 分支\ngit checkout -b newBranchAndChange # 从此时的分支新建分支并且换过去\ngit checkout newBranch 如果没有此新分支，# 从此时的分支新建。如果有，则切换过去\ngit checkout -d branchName # 如果有此分支，则删除分支\ngit push origin <branch> # 推送本地分支到远程资源库，如果不推送，尽本地自己可见\n\n# 更新与合并\ngit pull # 更新并自动合并，如果有冲突，则需要手动处理，冲突解决后，git add <conflictFlieName>\ngit pull = git fetch && git merge\ngit merge <branch> # 合并branch到当前分支\ngit diff <source> <target> # 查看合并改动之前的差异\n\n# 标签 \ngit tag <tagName> <commitID> # 给提交ID创建tag\ngit log 查看提交记录\n\n# 回退\ngit checkout -- <fileName> HEAD中的最新内容替换掉当前工作目录中的文件，缓存区无影响\ngit fetch orgin && git reset --hard origin/master 丢弃本地改动与提交，拉取远程并将本地分支指向它\ngit checkout --mixed ID/HEAD 撤销commit，撤销add，代码保留\ngit checkout --soft ID/HEAD 撤销commit，不撤销add，代码保留\ngit checkout --hard ID/HEAD 撤销commit，撤销add，代码删除，成为ID的commit状态\n\n# 改动保存\ngit stash  将当前改动保存到工作区栈中\ngit stash pop 将工作区栈保存的改动弹栈生效\n\n# 变基\ngit checkout --rebase orgin/<branchName>\n\n# 内建图形化git gitk\n# 彩色git输出 git config color.ui true\n\n# 取消跟踪\ngit rm <fileName>\n```\n\n# 3. git设置\n\n全局设置用户目录下.gitconfig \n\n```shell\n[user]\n\tname = xq773939719\n\temail = 773939719@qq.com\n[filter \"lfs\"]\n\tclean = git-lfs clean -- %f\n\tsmudge = git-lfs smudge -- %f\n\tprocess = git-lfs filter-process\n\trequired = true\n[core]\n\texcludesfile = /Users/xq/.gitignore_global\n\tautocrlf = input\n```\n\n# 4. SVN与Git\n\n> SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。\n>\n> Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。\n\n\n\n[参考](https://www.bootcss.com/p/git-guide/)\n","source":"_posts/5.Git命令.md","raw":"---\ntitle: Git命令\ncategories: \n- [技术]\ntags: [网络, HTTP, HTTPS]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:25:22\nupdated: 2020-12-03 14:25:25\nkeywords: Git\ndescription: \npasswords:\nimg: \nabstract: Git版本管理常用命令\n---\n\n# 1. 远程资源库（origin）\n\n本地的代码修改、提交都是origin的工作副本。\n\n`git clone 远程资源库链接`\n\n# 2. 本地资源库\n\n常用三连\n\n`git add . && git commit -m “” && git push` \n\n```shell\n本地资源库维护三棵树（工作目录，缓存区stage，本地资源库HEAD）\ngit add . 是把工作目录的修改暂存到缓存（stage）中，添加index\ngit commit -m \"\" 把本次缓存中的修改提交到本地资源库，此时HEAD指向最近一次的提交\ngit pull 之后自动合并解决冲突后再 git push 推送到远程资源库，同步功能\n```\n\n\n\n```shell\n# 通用化\n\n# 暂存\ngit add <fileName>\ngit add *\n\n# 提交\ngit commit -m \"\"\n\n# 推送\ngit push\ngit push origin <branchName>\ngit remote add origin <server> # 如果没有克隆现有仓库，需要连接\n\n# 分支\ngit checkout -b newBranchAndChange # 从此时的分支新建分支并且换过去\ngit checkout newBranch 如果没有此新分支，# 从此时的分支新建。如果有，则切换过去\ngit checkout -d branchName # 如果有此分支，则删除分支\ngit push origin <branch> # 推送本地分支到远程资源库，如果不推送，尽本地自己可见\n\n# 更新与合并\ngit pull # 更新并自动合并，如果有冲突，则需要手动处理，冲突解决后，git add <conflictFlieName>\ngit pull = git fetch && git merge\ngit merge <branch> # 合并branch到当前分支\ngit diff <source> <target> # 查看合并改动之前的差异\n\n# 标签 \ngit tag <tagName> <commitID> # 给提交ID创建tag\ngit log 查看提交记录\n\n# 回退\ngit checkout -- <fileName> HEAD中的最新内容替换掉当前工作目录中的文件，缓存区无影响\ngit fetch orgin && git reset --hard origin/master 丢弃本地改动与提交，拉取远程并将本地分支指向它\ngit checkout --mixed ID/HEAD 撤销commit，撤销add，代码保留\ngit checkout --soft ID/HEAD 撤销commit，不撤销add，代码保留\ngit checkout --hard ID/HEAD 撤销commit，撤销add，代码删除，成为ID的commit状态\n\n# 改动保存\ngit stash  将当前改动保存到工作区栈中\ngit stash pop 将工作区栈保存的改动弹栈生效\n\n# 变基\ngit checkout --rebase orgin/<branchName>\n\n# 内建图形化git gitk\n# 彩色git输出 git config color.ui true\n\n# 取消跟踪\ngit rm <fileName>\n```\n\n# 3. git设置\n\n全局设置用户目录下.gitconfig \n\n```shell\n[user]\n\tname = xq773939719\n\temail = 773939719@qq.com\n[filter \"lfs\"]\n\tclean = git-lfs clean -- %f\n\tsmudge = git-lfs smudge -- %f\n\tprocess = git-lfs filter-process\n\trequired = true\n[core]\n\texcludesfile = /Users/xq/.gitignore_global\n\tautocrlf = input\n```\n\n# 4. SVN与Git\n\n> SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。\n>\n> Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。\n\n\n\n[参考](https://www.bootcss.com/p/git-guide/)\n","slug":"5.Git命令","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrw00133th8aw1sax1l","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-远程资源库（origin）\"><a href=\"#1-远程资源库（origin）\" class=\"headerlink\" title=\"1. 远程资源库（origin）\"></a>1. 远程资源库（origin）</h1><p>本地的代码修改、提交都是origin的工作副本。</p>\n<p><code>git clone 远程资源库链接</code></p>\n<h1 id=\"2-本地资源库\"><a href=\"#2-本地资源库\" class=\"headerlink\" title=\"2. 本地资源库\"></a>2. 本地资源库</h1><p>常用三连</p>\n<p><code>git add . &amp;&amp; git commit -m “” &amp;&amp; git push</code> </p>\n<pre class=\" language-shell\"><code class=\"language-shell\">本地资源库维护三棵树（工作目录，缓存区stage，本地资源库HEAD）\ngit add . 是把工作目录的修改暂存到缓存（stage）中，添加index\ngit commit -m \"\" 把本次缓存中的修改提交到本地资源库，此时HEAD指向最近一次的提交\ngit pull 之后自动合并解决冲突后再 git push 推送到远程资源库，同步功能</code></pre>\n<pre class=\" language-shell\"><code class=\"language-shell\"># 通用化\n\n# 暂存\ngit add <fileName>\ngit add *\n\n# 提交\ngit commit -m \"\"\n\n# 推送\ngit push\ngit push origin <branchName>\ngit remote add origin <server> # 如果没有克隆现有仓库，需要连接\n\n# 分支\ngit checkout -b newBranchAndChange # 从此时的分支新建分支并且换过去\ngit checkout newBranch 如果没有此新分支，# 从此时的分支新建。如果有，则切换过去\ngit checkout -d branchName # 如果有此分支，则删除分支\ngit push origin <branch> # 推送本地分支到远程资源库，如果不推送，尽本地自己可见\n\n# 更新与合并\ngit pull # 更新并自动合并，如果有冲突，则需要手动处理，冲突解决后，git add <conflictFlieName>\ngit pull = git fetch && git merge\ngit merge <branch> # 合并branch到当前分支\ngit diff <source> <target> # 查看合并改动之前的差异\n\n# 标签 \ngit tag <tagName> <commitID> # 给提交ID创建tag\ngit log 查看提交记录\n\n# 回退\ngit checkout -- <fileName> HEAD中的最新内容替换掉当前工作目录中的文件，缓存区无影响\ngit fetch orgin && git reset --hard origin/master 丢弃本地改动与提交，拉取远程并将本地分支指向它\ngit checkout --mixed ID/HEAD 撤销commit，撤销add，代码保留\ngit checkout --soft ID/HEAD 撤销commit，不撤销add，代码保留\ngit checkout --hard ID/HEAD 撤销commit，撤销add，代码删除，成为ID的commit状态\n\n# 改动保存\ngit stash  将当前改动保存到工作区栈中\ngit stash pop 将工作区栈保存的改动弹栈生效\n\n# 变基\ngit checkout --rebase orgin/<branchName>\n\n# 内建图形化git gitk\n# 彩色git输出 git config color.ui true\n\n# 取消跟踪\ngit rm <fileName></code></pre>\n<h1 id=\"3-git设置\"><a href=\"#3-git设置\" class=\"headerlink\" title=\"3. git设置\"></a>3. git设置</h1><p>全局设置用户目录下.gitconfig </p>\n<pre class=\" language-shell\"><code class=\"language-shell\">[user]\n    name = xq773939719\n    email = 773939719@qq.com\n[filter \"lfs\"]\n    clean = git-lfs clean -- %f\n    smudge = git-lfs smudge -- %f\n    process = git-lfs filter-process\n    required = true\n[core]\n    excludesfile = /Users/xq/.gitignore_global\n    autocrlf = input</code></pre>\n<h1 id=\"4-SVN与Git\"><a href=\"#4-SVN与Git\" class=\"headerlink\" title=\"4. SVN与Git\"></a>4. SVN与Git</h1><blockquote>\n<p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。</p>\n<p>Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p>\n</blockquote>\n<p><a href=\"https://www.bootcss.com/p/git-guide/\">参考</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/wireballblack.png","excerpt":"","more":"<h1 id=\"1-远程资源库（origin）\"><a href=\"#1-远程资源库（origin）\" class=\"headerlink\" title=\"1. 远程资源库（origin）\"></a>1. 远程资源库（origin）</h1><p>本地的代码修改、提交都是origin的工作副本。</p>\n<p><code>git clone 远程资源库链接</code></p>\n<h1 id=\"2-本地资源库\"><a href=\"#2-本地资源库\" class=\"headerlink\" title=\"2. 本地资源库\"></a>2. 本地资源库</h1><p>常用三连</p>\n<p><code>git add . &amp;&amp; git commit -m “” &amp;&amp; git push</code> </p>\n<pre><code class=\"shell\">本地资源库维护三棵树（工作目录，缓存区stage，本地资源库HEAD）\ngit add . 是把工作目录的修改暂存到缓存（stage）中，添加index\ngit commit -m &quot;&quot; 把本次缓存中的修改提交到本地资源库，此时HEAD指向最近一次的提交\ngit pull 之后自动合并解决冲突后再 git push 推送到远程资源库，同步功能</code></pre>\n<pre><code class=\"shell\"># 通用化\n\n# 暂存\ngit add &lt;fileName&gt;\ngit add *\n\n# 提交\ngit commit -m &quot;&quot;\n\n# 推送\ngit push\ngit push origin &lt;branchName&gt;\ngit remote add origin &lt;server&gt; # 如果没有克隆现有仓库，需要连接\n\n# 分支\ngit checkout -b newBranchAndChange # 从此时的分支新建分支并且换过去\ngit checkout newBranch 如果没有此新分支，# 从此时的分支新建。如果有，则切换过去\ngit checkout -d branchName # 如果有此分支，则删除分支\ngit push origin &lt;branch&gt; # 推送本地分支到远程资源库，如果不推送，尽本地自己可见\n\n# 更新与合并\ngit pull # 更新并自动合并，如果有冲突，则需要手动处理，冲突解决后，git add &lt;conflictFlieName&gt;\ngit pull = git fetch &amp;&amp; git merge\ngit merge &lt;branch&gt; # 合并branch到当前分支\ngit diff &lt;source&gt; &lt;target&gt; # 查看合并改动之前的差异\n\n# 标签 \ngit tag &lt;tagName&gt; &lt;commitID&gt; # 给提交ID创建tag\ngit log 查看提交记录\n\n# 回退\ngit checkout -- &lt;fileName&gt; HEAD中的最新内容替换掉当前工作目录中的文件，缓存区无影响\ngit fetch orgin &amp;&amp; git reset --hard origin/master 丢弃本地改动与提交，拉取远程并将本地分支指向它\ngit checkout --mixed ID/HEAD 撤销commit，撤销add，代码保留\ngit checkout --soft ID/HEAD 撤销commit，不撤销add，代码保留\ngit checkout --hard ID/HEAD 撤销commit，撤销add，代码删除，成为ID的commit状态\n\n# 改动保存\ngit stash  将当前改动保存到工作区栈中\ngit stash pop 将工作区栈保存的改动弹栈生效\n\n# 变基\ngit checkout --rebase orgin/&lt;branchName&gt;\n\n# 内建图形化git gitk\n# 彩色git输出 git config color.ui true\n\n# 取消跟踪\ngit rm &lt;fileName&gt;</code></pre>\n<h1 id=\"3-git设置\"><a href=\"#3-git设置\" class=\"headerlink\" title=\"3. git设置\"></a>3. git设置</h1><p>全局设置用户目录下.gitconfig </p>\n<pre><code class=\"shell\">[user]\n    name = xq773939719\n    email = 773939719@qq.com\n[filter &quot;lfs&quot;]\n    clean = git-lfs clean -- %f\n    smudge = git-lfs smudge -- %f\n    process = git-lfs filter-process\n    required = true\n[core]\n    excludesfile = /Users/xq/.gitignore_global\n    autocrlf = input</code></pre>\n<h1 id=\"4-SVN与Git\"><a href=\"#4-SVN与Git\" class=\"headerlink\" title=\"4. SVN与Git\"></a>4. SVN与Git</h1><blockquote>\n<p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。</p>\n<p>Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p>\n</blockquote>\n<p><a href=\"https://www.bootcss.com/p/git-guide/\">参考</a></p>\n"},{"title":"红黑树的实现","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:32:42.000Z","updated":"2020-12-03T06:32:45.000Z","keywords":"红黑树","description":null,"passwords":null,"img":null,"abstract":"红黑树C++基本实现","_content":"\n``` cpp\n#include \"main.h\"\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n    RBT *rbt = new RBT();\n\n    int n = 0;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        int temp = 0;\n        cin >> temp;\n        rbt->add(new RBTNode(temp, nullptr, nullptr, nullptr, \"R\"));\n    }\n\n    rbt->preOrder(rbt->getRoot());\n    cout << endl;\n    rbt->inOrder(rbt->getRoot());\n    cout << endl;\n    rbt->postOrder(rbt->getRoot());\n    cout << endl;\n    rbt->levelOrder(rbt->getRoot());\n    cout << endl;\n\n\n    while (cin >> n) {\n        RBTNode *p = rbt->get(n);\n        rbt->erase(p);\n        rbt->preOrder(rbt->getRoot());\n        cout << endl;\n        rbt->inOrder(rbt->getRoot());\n        cout << endl;\n        rbt->postOrder(rbt->getRoot());\n        cout << endl;\n        rbt->levelOrder(rbt->getRoot());\n        cout << endl;\n    }\n\n    delete rbt;\n\n}\n```\n\n``` cpp\n//\n// Created by XQ on 2020/4/29.\n//\n\n#include \"RBTNode.h\"\n\nRBTNode::RBTNode() {\n\n}\n\n\nRBTNode::RBTNode(int value) {\n    this->value = value;\n}\n\n\nRBTNode::RBTNode(int value, RBTNode *parent, RBTNode *left, RBTNode *right, string color) {\n    this->value = value;\n    this->parent = parent;\n    this->left = left;\n    this->right = right;\n    this->color = color;\n}\n\n\nRBTNode::~RBTNode() {\n    this->value = 0;\n    this->parent = nullptr;\n    this->left = nullptr;\n    this->right = nullptr;\n}\n\n\nint RBTNode::getValue() {\n    return this->value;\n}\n\n\nvoid RBTNode::setValue(int value) {\n    this->value = value;\n}\n\n\nRBTNode *RBTNode::getParent() {\n    return this->parent;\n}\n\n\nvoid RBTNode::setParent(RBTNode *parent) {\n    this->parent = parent;\n}\n\n\nRBTNode *RBTNode::getLeft() {\n    return this->left;\n}\n\n\nvoid RBTNode::setLeft(RBTNode *left) {\n    this->left = left;\n}\n\n\nRBTNode *RBTNode::getRight() {\n    return this->right;\n}\n\n\nvoid RBTNode::setRight(RBTNode *right) {\n    this->right = right;\n}\n\n\nstring RBTNode::getColor() {\n    return this->color;\n}\n\n\nvoid RBTNode::setColor(string color) {\n    this->color = color;\n}\n```\n\n``` cpp\n//\n// Created by XQ on 2020/4/29.\n//\n\n#include \"RBT.h\"\n\n\nRBT::RBT() {\n    this->root = nullptr;\n}\n\nRBT::RBT(RBTNode *node) {\n    this->root = node;\n}\n\nRBT::~RBT() {\n    cout << \"~RBT\" << endl;\n    collectNode(this->root);\n    free();\n\n}\n\nRBTNode *RBT::findSuccessor(RBTNode *node) {\n    if (!node) return nullptr;\n    if (node->getRight()) {\n        RBTNode *p = node->getRight();\n        while (p->getLeft()) {\n            p = p->getLeft();\n        }\n        return p;\n    } else {\n        RBTNode *p = node->getParent();\n        RBTNode *ch = node;\n        while (p && p->getRight() == ch) {\n            ch = p;\n            p = p->getParent();\n        }\n        return p;\n    }\n}\n\nvoid RBT::rotateLeft(RBTNode *node) {\n    if (node && node->getRight()) {\n        RBTNode *r = node->getRight();\n        // 1\n        node->setRight(r->getLeft());\n        // 2\n        if (r->getLeft()) r->getLeft()->setParent(node);\n        // 3\n        r->setParent(node->getParent());\n        // 4\n        if (!node->getParent()) this->root = r;\n        else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(r);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(r);\n        }\n        // 5\n        node->setParent(r);\n        //6\n        r->setLeft(node);\n    }\n}\n\nvoid RBT::rotateRight(RBTNode *node) {\n    if (node && node->getLeft()) {\n        RBTNode *l = node->getLeft();\n        // 1\n        node->setLeft(l->getRight());\n        // 2\n        if (l->getRight()) l->setParent(node);\n        // 3\n        l->setParent(node->getParent());\n        // 4\n        if (!node->getParent()) root = l;\n        else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(l);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(l);\n        }\n        //5\n        node->setParent(l);\n        l->setRight(node);\n    }\n}\n\nvoid RBT::fixAfterAdd(RBTNode *node) {\n    node->setColor(\"R\");\n    while (node && node != this->root && node->getParent()->getColor() == \"R\") {\n        RBTNode *father = node->getParent();\n        RBTNode *grandfather = father->getParent();\n\n        if (father == grandfather->getLeft()) {\n            RBTNode *uncle = grandfather->getRight();\n\n            if (uncle && uncle->getColor() == \"R\") {\n                father->setColor(\"B\");\n                uncle->setColor(\"B\");\n                grandfather->setColor(\"R\");\n                node = grandfather;\n            } else {\n                if (node == father->getRight()) {\n                    node = father;\n                    rotateLeft(node);\n                }\n                node->getParent()->setColor(\"B\");\n                node->getParent()->getParent()->setColor(\"R\");\n                rotateRight(node->getParent()->getParent());\n            }\n        } else {\n            RBTNode *uncle = grandfather->getLeft();\n\n            if (uncle && uncle->getColor() == \"R\") {\n                father->setColor(\"B\");\n                uncle->setColor(\"B\");\n                grandfather->setColor(\"R\");\n                node = grandfather;\n            } else {\n                if (node == father->getLeft()) {\n                    node = father;\n                    rotateRight(node);\n                }\n                node->getParent()->setColor(\"B\");\n                node->getParent()->getParent()->setColor(\"R\");\n                rotateLeft(node->getParent()->getParent());\n            }\n        }\n    }\n    this->root->setColor(\"B\");\n}\n\nvoid RBT::fixAfterErase(RBTNode *node) {\n    RBTNode * flag = nullptr; // 由于node指向有变化 标记一下 调整好后删除\n    while (node != this->root && node->getColor() == \"B\") {\n        if (node == node->getParent()->getLeft()) {\n            RBTNode *sib = node->getParent()->getRight();\n            if (sib->getColor() == \"R\") {\n                sib->setColor(\"B\");\n                node->getParent()->setColor(\"R\");\n                rotateLeft(node->getParent());\n                sib = node->getParent()->getRight();\n            }\n            if (!sib->getLeft() && !sib->getRight()) {\n                sib->setColor(\"R\");\n                node = node->getParent();\n                if(!flag) flag = node;\n            } else if (sib->getLeft() && sib->getLeft()->getColor() == \"B\" &&\n                       sib->getRight() && sib->getRight()->getColor() == \"B\") {\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib->setColor(\"R\");\n                node = node->getParent();\n            } else {\n                if (!sib->getRight()  || sib->getRight()->getColor() == \"B\") {\n                    sib->setColor(\"R\");\n                    sib->getLeft()->setColor(\"B\");\n                    rotateRight(sib);\n                    sib = node->getParent()->getRight();\n                }\n                sib->setColor(node->getParent()->getColor());\n                node->getParent()->setColor(\"B\");\n                sib->getRight()->setColor(\"B\");\n                rotateLeft(node->getParent());\n                node = root;\n            }\n        } else {\n            RBTNode *sib = node->getParent()->getLeft();\n            if (sib->getColor() == \"R\") {\n                sib->setColor(\"B\");\n                node->getParent()->setColor(\"R\");\n                rotateRight(node->getParent());\n                sib = node->getParent()->getLeft();\n            }\n\n            if (!sib->getLeft() && !sib->getRight()) {\n                sib->setColor(\"R\");\n                node = node->getParent();\n                if(!flag) flag = node;\n            } else if (sib->getLeft() && sib->getLeft()->getColor() == \"B\" &&\n                    sib->getRight() && sib->getRight()->getColor() == \"B\") {\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib->setColor(\"R\");\n                node = node->getParent();\n            } else {\n                if (!sib->getLeft() || sib->getLeft()->getColor() == \"B\") {\n                    sib->setColor(\"R\");\n                    sib->getRight()->setColor(\"B\");\n                    rotateLeft(sib);\n                    sib = node->getParent()->getLeft();\n                }\n                sib->setColor(node->getParent()->getColor());\n                node->getParent()->setColor(\"B\");\n                sib->getLeft()->setColor(\"B\");\n                rotateRight(node->getParent());\n                node = root;\n            }\n        }\n    }\n    if(flag) node = flag;\n    node->setColor(\"B\");\n}\n\nRBTNode *RBT::getRoot() {\n    return this->root;\n}\n\nRBTNode *RBT::get(int value) {\n    RBTNode *p = this->root;\n    while (p) {\n        if (p->getValue() == value) return p;\n        else if (p->getValue() > value) p = p->getLeft();\n        else p = p->getRight();\n    }\n    return nullptr;\n}\n\nvoid RBT::add(RBTNode *node) {\n    RBTNode *p = this->root;\n    if (!p) {\n        node->setColor(\"B\");\n        this->root = node;\n        return;\n    }\n    while (p) {\n        if (p->getValue() == node->getValue()) return;\n        else if (p->getValue() > node->getValue()) {\n            // go left\n            if (p->getLeft()) p = p->getLeft();\n            else {\n                node->setParent(p);\n                p->setLeft(node);\n                break;\n            }\n        } else {\n            // go right\n            if (p->getRight()) p = p->getRight();\n            else {\n                node->setParent(p);\n                p->setRight(node);\n                break;\n            }\n        }\n    }\n    fixAfterAdd(node);\n}\n\nvoid RBT::erase(RBTNode *node) {\n    if (!node) return;\n    if (node->getLeft() && node->getRight()) {\n        // 查找后继节点\n        RBTNode *s = findSuccessor(node);\n        node->setValue(s->getValue());\n        node = s;\n    }\n    // 此时如果找到后继节点，则node一定不会有两棵子树 即没有左子树\n    RBTNode *replace = node->getLeft() ? node->getLeft() : node->getRight();\n    if (replace) {\n        // 存在一颗子树\n        replace->setParent(node->getParent());\n        if (!node->getParent()) {\n            this->root = replace;\n        } else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(replace);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(replace);\n        }\n        node->setLeft(nullptr);\n        node->setRight(nullptr);\n        node->setParent(nullptr);\n        if (node->getColor() == \"B\") fixAfterErase(replace);\n        delete node;\n    } else if (!node->getParent()) {\n        this->root = nullptr;\n    } else {\n        // 不存在子树\n        if (node->getColor() == \"B\") fixAfterErase(node);\n        if (node->getParent()) {\n            if (node->getParent()->getLeft() == node) {\n                node->getParent()->setLeft(nullptr);\n            } else if (node->getParent()->getRight() == node) {\n                node->getParent()->setRight(nullptr);\n            }\n            node->setParent(nullptr);\n            delete node;\n        }\n    }\n}\n\nvoid RBT::printNULL() {\n    cout << \"[null]\";\n}\n\nvoid RBT::print(RBTNode *node) {\n    cout << '[' << node->getValue() << ',' << node->getColor() << ']';\n}\n\nvoid RBT::preOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    print(node);\n    preOrder(node->getLeft());\n    preOrder(node->getRight());\n\n}\n\nvoid RBT::inOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    inOrder(node->getLeft());\n    print(node);\n    inOrder(node->getRight());\n}\n\nvoid RBT::postOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    postOrder(node->getLeft());\n    postOrder(node->getRight());\n    print(node);\n}\n\nvoid RBT::levelOrder(RBTNode *node) {\n    queue<RBTNode *> q;\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    q.push(node);\n    RBTNode *back = q.back();\n    while (!q.empty()) {\n        RBTNode *p = q.front();\n        q.pop();\n        print(p);\n        if (p->getLeft()) q.push(p->getLeft());\n        if (p->getRight()) q.push(p->getRight());\n        if (back == p) {\n            cout << endl;\n            back = q.back();\n        }\n    }\n}\n\nvoid RBT::collectNode(RBTNode *node) {\n    if (!node) return;\n\n    this->nodePool.push_back(node);\n    if (node->getLeft()) {\n        collectNode(node->getLeft());\n    }\n    if (node->getRight()) {\n        collectNode(node->getRight());\n    }\n\n\n}\n\nvoid RBT::free() {\n    for(RBTNode* item: this->nodePool) {\n        cout << \"del:\" << item->getValue() << endl;\n        delete item;\n    }\n}\n```\n\n","source":"_posts/6.红黑树的实现.md","raw":"---\ntitle: 红黑树的实现\ncategories: \n- [技术]\ntags: [C++, 数据结构, 红黑树]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:32:42\nupdated: 2020-12-03 14:32:45\nkeywords: 红黑树\ndescription: \npasswords:\nimg: \nabstract: 红黑树C++基本实现\n---\n\n``` cpp\n#include \"main.h\"\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n    RBT *rbt = new RBT();\n\n    int n = 0;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        int temp = 0;\n        cin >> temp;\n        rbt->add(new RBTNode(temp, nullptr, nullptr, nullptr, \"R\"));\n    }\n\n    rbt->preOrder(rbt->getRoot());\n    cout << endl;\n    rbt->inOrder(rbt->getRoot());\n    cout << endl;\n    rbt->postOrder(rbt->getRoot());\n    cout << endl;\n    rbt->levelOrder(rbt->getRoot());\n    cout << endl;\n\n\n    while (cin >> n) {\n        RBTNode *p = rbt->get(n);\n        rbt->erase(p);\n        rbt->preOrder(rbt->getRoot());\n        cout << endl;\n        rbt->inOrder(rbt->getRoot());\n        cout << endl;\n        rbt->postOrder(rbt->getRoot());\n        cout << endl;\n        rbt->levelOrder(rbt->getRoot());\n        cout << endl;\n    }\n\n    delete rbt;\n\n}\n```\n\n``` cpp\n//\n// Created by XQ on 2020/4/29.\n//\n\n#include \"RBTNode.h\"\n\nRBTNode::RBTNode() {\n\n}\n\n\nRBTNode::RBTNode(int value) {\n    this->value = value;\n}\n\n\nRBTNode::RBTNode(int value, RBTNode *parent, RBTNode *left, RBTNode *right, string color) {\n    this->value = value;\n    this->parent = parent;\n    this->left = left;\n    this->right = right;\n    this->color = color;\n}\n\n\nRBTNode::~RBTNode() {\n    this->value = 0;\n    this->parent = nullptr;\n    this->left = nullptr;\n    this->right = nullptr;\n}\n\n\nint RBTNode::getValue() {\n    return this->value;\n}\n\n\nvoid RBTNode::setValue(int value) {\n    this->value = value;\n}\n\n\nRBTNode *RBTNode::getParent() {\n    return this->parent;\n}\n\n\nvoid RBTNode::setParent(RBTNode *parent) {\n    this->parent = parent;\n}\n\n\nRBTNode *RBTNode::getLeft() {\n    return this->left;\n}\n\n\nvoid RBTNode::setLeft(RBTNode *left) {\n    this->left = left;\n}\n\n\nRBTNode *RBTNode::getRight() {\n    return this->right;\n}\n\n\nvoid RBTNode::setRight(RBTNode *right) {\n    this->right = right;\n}\n\n\nstring RBTNode::getColor() {\n    return this->color;\n}\n\n\nvoid RBTNode::setColor(string color) {\n    this->color = color;\n}\n```\n\n``` cpp\n//\n// Created by XQ on 2020/4/29.\n//\n\n#include \"RBT.h\"\n\n\nRBT::RBT() {\n    this->root = nullptr;\n}\n\nRBT::RBT(RBTNode *node) {\n    this->root = node;\n}\n\nRBT::~RBT() {\n    cout << \"~RBT\" << endl;\n    collectNode(this->root);\n    free();\n\n}\n\nRBTNode *RBT::findSuccessor(RBTNode *node) {\n    if (!node) return nullptr;\n    if (node->getRight()) {\n        RBTNode *p = node->getRight();\n        while (p->getLeft()) {\n            p = p->getLeft();\n        }\n        return p;\n    } else {\n        RBTNode *p = node->getParent();\n        RBTNode *ch = node;\n        while (p && p->getRight() == ch) {\n            ch = p;\n            p = p->getParent();\n        }\n        return p;\n    }\n}\n\nvoid RBT::rotateLeft(RBTNode *node) {\n    if (node && node->getRight()) {\n        RBTNode *r = node->getRight();\n        // 1\n        node->setRight(r->getLeft());\n        // 2\n        if (r->getLeft()) r->getLeft()->setParent(node);\n        // 3\n        r->setParent(node->getParent());\n        // 4\n        if (!node->getParent()) this->root = r;\n        else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(r);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(r);\n        }\n        // 5\n        node->setParent(r);\n        //6\n        r->setLeft(node);\n    }\n}\n\nvoid RBT::rotateRight(RBTNode *node) {\n    if (node && node->getLeft()) {\n        RBTNode *l = node->getLeft();\n        // 1\n        node->setLeft(l->getRight());\n        // 2\n        if (l->getRight()) l->setParent(node);\n        // 3\n        l->setParent(node->getParent());\n        // 4\n        if (!node->getParent()) root = l;\n        else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(l);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(l);\n        }\n        //5\n        node->setParent(l);\n        l->setRight(node);\n    }\n}\n\nvoid RBT::fixAfterAdd(RBTNode *node) {\n    node->setColor(\"R\");\n    while (node && node != this->root && node->getParent()->getColor() == \"R\") {\n        RBTNode *father = node->getParent();\n        RBTNode *grandfather = father->getParent();\n\n        if (father == grandfather->getLeft()) {\n            RBTNode *uncle = grandfather->getRight();\n\n            if (uncle && uncle->getColor() == \"R\") {\n                father->setColor(\"B\");\n                uncle->setColor(\"B\");\n                grandfather->setColor(\"R\");\n                node = grandfather;\n            } else {\n                if (node == father->getRight()) {\n                    node = father;\n                    rotateLeft(node);\n                }\n                node->getParent()->setColor(\"B\");\n                node->getParent()->getParent()->setColor(\"R\");\n                rotateRight(node->getParent()->getParent());\n            }\n        } else {\n            RBTNode *uncle = grandfather->getLeft();\n\n            if (uncle && uncle->getColor() == \"R\") {\n                father->setColor(\"B\");\n                uncle->setColor(\"B\");\n                grandfather->setColor(\"R\");\n                node = grandfather;\n            } else {\n                if (node == father->getLeft()) {\n                    node = father;\n                    rotateRight(node);\n                }\n                node->getParent()->setColor(\"B\");\n                node->getParent()->getParent()->setColor(\"R\");\n                rotateLeft(node->getParent()->getParent());\n            }\n        }\n    }\n    this->root->setColor(\"B\");\n}\n\nvoid RBT::fixAfterErase(RBTNode *node) {\n    RBTNode * flag = nullptr; // 由于node指向有变化 标记一下 调整好后删除\n    while (node != this->root && node->getColor() == \"B\") {\n        if (node == node->getParent()->getLeft()) {\n            RBTNode *sib = node->getParent()->getRight();\n            if (sib->getColor() == \"R\") {\n                sib->setColor(\"B\");\n                node->getParent()->setColor(\"R\");\n                rotateLeft(node->getParent());\n                sib = node->getParent()->getRight();\n            }\n            if (!sib->getLeft() && !sib->getRight()) {\n                sib->setColor(\"R\");\n                node = node->getParent();\n                if(!flag) flag = node;\n            } else if (sib->getLeft() && sib->getLeft()->getColor() == \"B\" &&\n                       sib->getRight() && sib->getRight()->getColor() == \"B\") {\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib->setColor(\"R\");\n                node = node->getParent();\n            } else {\n                if (!sib->getRight()  || sib->getRight()->getColor() == \"B\") {\n                    sib->setColor(\"R\");\n                    sib->getLeft()->setColor(\"B\");\n                    rotateRight(sib);\n                    sib = node->getParent()->getRight();\n                }\n                sib->setColor(node->getParent()->getColor());\n                node->getParent()->setColor(\"B\");\n                sib->getRight()->setColor(\"B\");\n                rotateLeft(node->getParent());\n                node = root;\n            }\n        } else {\n            RBTNode *sib = node->getParent()->getLeft();\n            if (sib->getColor() == \"R\") {\n                sib->setColor(\"B\");\n                node->getParent()->setColor(\"R\");\n                rotateRight(node->getParent());\n                sib = node->getParent()->getLeft();\n            }\n\n            if (!sib->getLeft() && !sib->getRight()) {\n                sib->setColor(\"R\");\n                node = node->getParent();\n                if(!flag) flag = node;\n            } else if (sib->getLeft() && sib->getLeft()->getColor() == \"B\" &&\n                    sib->getRight() && sib->getRight()->getColor() == \"B\") {\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib->setColor(\"R\");\n                node = node->getParent();\n            } else {\n                if (!sib->getLeft() || sib->getLeft()->getColor() == \"B\") {\n                    sib->setColor(\"R\");\n                    sib->getRight()->setColor(\"B\");\n                    rotateLeft(sib);\n                    sib = node->getParent()->getLeft();\n                }\n                sib->setColor(node->getParent()->getColor());\n                node->getParent()->setColor(\"B\");\n                sib->getLeft()->setColor(\"B\");\n                rotateRight(node->getParent());\n                node = root;\n            }\n        }\n    }\n    if(flag) node = flag;\n    node->setColor(\"B\");\n}\n\nRBTNode *RBT::getRoot() {\n    return this->root;\n}\n\nRBTNode *RBT::get(int value) {\n    RBTNode *p = this->root;\n    while (p) {\n        if (p->getValue() == value) return p;\n        else if (p->getValue() > value) p = p->getLeft();\n        else p = p->getRight();\n    }\n    return nullptr;\n}\n\nvoid RBT::add(RBTNode *node) {\n    RBTNode *p = this->root;\n    if (!p) {\n        node->setColor(\"B\");\n        this->root = node;\n        return;\n    }\n    while (p) {\n        if (p->getValue() == node->getValue()) return;\n        else if (p->getValue() > node->getValue()) {\n            // go left\n            if (p->getLeft()) p = p->getLeft();\n            else {\n                node->setParent(p);\n                p->setLeft(node);\n                break;\n            }\n        } else {\n            // go right\n            if (p->getRight()) p = p->getRight();\n            else {\n                node->setParent(p);\n                p->setRight(node);\n                break;\n            }\n        }\n    }\n    fixAfterAdd(node);\n}\n\nvoid RBT::erase(RBTNode *node) {\n    if (!node) return;\n    if (node->getLeft() && node->getRight()) {\n        // 查找后继节点\n        RBTNode *s = findSuccessor(node);\n        node->setValue(s->getValue());\n        node = s;\n    }\n    // 此时如果找到后继节点，则node一定不会有两棵子树 即没有左子树\n    RBTNode *replace = node->getLeft() ? node->getLeft() : node->getRight();\n    if (replace) {\n        // 存在一颗子树\n        replace->setParent(node->getParent());\n        if (!node->getParent()) {\n            this->root = replace;\n        } else if (node->getParent()->getLeft() == node) {\n            node->getParent()->setLeft(replace);\n        } else if (node->getParent()->getRight() == node) {\n            node->getParent()->setRight(replace);\n        }\n        node->setLeft(nullptr);\n        node->setRight(nullptr);\n        node->setParent(nullptr);\n        if (node->getColor() == \"B\") fixAfterErase(replace);\n        delete node;\n    } else if (!node->getParent()) {\n        this->root = nullptr;\n    } else {\n        // 不存在子树\n        if (node->getColor() == \"B\") fixAfterErase(node);\n        if (node->getParent()) {\n            if (node->getParent()->getLeft() == node) {\n                node->getParent()->setLeft(nullptr);\n            } else if (node->getParent()->getRight() == node) {\n                node->getParent()->setRight(nullptr);\n            }\n            node->setParent(nullptr);\n            delete node;\n        }\n    }\n}\n\nvoid RBT::printNULL() {\n    cout << \"[null]\";\n}\n\nvoid RBT::print(RBTNode *node) {\n    cout << '[' << node->getValue() << ',' << node->getColor() << ']';\n}\n\nvoid RBT::preOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    print(node);\n    preOrder(node->getLeft());\n    preOrder(node->getRight());\n\n}\n\nvoid RBT::inOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    inOrder(node->getLeft());\n    print(node);\n    inOrder(node->getRight());\n}\n\nvoid RBT::postOrder(RBTNode *node) {\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    postOrder(node->getLeft());\n    postOrder(node->getRight());\n    print(node);\n}\n\nvoid RBT::levelOrder(RBTNode *node) {\n    queue<RBTNode *> q;\n    if (!node) {\n//        printNULL();\n        return;\n    }\n    q.push(node);\n    RBTNode *back = q.back();\n    while (!q.empty()) {\n        RBTNode *p = q.front();\n        q.pop();\n        print(p);\n        if (p->getLeft()) q.push(p->getLeft());\n        if (p->getRight()) q.push(p->getRight());\n        if (back == p) {\n            cout << endl;\n            back = q.back();\n        }\n    }\n}\n\nvoid RBT::collectNode(RBTNode *node) {\n    if (!node) return;\n\n    this->nodePool.push_back(node);\n    if (node->getLeft()) {\n        collectNode(node->getLeft());\n    }\n    if (node->getRight()) {\n        collectNode(node->getRight());\n    }\n\n\n}\n\nvoid RBT::free() {\n    for(RBTNode* item: this->nodePool) {\n        cout << \"del:\" << item->getValue() << endl;\n        delete item;\n    }\n}\n```\n\n","slug":"6.红黑树的实现","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqrx00173th8en5bfqa5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"main.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    RBT <span class=\"token operator\">*</span>rbt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">RBT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> temp<span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">RBTNode</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n    rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">levelOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n        rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">levelOrder</span><span class=\"token punctuation\">(</span>rbt<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">delete</span> rbt<span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// Created by XQ on 2020/4/29.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"RBTNode.h\"</span></span>\n\nRBTNode<span class=\"token operator\">::</span><span class=\"token function\">RBTNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode<span class=\"token operator\">::</span><span class=\"token function\">RBTNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode<span class=\"token operator\">::</span><span class=\"token function\">RBTNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">,</span> RBTNode <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">,</span> RBTNode <span class=\"token operator\">*</span>left<span class=\"token punctuation\">,</span> RBTNode <span class=\"token operator\">*</span>right<span class=\"token punctuation\">,</span> string color<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>left <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>right <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">RBTNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>left <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>right <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">int</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode <span class=\"token operator\">*</span>RBTNode<span class=\"token operator\">::</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode <span class=\"token operator\">*</span>RBTNode<span class=\"token operator\">::</span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>left<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>left<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>left <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nRBTNode <span class=\"token operator\">*</span>RBTNode<span class=\"token operator\">::</span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>right<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>right <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\nstring RBTNode<span class=\"token operator\">::</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>color<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> RBTNode<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>string color<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// Created by XQ on 2020/4/29.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"RBT.h\"</span></span>\n\n\nRBT<span class=\"token operator\">::</span><span class=\"token function\">RBT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\nRBT<span class=\"token operator\">::</span><span class=\"token function\">RBT</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\nRBT<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">RBT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~RBT\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">collectNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\nRBTNode <span class=\"token operator\">*</span>RBT<span class=\"token operator\">::</span><span class=\"token function\">findSuccessor</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>ch <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ch<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            ch <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n            p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>r <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 1</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 2</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 3</span>\n        r<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 4</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 5</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//6</span>\n        r<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>l <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 1</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 2</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> l<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 3</span>\n        l<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 4</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> root <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//5</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        l<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">fixAfterAdd</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">&amp;&amp;</span> node <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>father <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>grandfather <span class=\"token operator\">=</span> father<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>father <span class=\"token operator\">==</span> grandfather<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            RBTNode <span class=\"token operator\">*</span>uncle <span class=\"token operator\">=</span> grandfather<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uncle <span class=\"token operator\">&amp;&amp;</span> uncle<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                father<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                uncle<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                grandfather<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> grandfather<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> father<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                    node <span class=\"token operator\">=</span> father<span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            RBTNode <span class=\"token operator\">*</span>uncle <span class=\"token operator\">=</span> grandfather<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uncle <span class=\"token operator\">&amp;&amp;</span> uncle<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                father<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                uncle<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                grandfather<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> grandfather<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> father<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                    node <span class=\"token operator\">=</span> father<span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">fixAfterErase</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    RBTNode <span class=\"token operator\">*</span> flag <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 由于node指向有变化 标记一下 调整好后删除</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            RBTNode <span class=\"token operator\">*</span>sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flag<span class=\"token punctuation\">)</span> flag <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span> <span class=\"token operator\">&amp;&amp;</span>\n                       sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\" spellcheck=\"true\">// 兄弟都为黑节点，需要找父母帮忙</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">||</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                    sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            RBTNode <span class=\"token operator\">*</span>sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flag<span class=\"token punctuation\">)</span> flag <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span> <span class=\"token operator\">&amp;&amp;</span>\n                    sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\" spellcheck=\"true\">// 兄弟都为黑节点，需要找父母帮忙</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                    sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">rotateLeft</span><span class=\"token punctuation\">(</span>sib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    sib <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sib<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">rotateRight</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                node <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> node <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">;</span>\n    node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\nRBTNode <span class=\"token operator\">*</span>RBT<span class=\"token operator\">::</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\nRBTNode <span class=\"token operator\">*</span>RBT<span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\" spellcheck=\"true\">// go left</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\" spellcheck=\"true\">// go right</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fixAfterAdd</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 查找后继节点</span>\n        RBTNode <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> <span class=\"token function\">findSuccessor</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 此时如果找到后继节点，则node一定不会有两棵子树 即没有左子树</span>\n    RBTNode <span class=\"token operator\">*</span>replace <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 存在一颗子树</span>\n        replace<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> replace<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">fixAfterErase</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">delete</span> node<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>root <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// 不存在子树</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">fixAfterErase</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLeft</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n                node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">delete</span> node<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">printNULL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"[null]\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'['</span> <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">','</span> <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        printNULL();</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        printNULL();</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        printNULL();</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">levelOrder</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    queue<span class=\"token operator\">&lt;</span>RBTNode <span class=\"token operator\">*</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        printNULL();</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RBTNode <span class=\"token operator\">*</span>back <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        RBTNode <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>back <span class=\"token operator\">==</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n            back <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">collectNode</span><span class=\"token punctuation\">(</span>RBTNode <span class=\"token operator\">*</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nodePool<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">collectNode</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">collectNode</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> RBT<span class=\"token operator\">::</span><span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>RBTNode<span class=\"token operator\">*</span> item<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nodePool<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"del:\"</span> <span class=\"token operator\">&lt;&lt;</span> item<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">delete</span> item<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>#<span class=\"token number\">125</span><span class=\"token punctuation\">;</span></code></pre>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/bro-fist.png","excerpt":"","more":"<pre><code class=\"cpp\">#include &quot;main.h&quot;\n\nusing namespace std;\n\nint main(int argc, char *argv[]) &#123;\n    RBT *rbt = new RBT();\n\n    int n = 0;\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; ++i) &#123;\n        int temp = 0;\n        cin &gt;&gt; temp;\n        rbt-&gt;add(new RBTNode(temp, nullptr, nullptr, nullptr, &quot;R&quot;));\n    &#125;\n\n    rbt-&gt;preOrder(rbt-&gt;getRoot());\n    cout &lt;&lt; endl;\n    rbt-&gt;inOrder(rbt-&gt;getRoot());\n    cout &lt;&lt; endl;\n    rbt-&gt;postOrder(rbt-&gt;getRoot());\n    cout &lt;&lt; endl;\n    rbt-&gt;levelOrder(rbt-&gt;getRoot());\n    cout &lt;&lt; endl;\n\n\n    while (cin &gt;&gt; n) &#123;\n        RBTNode *p = rbt-&gt;get(n);\n        rbt-&gt;erase(p);\n        rbt-&gt;preOrder(rbt-&gt;getRoot());\n        cout &lt;&lt; endl;\n        rbt-&gt;inOrder(rbt-&gt;getRoot());\n        cout &lt;&lt; endl;\n        rbt-&gt;postOrder(rbt-&gt;getRoot());\n        cout &lt;&lt; endl;\n        rbt-&gt;levelOrder(rbt-&gt;getRoot());\n        cout &lt;&lt; endl;\n    &#125;\n\n    delete rbt;\n\n&#125;</code></pre>\n<pre><code class=\"cpp\">//\n// Created by XQ on 2020/4/29.\n//\n\n#include &quot;RBTNode.h&quot;\n\nRBTNode::RBTNode() &#123;\n\n&#125;\n\n\nRBTNode::RBTNode(int value) &#123;\n    this-&gt;value = value;\n&#125;\n\n\nRBTNode::RBTNode(int value, RBTNode *parent, RBTNode *left, RBTNode *right, string color) &#123;\n    this-&gt;value = value;\n    this-&gt;parent = parent;\n    this-&gt;left = left;\n    this-&gt;right = right;\n    this-&gt;color = color;\n&#125;\n\n\nRBTNode::~RBTNode() &#123;\n    this-&gt;value = 0;\n    this-&gt;parent = nullptr;\n    this-&gt;left = nullptr;\n    this-&gt;right = nullptr;\n&#125;\n\n\nint RBTNode::getValue() &#123;\n    return this-&gt;value;\n&#125;\n\n\nvoid RBTNode::setValue(int value) &#123;\n    this-&gt;value = value;\n&#125;\n\n\nRBTNode *RBTNode::getParent() &#123;\n    return this-&gt;parent;\n&#125;\n\n\nvoid RBTNode::setParent(RBTNode *parent) &#123;\n    this-&gt;parent = parent;\n&#125;\n\n\nRBTNode *RBTNode::getLeft() &#123;\n    return this-&gt;left;\n&#125;\n\n\nvoid RBTNode::setLeft(RBTNode *left) &#123;\n    this-&gt;left = left;\n&#125;\n\n\nRBTNode *RBTNode::getRight() &#123;\n    return this-&gt;right;\n&#125;\n\n\nvoid RBTNode::setRight(RBTNode *right) &#123;\n    this-&gt;right = right;\n&#125;\n\n\nstring RBTNode::getColor() &#123;\n    return this-&gt;color;\n&#125;\n\n\nvoid RBTNode::setColor(string color) &#123;\n    this-&gt;color = color;\n&#125;</code></pre>\n<pre><code class=\"cpp\">//\n// Created by XQ on 2020/4/29.\n//\n\n#include &quot;RBT.h&quot;\n\n\nRBT::RBT() &#123;\n    this-&gt;root = nullptr;\n&#125;\n\nRBT::RBT(RBTNode *node) &#123;\n    this-&gt;root = node;\n&#125;\n\nRBT::~RBT() &#123;\n    cout &lt;&lt; &quot;~RBT&quot; &lt;&lt; endl;\n    collectNode(this-&gt;root);\n    free();\n\n&#125;\n\nRBTNode *RBT::findSuccessor(RBTNode *node) &#123;\n    if (!node) return nullptr;\n    if (node-&gt;getRight()) &#123;\n        RBTNode *p = node-&gt;getRight();\n        while (p-&gt;getLeft()) &#123;\n            p = p-&gt;getLeft();\n        &#125;\n        return p;\n    &#125; else &#123;\n        RBTNode *p = node-&gt;getParent();\n        RBTNode *ch = node;\n        while (p &amp;&amp; p-&gt;getRight() == ch) &#123;\n            ch = p;\n            p = p-&gt;getParent();\n        &#125;\n        return p;\n    &#125;\n&#125;\n\nvoid RBT::rotateLeft(RBTNode *node) &#123;\n    if (node &amp;&amp; node-&gt;getRight()) &#123;\n        RBTNode *r = node-&gt;getRight();\n        // 1\n        node-&gt;setRight(r-&gt;getLeft());\n        // 2\n        if (r-&gt;getLeft()) r-&gt;getLeft()-&gt;setParent(node);\n        // 3\n        r-&gt;setParent(node-&gt;getParent());\n        // 4\n        if (!node-&gt;getParent()) this-&gt;root = r;\n        else if (node-&gt;getParent()-&gt;getLeft() == node) &#123;\n            node-&gt;getParent()-&gt;setLeft(r);\n        &#125; else if (node-&gt;getParent()-&gt;getRight() == node) &#123;\n            node-&gt;getParent()-&gt;setRight(r);\n        &#125;\n        // 5\n        node-&gt;setParent(r);\n        //6\n        r-&gt;setLeft(node);\n    &#125;\n&#125;\n\nvoid RBT::rotateRight(RBTNode *node) &#123;\n    if (node &amp;&amp; node-&gt;getLeft()) &#123;\n        RBTNode *l = node-&gt;getLeft();\n        // 1\n        node-&gt;setLeft(l-&gt;getRight());\n        // 2\n        if (l-&gt;getRight()) l-&gt;setParent(node);\n        // 3\n        l-&gt;setParent(node-&gt;getParent());\n        // 4\n        if (!node-&gt;getParent()) root = l;\n        else if (node-&gt;getParent()-&gt;getLeft() == node) &#123;\n            node-&gt;getParent()-&gt;setLeft(l);\n        &#125; else if (node-&gt;getParent()-&gt;getRight() == node) &#123;\n            node-&gt;getParent()-&gt;setRight(l);\n        &#125;\n        //5\n        node-&gt;setParent(l);\n        l-&gt;setRight(node);\n    &#125;\n&#125;\n\nvoid RBT::fixAfterAdd(RBTNode *node) &#123;\n    node-&gt;setColor(&quot;R&quot;);\n    while (node &amp;&amp; node != this-&gt;root &amp;&amp; node-&gt;getParent()-&gt;getColor() == &quot;R&quot;) &#123;\n        RBTNode *father = node-&gt;getParent();\n        RBTNode *grandfather = father-&gt;getParent();\n\n        if (father == grandfather-&gt;getLeft()) &#123;\n            RBTNode *uncle = grandfather-&gt;getRight();\n\n            if (uncle &amp;&amp; uncle-&gt;getColor() == &quot;R&quot;) &#123;\n                father-&gt;setColor(&quot;B&quot;);\n                uncle-&gt;setColor(&quot;B&quot;);\n                grandfather-&gt;setColor(&quot;R&quot;);\n                node = grandfather;\n            &#125; else &#123;\n                if (node == father-&gt;getRight()) &#123;\n                    node = father;\n                    rotateLeft(node);\n                &#125;\n                node-&gt;getParent()-&gt;setColor(&quot;B&quot;);\n                node-&gt;getParent()-&gt;getParent()-&gt;setColor(&quot;R&quot;);\n                rotateRight(node-&gt;getParent()-&gt;getParent());\n            &#125;\n        &#125; else &#123;\n            RBTNode *uncle = grandfather-&gt;getLeft();\n\n            if (uncle &amp;&amp; uncle-&gt;getColor() == &quot;R&quot;) &#123;\n                father-&gt;setColor(&quot;B&quot;);\n                uncle-&gt;setColor(&quot;B&quot;);\n                grandfather-&gt;setColor(&quot;R&quot;);\n                node = grandfather;\n            &#125; else &#123;\n                if (node == father-&gt;getLeft()) &#123;\n                    node = father;\n                    rotateRight(node);\n                &#125;\n                node-&gt;getParent()-&gt;setColor(&quot;B&quot;);\n                node-&gt;getParent()-&gt;getParent()-&gt;setColor(&quot;R&quot;);\n                rotateLeft(node-&gt;getParent()-&gt;getParent());\n            &#125;\n        &#125;\n    &#125;\n    this-&gt;root-&gt;setColor(&quot;B&quot;);\n&#125;\n\nvoid RBT::fixAfterErase(RBTNode *node) &#123;\n    RBTNode * flag = nullptr; // 由于node指向有变化 标记一下 调整好后删除\n    while (node != this-&gt;root &amp;&amp; node-&gt;getColor() == &quot;B&quot;) &#123;\n        if (node == node-&gt;getParent()-&gt;getLeft()) &#123;\n            RBTNode *sib = node-&gt;getParent()-&gt;getRight();\n            if (sib-&gt;getColor() == &quot;R&quot;) &#123;\n                sib-&gt;setColor(&quot;B&quot;);\n                node-&gt;getParent()-&gt;setColor(&quot;R&quot;);\n                rotateLeft(node-&gt;getParent());\n                sib = node-&gt;getParent()-&gt;getRight();\n            &#125;\n            if (!sib-&gt;getLeft() &amp;&amp; !sib-&gt;getRight()) &#123;\n                sib-&gt;setColor(&quot;R&quot;);\n                node = node-&gt;getParent();\n                if(!flag) flag = node;\n            &#125; else if (sib-&gt;getLeft() &amp;&amp; sib-&gt;getLeft()-&gt;getColor() == &quot;B&quot; &amp;&amp;\n                       sib-&gt;getRight() &amp;&amp; sib-&gt;getRight()-&gt;getColor() == &quot;B&quot;) &#123;\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib-&gt;setColor(&quot;R&quot;);\n                node = node-&gt;getParent();\n            &#125; else &#123;\n                if (!sib-&gt;getRight()  || sib-&gt;getRight()-&gt;getColor() == &quot;B&quot;) &#123;\n                    sib-&gt;setColor(&quot;R&quot;);\n                    sib-&gt;getLeft()-&gt;setColor(&quot;B&quot;);\n                    rotateRight(sib);\n                    sib = node-&gt;getParent()-&gt;getRight();\n                &#125;\n                sib-&gt;setColor(node-&gt;getParent()-&gt;getColor());\n                node-&gt;getParent()-&gt;setColor(&quot;B&quot;);\n                sib-&gt;getRight()-&gt;setColor(&quot;B&quot;);\n                rotateLeft(node-&gt;getParent());\n                node = root;\n            &#125;\n        &#125; else &#123;\n            RBTNode *sib = node-&gt;getParent()-&gt;getLeft();\n            if (sib-&gt;getColor() == &quot;R&quot;) &#123;\n                sib-&gt;setColor(&quot;B&quot;);\n                node-&gt;getParent()-&gt;setColor(&quot;R&quot;);\n                rotateRight(node-&gt;getParent());\n                sib = node-&gt;getParent()-&gt;getLeft();\n            &#125;\n\n            if (!sib-&gt;getLeft() &amp;&amp; !sib-&gt;getRight()) &#123;\n                sib-&gt;setColor(&quot;R&quot;);\n                node = node-&gt;getParent();\n                if(!flag) flag = node;\n            &#125; else if (sib-&gt;getLeft() &amp;&amp; sib-&gt;getLeft()-&gt;getColor() == &quot;B&quot; &amp;&amp;\n                    sib-&gt;getRight() &amp;&amp; sib-&gt;getRight()-&gt;getColor() == &quot;B&quot;) &#123;\n                // 兄弟都为黑节点，需要找父母帮忙\n                sib-&gt;setColor(&quot;R&quot;);\n                node = node-&gt;getParent();\n            &#125; else &#123;\n                if (!sib-&gt;getLeft() || sib-&gt;getLeft()-&gt;getColor() == &quot;B&quot;) &#123;\n                    sib-&gt;setColor(&quot;R&quot;);\n                    sib-&gt;getRight()-&gt;setColor(&quot;B&quot;);\n                    rotateLeft(sib);\n                    sib = node-&gt;getParent()-&gt;getLeft();\n                &#125;\n                sib-&gt;setColor(node-&gt;getParent()-&gt;getColor());\n                node-&gt;getParent()-&gt;setColor(&quot;B&quot;);\n                sib-&gt;getLeft()-&gt;setColor(&quot;B&quot;);\n                rotateRight(node-&gt;getParent());\n                node = root;\n            &#125;\n        &#125;\n    &#125;\n    if(flag) node = flag;\n    node-&gt;setColor(&quot;B&quot;);\n&#125;\n\nRBTNode *RBT::getRoot() &#123;\n    return this-&gt;root;\n&#125;\n\nRBTNode *RBT::get(int value) &#123;\n    RBTNode *p = this-&gt;root;\n    while (p) &#123;\n        if (p-&gt;getValue() == value) return p;\n        else if (p-&gt;getValue() &gt; value) p = p-&gt;getLeft();\n        else p = p-&gt;getRight();\n    &#125;\n    return nullptr;\n&#125;\n\nvoid RBT::add(RBTNode *node) &#123;\n    RBTNode *p = this-&gt;root;\n    if (!p) &#123;\n        node-&gt;setColor(&quot;B&quot;);\n        this-&gt;root = node;\n        return;\n    &#125;\n    while (p) &#123;\n        if (p-&gt;getValue() == node-&gt;getValue()) return;\n        else if (p-&gt;getValue() &gt; node-&gt;getValue()) &#123;\n            // go left\n            if (p-&gt;getLeft()) p = p-&gt;getLeft();\n            else &#123;\n                node-&gt;setParent(p);\n                p-&gt;setLeft(node);\n                break;\n            &#125;\n        &#125; else &#123;\n            // go right\n            if (p-&gt;getRight()) p = p-&gt;getRight();\n            else &#123;\n                node-&gt;setParent(p);\n                p-&gt;setRight(node);\n                break;\n            &#125;\n        &#125;\n    &#125;\n    fixAfterAdd(node);\n&#125;\n\nvoid RBT::erase(RBTNode *node) &#123;\n    if (!node) return;\n    if (node-&gt;getLeft() &amp;&amp; node-&gt;getRight()) &#123;\n        // 查找后继节点\n        RBTNode *s = findSuccessor(node);\n        node-&gt;setValue(s-&gt;getValue());\n        node = s;\n    &#125;\n    // 此时如果找到后继节点，则node一定不会有两棵子树 即没有左子树\n    RBTNode *replace = node-&gt;getLeft() ? node-&gt;getLeft() : node-&gt;getRight();\n    if (replace) &#123;\n        // 存在一颗子树\n        replace-&gt;setParent(node-&gt;getParent());\n        if (!node-&gt;getParent()) &#123;\n            this-&gt;root = replace;\n        &#125; else if (node-&gt;getParent()-&gt;getLeft() == node) &#123;\n            node-&gt;getParent()-&gt;setLeft(replace);\n        &#125; else if (node-&gt;getParent()-&gt;getRight() == node) &#123;\n            node-&gt;getParent()-&gt;setRight(replace);\n        &#125;\n        node-&gt;setLeft(nullptr);\n        node-&gt;setRight(nullptr);\n        node-&gt;setParent(nullptr);\n        if (node-&gt;getColor() == &quot;B&quot;) fixAfterErase(replace);\n        delete node;\n    &#125; else if (!node-&gt;getParent()) &#123;\n        this-&gt;root = nullptr;\n    &#125; else &#123;\n        // 不存在子树\n        if (node-&gt;getColor() == &quot;B&quot;) fixAfterErase(node);\n        if (node-&gt;getParent()) &#123;\n            if (node-&gt;getParent()-&gt;getLeft() == node) &#123;\n                node-&gt;getParent()-&gt;setLeft(nullptr);\n            &#125; else if (node-&gt;getParent()-&gt;getRight() == node) &#123;\n                node-&gt;getParent()-&gt;setRight(nullptr);\n            &#125;\n            node-&gt;setParent(nullptr);\n            delete node;\n        &#125;\n    &#125;\n&#125;\n\nvoid RBT::printNULL() &#123;\n    cout &lt;&lt; &quot;[null]&quot;;\n&#125;\n\nvoid RBT::print(RBTNode *node) &#123;\n    cout &lt;&lt; &#39;[&#39; &lt;&lt; node-&gt;getValue() &lt;&lt; &#39;,&#39; &lt;&lt; node-&gt;getColor() &lt;&lt; &#39;]&#39;;\n&#125;\n\nvoid RBT::preOrder(RBTNode *node) &#123;\n    if (!node) &#123;\n//        printNULL();\n        return;\n    &#125;\n    print(node);\n    preOrder(node-&gt;getLeft());\n    preOrder(node-&gt;getRight());\n\n&#125;\n\nvoid RBT::inOrder(RBTNode *node) &#123;\n    if (!node) &#123;\n//        printNULL();\n        return;\n    &#125;\n    inOrder(node-&gt;getLeft());\n    print(node);\n    inOrder(node-&gt;getRight());\n&#125;\n\nvoid RBT::postOrder(RBTNode *node) &#123;\n    if (!node) &#123;\n//        printNULL();\n        return;\n    &#125;\n    postOrder(node-&gt;getLeft());\n    postOrder(node-&gt;getRight());\n    print(node);\n&#125;\n\nvoid RBT::levelOrder(RBTNode *node) &#123;\n    queue&lt;RBTNode *&gt; q;\n    if (!node) &#123;\n//        printNULL();\n        return;\n    &#125;\n    q.push(node);\n    RBTNode *back = q.back();\n    while (!q.empty()) &#123;\n        RBTNode *p = q.front();\n        q.pop();\n        print(p);\n        if (p-&gt;getLeft()) q.push(p-&gt;getLeft());\n        if (p-&gt;getRight()) q.push(p-&gt;getRight());\n        if (back == p) &#123;\n            cout &lt;&lt; endl;\n            back = q.back();\n        &#125;\n    &#125;\n&#125;\n\nvoid RBT::collectNode(RBTNode *node) &#123;\n    if (!node) return;\n\n    this-&gt;nodePool.push_back(node);\n    if (node-&gt;getLeft()) &#123;\n        collectNode(node-&gt;getLeft());\n    &#125;\n    if (node-&gt;getRight()) &#123;\n        collectNode(node-&gt;getRight());\n    &#125;\n\n\n&#125;\n\nvoid RBT::free() &#123;\n    for(RBTNode* item: this-&gt;nodePool) &#123;\n        cout &lt;&lt; &quot;del:&quot; &lt;&lt; item-&gt;getValue() &lt;&lt; endl;\n        delete item;\n    &#125;\n&#125;</code></pre>\n"},{"title":"收藏夹","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:33:55.000Z","updated":"2020-12-03T06:33:57.000Z","keywords":"Git","description":null,"passwords":null,"img":null,"abstract":"收藏夹的整理","_content":"\n# 1.新的\n\n## 1.掘金\n\n[J_Knight_](https://juejin.im/user/3562073402387006/posts)\n[行走少年郎](https://juejin.im/user/2488950054725101/posts)\n[FengyunSky](https://juejin.im/user/2225067267985704)\n\n## 2.简书\n\n[chilim](https://www.jianshu.com/u/a34dc804b875)\n\n## 3.独立博客\n\n[唐巧](https://blog.devtang.com/)\n[Gityuan](http://gityuan.com/)\n[SMSLIT](https://www.smslit.top/)\n[halfrost](https://halfrost.com/)\n[ibireme](https://blog.ibireme.com/)\n[imalan](https://blog.imalan.cn/)\n[萌面大道](https://kingcos.me/)\n[C++那些事](https://light-city.club/sc/)\n[Robin](https://robinchao.github.io/)\n[Hran](https://get233.com/)\n[陈明标](http://billchan.me/)\n[Gracker](https://androidperformance.com/)\n[程序员自由之路](https://www.cnblogs.com/54chensongxia/)\n[图拉鼎](https://imtx.me/)\n[Regulus](https://regulus.cc/)\n[Yiwei Gong](https://yiwei.dev/)\n[曹文斯](https://vince-amazing.com/)\n[袁辉辉](http://gityuan.com/)\n[洛尘曦](https://www.sgyzyun.club/)\n[脑洞前端](https://lucifer.ren/blog/)\n[刘望舒](https://liuwangshu.cn/)\n\n## 4.Github\n\n[iOS日常积累所看到的面试题集锦](https://github.com/iOShuyang/Book-Recommended-Interview)\n[iOS-InterviewQuestion-collection](https://github.com/liberalisman/iOS-InterviewQuestion-collection)\n[JHBlog](https://github.com/SunshineBrother/JHBlog)\n[经济学人、纽约客杂志](https://github.com/hehonghui/the-economist-ebooks)\n\n\n\n# 2.旧的\n[我维护的收藏夹](https://main.xq99.me)\n\n“一知半解”是一件危险的事情。\n[一名【合格】前端工程师的自检清单](https://juejin.im/post/5cc1da82f265da036023b628?utm_source=gold_browser_extension)\n\n### 2019.05.22\n[关于谷歌云的Blog](https://ikookblog.com/)\n[工具类网站](https://51.ruyo.net/9807.html)\n[大佬-不错的导航站](https://dalao.ru/)\n[电影](http://dianying.fm/discovery/tess-of-the-d-39-urbervilles/)\n[名单-资源站](https://www.mingdan.top/)\n[西瓜播放器](https://h5player.bytedance.com/generate/)\n[ACG盒子-图源](https://tu.acgbox.top/)\n[OfficeTools-工具](https://otp.landian.vip/zh-cn/)\n[Behance-设计展示网站](https://www.behance.net/)\n[万能命令-在线效率工具平台](https://wn.run/cn/)\n[黑果小兵-Blog](https://blog.daliansky.net/)\n\n\n\n### 2019.05.17\n[全历史](https://www.allhistory.com/)\n\n### 2019.05.14\n[GuiTools](https://tools.guardui.net/)\n[SoJson在线](https://www.sojson.com/)\n\n### 2019.05.11\n[Grabient-渐变色制作](https://www.grabient.com/)\n[Github趋势](https://hitup.wondertools.top/)\n[*分享软件开发视频](http://devopen.club/)\n### 2019.05.10\n[*iView-UI框架](http://v1.iviewui.com/)\n[*Elements-UI框架](https://element.eleme.cn/#/zh-CN)\n\n### 2019.05.08\n[*Vue分享博客-Blog](https://www.cnblogs.com/keepfool/)\n[VVV文档在线导出工具-工具](http://wenku.baiduvvv.com/doc/)\n[*资源-Blog](https://blogs.niceboybao.com/)\n[*好记性不如烂键盘-教程-Blog](http://blog.parryqiu.com/)\n### 2019.05.07\n[*Awesomes](https://www.awesomes.cn/)\n\n### 2019.05.04\n[wangdoc](https://github.com/wangdoc)\n~~[写给不耐烦程序员的JavaScript](http://impatient-js.apachecn.org/#/docs/)~~\n[*超全的设计模式简介（45种）](https://juejin.im/post/5cb534386fb9a0685727e1eb)\n### 2019.05.03\n[Java后端升级打怪](https://javaee.strivebo.com/)\n[后端技术杂谈](https://www.rowkey.me/blog/2016/06/27/java-backend-study/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n[Java 学习路线之四个阶段](https://segmentfault.com/a/1190000014933213)\n[Java 后端自学之路](https://juejin.im/entry/5a7a9a13f265da4e865a578c)\n[飒然HangBlog](https://www.rowkey.me/)\n\n### 2019.05.01\n\n[Githuber](https://githuber.cn/search?language=JavaScript)\n[Github](https://github.com/orsanawwad/awesome-roadmaps)\n[MikuTools](https://miku.tools/)\n[IDEA](http://idea.lanyus.com/)\n[资源](http://www.xzpc6.com/)\n[资源](http://www.olecn.com/)\n\n### 2019.04.29\n\n[杰瑞米大魔王-Ghost文章](https://www.jianshu.com/u/c7a11d79d777)\n[Ghost博客主题制作简明教程](https://my.oschina.net/letiantian/blog/633055)\n[Web骇客Blog](http://www.webhek.com/)\n[翁天信Blog](https://www.dandyweng.com/)\n[罗磊Blog](https://luolei.org/)\n\n\n\n### 2019.03-2019.04\n\n[React](https://zh-hans.reactjs.org/ \"React\")\n[BootStrap](http://www.bootcss.com/ \"BootStrap\")\n[Gulp](https://www.gulpjs.com.cn/ \"Gulp\")\n[Webpack](https://webpack.docschina.org/ \"Webpack\")\n[Sass](https://www.sass.hk/ \"Sass\")\n[Less](http://www.bootcss.com/p/lesscss/ \"Less\")\n[YCBlogs](https://github.com/yangchong211/YCBlogs \"YCBlogs\")\n[JavaScript](https://segmentfault.com/a/1190000016337325 \"JavaScript\")\n[Vector Halftone Maker](https://xoihazard.com/tools/halftone/)\n[EasyColor](http://www.easycolor.cc/)\n[css-doodle](https://css-doodle.com/)\n[opensource apple](https://opensource.apple.com/)\n[freebsd](https://github.com/freebsd/freebsd)\n[darwin-xnu](https://github.com/apple/darwin-xnu)\n[opensource apple/source](https://opensource.apple.com/source/)\n[1Z实验室](http://www.1zlab.com/)\n[清华课程](https://lib-pku.github.io/)\n[downgit](https://minhaskamal.github.io/DownGit/#/home)\n[Mac生产力工具链推荐](https://github.com/Louiszhai/tool)\n[值得推荐的C/C++框架和库](https://zhuanlan.zhihu.com/p/25443704)\n[JavaScript 教程](https://wangdoc.com/javascript/)\n[极客学院](http://wiki.jikexueyuan.com/)\n[JavaScript 初学者教程（指南）](https://segmentfault.com/a/1190000016337325)\n[2019年Web前端最新导航（常见前端框架、前端大牛）](https://www.cnblogs.com/qianguyihao/p/10701923.html)\n[四火Blog](http://www.raychase.net/allarticle)\n[李松松Blog](http://reborncodinglife.com/)\n[C/C++ 常用开源库](http://wrran.com/blog/2017/02/27/cheatsheet/dev/open-lib-in-c/)\n[酷壳Blog](https://coolshell.cn/)\n[书单](https://mp.weixin.qq.com/s/LJB7fad7lbMQtHd6YPJ8vg)\n[yangyangwithgnu Blog](https://yangyangwithgnu.github.io/)\n[宅区](https://www.otkz.com/)\n[Linesh Blog](https://blog.linesh.tw/#/)\n[Tmux](https://wdxtub.com/2016/03/30/tmux-guide/)\n[Tmux](https://xiaozhou.net/learn-the-command-line-tmux-2018-04-27.html)\n[Tmux](http://louiszhai.github.io/2017/09/30/tmux/)\n[Tmux](https://gist.github.com/ryerh/14b7c24dfd623ef8edc7)\n[Github Game](https://likexia.gitee.io/game/index.html)\n\n\n\n### 归档\n\n[算法和编程面试题精选TOP50！(附代码+解题思路+答案)](https://www.tinymind.cn/articles/3759)\n[localstorage 必知必会](https://juejin.im/post/5a9fcc5e51882555602074e3)\n[ES6、ES7、ES8、ES9、ES10新特性一览](https://juejin.im/post/5ca2e1935188254416288eb2?utm_source=gold_browser_extension)\n[2018年最新Java面试题及答案整理(持续完善中…)](https://juejin.im/entry/5af2557c6fb9a07aa83eb59c)\n\n","source":"_posts/7.收藏夹.md","raw":"---\ntitle: 收藏夹\ncategories: \n- [技术]\ntags: [收藏夹]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:33:55\nupdated: 2020-12-03 14:33:57\nkeywords: Git\ndescription: \npasswords:\nimg: \nabstract: 收藏夹的整理\n---\n\n# 1.新的\n\n## 1.掘金\n\n[J_Knight_](https://juejin.im/user/3562073402387006/posts)\n[行走少年郎](https://juejin.im/user/2488950054725101/posts)\n[FengyunSky](https://juejin.im/user/2225067267985704)\n\n## 2.简书\n\n[chilim](https://www.jianshu.com/u/a34dc804b875)\n\n## 3.独立博客\n\n[唐巧](https://blog.devtang.com/)\n[Gityuan](http://gityuan.com/)\n[SMSLIT](https://www.smslit.top/)\n[halfrost](https://halfrost.com/)\n[ibireme](https://blog.ibireme.com/)\n[imalan](https://blog.imalan.cn/)\n[萌面大道](https://kingcos.me/)\n[C++那些事](https://light-city.club/sc/)\n[Robin](https://robinchao.github.io/)\n[Hran](https://get233.com/)\n[陈明标](http://billchan.me/)\n[Gracker](https://androidperformance.com/)\n[程序员自由之路](https://www.cnblogs.com/54chensongxia/)\n[图拉鼎](https://imtx.me/)\n[Regulus](https://regulus.cc/)\n[Yiwei Gong](https://yiwei.dev/)\n[曹文斯](https://vince-amazing.com/)\n[袁辉辉](http://gityuan.com/)\n[洛尘曦](https://www.sgyzyun.club/)\n[脑洞前端](https://lucifer.ren/blog/)\n[刘望舒](https://liuwangshu.cn/)\n\n## 4.Github\n\n[iOS日常积累所看到的面试题集锦](https://github.com/iOShuyang/Book-Recommended-Interview)\n[iOS-InterviewQuestion-collection](https://github.com/liberalisman/iOS-InterviewQuestion-collection)\n[JHBlog](https://github.com/SunshineBrother/JHBlog)\n[经济学人、纽约客杂志](https://github.com/hehonghui/the-economist-ebooks)\n\n\n\n# 2.旧的\n[我维护的收藏夹](https://main.xq99.me)\n\n“一知半解”是一件危险的事情。\n[一名【合格】前端工程师的自检清单](https://juejin.im/post/5cc1da82f265da036023b628?utm_source=gold_browser_extension)\n\n### 2019.05.22\n[关于谷歌云的Blog](https://ikookblog.com/)\n[工具类网站](https://51.ruyo.net/9807.html)\n[大佬-不错的导航站](https://dalao.ru/)\n[电影](http://dianying.fm/discovery/tess-of-the-d-39-urbervilles/)\n[名单-资源站](https://www.mingdan.top/)\n[西瓜播放器](https://h5player.bytedance.com/generate/)\n[ACG盒子-图源](https://tu.acgbox.top/)\n[OfficeTools-工具](https://otp.landian.vip/zh-cn/)\n[Behance-设计展示网站](https://www.behance.net/)\n[万能命令-在线效率工具平台](https://wn.run/cn/)\n[黑果小兵-Blog](https://blog.daliansky.net/)\n\n\n\n### 2019.05.17\n[全历史](https://www.allhistory.com/)\n\n### 2019.05.14\n[GuiTools](https://tools.guardui.net/)\n[SoJson在线](https://www.sojson.com/)\n\n### 2019.05.11\n[Grabient-渐变色制作](https://www.grabient.com/)\n[Github趋势](https://hitup.wondertools.top/)\n[*分享软件开发视频](http://devopen.club/)\n### 2019.05.10\n[*iView-UI框架](http://v1.iviewui.com/)\n[*Elements-UI框架](https://element.eleme.cn/#/zh-CN)\n\n### 2019.05.08\n[*Vue分享博客-Blog](https://www.cnblogs.com/keepfool/)\n[VVV文档在线导出工具-工具](http://wenku.baiduvvv.com/doc/)\n[*资源-Blog](https://blogs.niceboybao.com/)\n[*好记性不如烂键盘-教程-Blog](http://blog.parryqiu.com/)\n### 2019.05.07\n[*Awesomes](https://www.awesomes.cn/)\n\n### 2019.05.04\n[wangdoc](https://github.com/wangdoc)\n~~[写给不耐烦程序员的JavaScript](http://impatient-js.apachecn.org/#/docs/)~~\n[*超全的设计模式简介（45种）](https://juejin.im/post/5cb534386fb9a0685727e1eb)\n### 2019.05.03\n[Java后端升级打怪](https://javaee.strivebo.com/)\n[后端技术杂谈](https://www.rowkey.me/blog/2016/06/27/java-backend-study/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n[Java 学习路线之四个阶段](https://segmentfault.com/a/1190000014933213)\n[Java 后端自学之路](https://juejin.im/entry/5a7a9a13f265da4e865a578c)\n[飒然HangBlog](https://www.rowkey.me/)\n\n### 2019.05.01\n\n[Githuber](https://githuber.cn/search?language=JavaScript)\n[Github](https://github.com/orsanawwad/awesome-roadmaps)\n[MikuTools](https://miku.tools/)\n[IDEA](http://idea.lanyus.com/)\n[资源](http://www.xzpc6.com/)\n[资源](http://www.olecn.com/)\n\n### 2019.04.29\n\n[杰瑞米大魔王-Ghost文章](https://www.jianshu.com/u/c7a11d79d777)\n[Ghost博客主题制作简明教程](https://my.oschina.net/letiantian/blog/633055)\n[Web骇客Blog](http://www.webhek.com/)\n[翁天信Blog](https://www.dandyweng.com/)\n[罗磊Blog](https://luolei.org/)\n\n\n\n### 2019.03-2019.04\n\n[React](https://zh-hans.reactjs.org/ \"React\")\n[BootStrap](http://www.bootcss.com/ \"BootStrap\")\n[Gulp](https://www.gulpjs.com.cn/ \"Gulp\")\n[Webpack](https://webpack.docschina.org/ \"Webpack\")\n[Sass](https://www.sass.hk/ \"Sass\")\n[Less](http://www.bootcss.com/p/lesscss/ \"Less\")\n[YCBlogs](https://github.com/yangchong211/YCBlogs \"YCBlogs\")\n[JavaScript](https://segmentfault.com/a/1190000016337325 \"JavaScript\")\n[Vector Halftone Maker](https://xoihazard.com/tools/halftone/)\n[EasyColor](http://www.easycolor.cc/)\n[css-doodle](https://css-doodle.com/)\n[opensource apple](https://opensource.apple.com/)\n[freebsd](https://github.com/freebsd/freebsd)\n[darwin-xnu](https://github.com/apple/darwin-xnu)\n[opensource apple/source](https://opensource.apple.com/source/)\n[1Z实验室](http://www.1zlab.com/)\n[清华课程](https://lib-pku.github.io/)\n[downgit](https://minhaskamal.github.io/DownGit/#/home)\n[Mac生产力工具链推荐](https://github.com/Louiszhai/tool)\n[值得推荐的C/C++框架和库](https://zhuanlan.zhihu.com/p/25443704)\n[JavaScript 教程](https://wangdoc.com/javascript/)\n[极客学院](http://wiki.jikexueyuan.com/)\n[JavaScript 初学者教程（指南）](https://segmentfault.com/a/1190000016337325)\n[2019年Web前端最新导航（常见前端框架、前端大牛）](https://www.cnblogs.com/qianguyihao/p/10701923.html)\n[四火Blog](http://www.raychase.net/allarticle)\n[李松松Blog](http://reborncodinglife.com/)\n[C/C++ 常用开源库](http://wrran.com/blog/2017/02/27/cheatsheet/dev/open-lib-in-c/)\n[酷壳Blog](https://coolshell.cn/)\n[书单](https://mp.weixin.qq.com/s/LJB7fad7lbMQtHd6YPJ8vg)\n[yangyangwithgnu Blog](https://yangyangwithgnu.github.io/)\n[宅区](https://www.otkz.com/)\n[Linesh Blog](https://blog.linesh.tw/#/)\n[Tmux](https://wdxtub.com/2016/03/30/tmux-guide/)\n[Tmux](https://xiaozhou.net/learn-the-command-line-tmux-2018-04-27.html)\n[Tmux](http://louiszhai.github.io/2017/09/30/tmux/)\n[Tmux](https://gist.github.com/ryerh/14b7c24dfd623ef8edc7)\n[Github Game](https://likexia.gitee.io/game/index.html)\n\n\n\n### 归档\n\n[算法和编程面试题精选TOP50！(附代码+解题思路+答案)](https://www.tinymind.cn/articles/3759)\n[localstorage 必知必会](https://juejin.im/post/5a9fcc5e51882555602074e3)\n[ES6、ES7、ES8、ES9、ES10新特性一览](https://juejin.im/post/5ca2e1935188254416288eb2?utm_source=gold_browser_extension)\n[2018年最新Java面试题及答案整理(持续完善中…)](https://juejin.im/entry/5af2557c6fb9a07aa83eb59c)\n\n","slug":"7.收藏夹","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqry00193th8di12255g","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-新的\"><a href=\"#1-新的\" class=\"headerlink\" title=\"1.新的\"></a>1.新的</h1><h2 id=\"1-掘金\"><a href=\"#1-掘金\" class=\"headerlink\" title=\"1.掘金\"></a>1.掘金</h2><p><a href=\"https://juejin.im/user/3562073402387006/posts\">J_Knight_</a><br><a href=\"https://juejin.im/user/2488950054725101/posts\">行走少年郎</a><br><a href=\"https://juejin.im/user/2225067267985704\">FengyunSky</a></p>\n<h2 id=\"2-简书\"><a href=\"#2-简书\" class=\"headerlink\" title=\"2.简书\"></a>2.简书</h2><p><a href=\"https://www.jianshu.com/u/a34dc804b875\">chilim</a></p>\n<h2 id=\"3-独立博客\"><a href=\"#3-独立博客\" class=\"headerlink\" title=\"3.独立博客\"></a>3.独立博客</h2><p><a href=\"https://blog.devtang.com/\">唐巧</a><br><a href=\"http://gityuan.com/\">Gityuan</a><br><a href=\"https://www.smslit.top/\">SMSLIT</a><br><a href=\"https://halfrost.com/\">halfrost</a><br><a href=\"https://blog.ibireme.com/\">ibireme</a><br><a href=\"https://blog.imalan.cn/\">imalan</a><br><a href=\"https://kingcos.me/\">萌面大道</a><br><a href=\"https://light-city.club/sc/\">C++那些事</a><br><a href=\"https://robinchao.github.io/\">Robin</a><br><a href=\"https://get233.com/\">Hran</a><br><a href=\"http://billchan.me/\">陈明标</a><br><a href=\"https://androidperformance.com/\">Gracker</a><br><a href=\"https://www.cnblogs.com/54chensongxia/\">程序员自由之路</a><br><a href=\"https://imtx.me/\">图拉鼎</a><br><a href=\"https://regulus.cc/\">Regulus</a><br><a href=\"https://yiwei.dev/\">Yiwei Gong</a><br><a href=\"https://vince-amazing.com/\">曹文斯</a><br><a href=\"http://gityuan.com/\">袁辉辉</a><br><a href=\"https://www.sgyzyun.club/\">洛尘曦</a><br><a href=\"https://lucifer.ren/blog/\">脑洞前端</a><br><a href=\"https://liuwangshu.cn/\">刘望舒</a></p>\n<h2 id=\"4-Github\"><a href=\"#4-Github\" class=\"headerlink\" title=\"4.Github\"></a>4.Github</h2><p><a href=\"https://github.com/iOShuyang/Book-Recommended-Interview\">iOS日常积累所看到的面试题集锦</a><br><a href=\"https://github.com/liberalisman/iOS-InterviewQuestion-collection\">iOS-InterviewQuestion-collection</a><br><a href=\"https://github.com/SunshineBrother/JHBlog\">JHBlog</a><br><a href=\"https://github.com/hehonghui/the-economist-ebooks\">经济学人、纽约客杂志</a></p>\n<h1 id=\"2-旧的\"><a href=\"#2-旧的\" class=\"headerlink\" title=\"2.旧的\"></a>2.旧的</h1><p><a href=\"https://main.xq99.me/\">我维护的收藏夹</a></p>\n<p>“一知半解”是一件危险的事情。<br><a href=\"https://juejin.im/post/5cc1da82f265da036023b628?utm_source=gold_browser_extension\">一名【合格】前端工程师的自检清单</a></p>\n<h3 id=\"2019-05-22\"><a href=\"#2019-05-22\" class=\"headerlink\" title=\"2019.05.22\"></a>2019.05.22</h3><p><a href=\"https://ikookblog.com/\">关于谷歌云的Blog</a><br><a href=\"https://51.ruyo.net/9807.html\">工具类网站</a><br><a href=\"https://dalao.ru/\">大佬-不错的导航站</a><br><a href=\"http://dianying.fm/discovery/tess-of-the-d-39-urbervilles/\">电影</a><br><a href=\"https://www.mingdan.top/\">名单-资源站</a><br><a href=\"https://h5player.bytedance.com/generate/\">西瓜播放器</a><br><a href=\"https://tu.acgbox.top/\">ACG盒子-图源</a><br><a href=\"https://otp.landian.vip/zh-cn/\">OfficeTools-工具</a><br><a href=\"https://www.behance.net/\">Behance-设计展示网站</a><br><a href=\"https://wn.run/cn/\">万能命令-在线效率工具平台</a><br><a href=\"https://blog.daliansky.net/\">黑果小兵-Blog</a></p>\n<h3 id=\"2019-05-17\"><a href=\"#2019-05-17\" class=\"headerlink\" title=\"2019.05.17\"></a>2019.05.17</h3><p><a href=\"https://www.allhistory.com/\">全历史</a></p>\n<h3 id=\"2019-05-14\"><a href=\"#2019-05-14\" class=\"headerlink\" title=\"2019.05.14\"></a>2019.05.14</h3><p><a href=\"https://tools.guardui.net/\">GuiTools</a><br><a href=\"https://www.sojson.com/\">SoJson在线</a></p>\n<h3 id=\"2019-05-11\"><a href=\"#2019-05-11\" class=\"headerlink\" title=\"2019.05.11\"></a>2019.05.11</h3><p><a href=\"https://www.grabient.com/\">Grabient-渐变色制作</a><br><a href=\"https://hitup.wondertools.top/\">Github趋势</a><br><a href=\"http://devopen.club/\">*分享软件开发视频</a></p>\n<h3 id=\"2019-05-10\"><a href=\"#2019-05-10\" class=\"headerlink\" title=\"2019.05.10\"></a>2019.05.10</h3><p><a href=\"http://v1.iviewui.com/\">*iView-UI框架</a><br><a href=\"https://element.eleme.cn/#/zh-CN\">*Elements-UI框架</a></p>\n<h3 id=\"2019-05-08\"><a href=\"#2019-05-08\" class=\"headerlink\" title=\"2019.05.08\"></a>2019.05.08</h3><p><a href=\"https://www.cnblogs.com/keepfool/\">*Vue分享博客-Blog</a><br><a href=\"http://wenku.baiduvvv.com/doc/\">VVV文档在线导出工具-工具</a><br><a href=\"https://blogs.niceboybao.com/\">*资源-Blog</a><br><a href=\"http://blog.parryqiu.com/\">*好记性不如烂键盘-教程-Blog</a></p>\n<h3 id=\"2019-05-07\"><a href=\"#2019-05-07\" class=\"headerlink\" title=\"2019.05.07\"></a>2019.05.07</h3><p><a href=\"https://www.awesomes.cn/\">*Awesomes</a></p>\n<h3 id=\"2019-05-04\"><a href=\"#2019-05-04\" class=\"headerlink\" title=\"2019.05.04\"></a>2019.05.04</h3><p><a href=\"https://github.com/wangdoc\">wangdoc</a><br><del><a href=\"http://impatient-js.apachecn.org/#/docs/\">写给不耐烦程序员的JavaScript</a></del><br><a href=\"https://juejin.im/post/5cb534386fb9a0685727e1eb\">*超全的设计模式简介（45种）</a></p>\n<h3 id=\"2019-05-03\"><a href=\"#2019-05-03\" class=\"headerlink\" title=\"2019.05.03\"></a>2019.05.03</h3><p><a href=\"https://javaee.strivebo.com/\">Java后端升级打怪</a><br><a href=\"https://www.rowkey.me/blog/2016/06/27/java-backend-study/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\">后端技术杂谈</a><br><a href=\"https://segmentfault.com/a/1190000014933213\">Java 学习路线之四个阶段</a><br><a href=\"https://juejin.im/entry/5a7a9a13f265da4e865a578c\">Java 后端自学之路</a><br><a href=\"https://www.rowkey.me/\">飒然HangBlog</a></p>\n<h3 id=\"2019-05-01\"><a href=\"#2019-05-01\" class=\"headerlink\" title=\"2019.05.01\"></a>2019.05.01</h3><p><a href=\"https://githuber.cn/search?language=JavaScript\">Githuber</a><br><a href=\"https://github.com/orsanawwad/awesome-roadmaps\">Github</a><br><a href=\"https://miku.tools/\">MikuTools</a><br><a href=\"http://idea.lanyus.com/\">IDEA</a><br><a href=\"http://www.xzpc6.com/\">资源</a><br><a href=\"http://www.olecn.com/\">资源</a></p>\n<h3 id=\"2019-04-29\"><a href=\"#2019-04-29\" class=\"headerlink\" title=\"2019.04.29\"></a>2019.04.29</h3><p><a href=\"https://www.jianshu.com/u/c7a11d79d777\">杰瑞米大魔王-Ghost文章</a><br><a href=\"https://my.oschina.net/letiantian/blog/633055\">Ghost博客主题制作简明教程</a><br><a href=\"http://www.webhek.com/\">Web骇客Blog</a><br><a href=\"https://www.dandyweng.com/\">翁天信Blog</a><br><a href=\"https://luolei.org/\">罗磊Blog</a></p>\n<h3 id=\"2019-03-2019-04\"><a href=\"#2019-03-2019-04\" class=\"headerlink\" title=\"2019.03-2019.04\"></a>2019.03-2019.04</h3><p><a href=\"https://zh-hans.reactjs.org/\" title=\"React\">React</a><br><a href=\"http://www.bootcss.com/\" title=\"BootStrap\">BootStrap</a><br><a href=\"https://www.gulpjs.com.cn/\" title=\"Gulp\">Gulp</a><br><a href=\"https://webpack.docschina.org/\" title=\"Webpack\">Webpack</a><br><a href=\"https://www.sass.hk/\" title=\"Sass\">Sass</a><br><a href=\"http://www.bootcss.com/p/lesscss/\" title=\"Less\">Less</a><br><a href=\"https://github.com/yangchong211/YCBlogs\" title=\"YCBlogs\">YCBlogs</a><br><a href=\"https://segmentfault.com/a/1190000016337325\" title=\"JavaScript\">JavaScript</a><br><a href=\"https://xoihazard.com/tools/halftone/\">Vector Halftone Maker</a><br><a href=\"http://www.easycolor.cc/\">EasyColor</a><br><a href=\"https://css-doodle.com/\">css-doodle</a><br><a href=\"https://opensource.apple.com/\">opensource apple</a><br><a href=\"https://github.com/freebsd/freebsd\">freebsd</a><br><a href=\"https://github.com/apple/darwin-xnu\">darwin-xnu</a><br><a href=\"https://opensource.apple.com/source/\">opensource apple/source</a><br><a href=\"http://www.1zlab.com/\">1Z实验室</a><br><a href=\"https://lib-pku.github.io/\">清华课程</a><br><a href=\"https://minhaskamal.github.io/DownGit/#/home\">downgit</a><br><a href=\"https://github.com/Louiszhai/tool\">Mac生产力工具链推荐</a><br><a href=\"https://zhuanlan.zhihu.com/p/25443704\">值得推荐的C/C++框架和库</a><br><a href=\"https://wangdoc.com/javascript/\">JavaScript 教程</a><br><a href=\"http://wiki.jikexueyuan.com/\">极客学院</a><br><a href=\"https://segmentfault.com/a/1190000016337325\">JavaScript 初学者教程（指南）</a><br><a href=\"https://www.cnblogs.com/qianguyihao/p/10701923.html\">2019年Web前端最新导航（常见前端框架、前端大牛）</a><br><a href=\"http://www.raychase.net/allarticle\">四火Blog</a><br><a href=\"http://reborncodinglife.com/\">李松松Blog</a><br><a href=\"http://wrran.com/blog/2017/02/27/cheatsheet/dev/open-lib-in-c/\">C/C++ 常用开源库</a><br><a href=\"https://coolshell.cn/\">酷壳Blog</a><br><a href=\"https://mp.weixin.qq.com/s/LJB7fad7lbMQtHd6YPJ8vg\">书单</a><br><a href=\"https://yangyangwithgnu.github.io/\">yangyangwithgnu Blog</a><br><a href=\"https://www.otkz.com/\">宅区</a><br><a href=\"https://blog.linesh.tw/#/\">Linesh Blog</a><br><a href=\"https://wdxtub.com/2016/03/30/tmux-guide/\">Tmux</a><br><a href=\"https://xiaozhou.net/learn-the-command-line-tmux-2018-04-27.html\">Tmux</a><br><a href=\"http://louiszhai.github.io/2017/09/30/tmux/\">Tmux</a><br><a href=\"https://gist.github.com/ryerh/14b7c24dfd623ef8edc7\">Tmux</a><br><a href=\"https://likexia.gitee.io/game/index.html\">Github Game</a></p>\n<h3 id=\"归档\"><a href=\"#归档\" class=\"headerlink\" title=\"归档\"></a>归档</h3><p><a href=\"https://www.tinymind.cn/articles/3759\">算法和编程面试题精选TOP50！(附代码+解题思路+答案)</a><br><a href=\"https://juejin.im/post/5a9fcc5e51882555602074e3\">localstorage 必知必会</a><br><a href=\"https://juejin.im/post/5ca2e1935188254416288eb2?utm_source=gold_browser_extension\">ES6、ES7、ES8、ES9、ES10新特性一览</a><br><a href=\"https://juejin.im/entry/5af2557c6fb9a07aa83eb59c\">2018年最新Java面试题及答案整理(持续完善中…)</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/equalizer_dots.png","excerpt":"","more":"<h1 id=\"1-新的\"><a href=\"#1-新的\" class=\"headerlink\" title=\"1.新的\"></a>1.新的</h1><h2 id=\"1-掘金\"><a href=\"#1-掘金\" class=\"headerlink\" title=\"1.掘金\"></a>1.掘金</h2><p><a href=\"https://juejin.im/user/3562073402387006/posts\">J_Knight_</a><br><a href=\"https://juejin.im/user/2488950054725101/posts\">行走少年郎</a><br><a href=\"https://juejin.im/user/2225067267985704\">FengyunSky</a></p>\n<h2 id=\"2-简书\"><a href=\"#2-简书\" class=\"headerlink\" title=\"2.简书\"></a>2.简书</h2><p><a href=\"https://www.jianshu.com/u/a34dc804b875\">chilim</a></p>\n<h2 id=\"3-独立博客\"><a href=\"#3-独立博客\" class=\"headerlink\" title=\"3.独立博客\"></a>3.独立博客</h2><p><a href=\"https://blog.devtang.com/\">唐巧</a><br><a href=\"http://gityuan.com/\">Gityuan</a><br><a href=\"https://www.smslit.top/\">SMSLIT</a><br><a href=\"https://halfrost.com/\">halfrost</a><br><a href=\"https://blog.ibireme.com/\">ibireme</a><br><a href=\"https://blog.imalan.cn/\">imalan</a><br><a href=\"https://kingcos.me/\">萌面大道</a><br><a href=\"https://light-city.club/sc/\">C++那些事</a><br><a href=\"https://robinchao.github.io/\">Robin</a><br><a href=\"https://get233.com/\">Hran</a><br><a href=\"http://billchan.me/\">陈明标</a><br><a href=\"https://androidperformance.com/\">Gracker</a><br><a href=\"https://www.cnblogs.com/54chensongxia/\">程序员自由之路</a><br><a href=\"https://imtx.me/\">图拉鼎</a><br><a href=\"https://regulus.cc/\">Regulus</a><br><a href=\"https://yiwei.dev/\">Yiwei Gong</a><br><a href=\"https://vince-amazing.com/\">曹文斯</a><br><a href=\"http://gityuan.com/\">袁辉辉</a><br><a href=\"https://www.sgyzyun.club/\">洛尘曦</a><br><a href=\"https://lucifer.ren/blog/\">脑洞前端</a><br><a href=\"https://liuwangshu.cn/\">刘望舒</a></p>\n<h2 id=\"4-Github\"><a href=\"#4-Github\" class=\"headerlink\" title=\"4.Github\"></a>4.Github</h2><p><a href=\"https://github.com/iOShuyang/Book-Recommended-Interview\">iOS日常积累所看到的面试题集锦</a><br><a href=\"https://github.com/liberalisman/iOS-InterviewQuestion-collection\">iOS-InterviewQuestion-collection</a><br><a href=\"https://github.com/SunshineBrother/JHBlog\">JHBlog</a><br><a href=\"https://github.com/hehonghui/the-economist-ebooks\">经济学人、纽约客杂志</a></p>\n<h1 id=\"2-旧的\"><a href=\"#2-旧的\" class=\"headerlink\" title=\"2.旧的\"></a>2.旧的</h1><p><a href=\"https://main.xq99.me/\">我维护的收藏夹</a></p>\n<p>“一知半解”是一件危险的事情。<br><a href=\"https://juejin.im/post/5cc1da82f265da036023b628?utm_source=gold_browser_extension\">一名【合格】前端工程师的自检清单</a></p>\n<h3 id=\"2019-05-22\"><a href=\"#2019-05-22\" class=\"headerlink\" title=\"2019.05.22\"></a>2019.05.22</h3><p><a href=\"https://ikookblog.com/\">关于谷歌云的Blog</a><br><a href=\"https://51.ruyo.net/9807.html\">工具类网站</a><br><a href=\"https://dalao.ru/\">大佬-不错的导航站</a><br><a href=\"http://dianying.fm/discovery/tess-of-the-d-39-urbervilles/\">电影</a><br><a href=\"https://www.mingdan.top/\">名单-资源站</a><br><a href=\"https://h5player.bytedance.com/generate/\">西瓜播放器</a><br><a href=\"https://tu.acgbox.top/\">ACG盒子-图源</a><br><a href=\"https://otp.landian.vip/zh-cn/\">OfficeTools-工具</a><br><a href=\"https://www.behance.net/\">Behance-设计展示网站</a><br><a href=\"https://wn.run/cn/\">万能命令-在线效率工具平台</a><br><a href=\"https://blog.daliansky.net/\">黑果小兵-Blog</a></p>\n<h3 id=\"2019-05-17\"><a href=\"#2019-05-17\" class=\"headerlink\" title=\"2019.05.17\"></a>2019.05.17</h3><p><a href=\"https://www.allhistory.com/\">全历史</a></p>\n<h3 id=\"2019-05-14\"><a href=\"#2019-05-14\" class=\"headerlink\" title=\"2019.05.14\"></a>2019.05.14</h3><p><a href=\"https://tools.guardui.net/\">GuiTools</a><br><a href=\"https://www.sojson.com/\">SoJson在线</a></p>\n<h3 id=\"2019-05-11\"><a href=\"#2019-05-11\" class=\"headerlink\" title=\"2019.05.11\"></a>2019.05.11</h3><p><a href=\"https://www.grabient.com/\">Grabient-渐变色制作</a><br><a href=\"https://hitup.wondertools.top/\">Github趋势</a><br><a href=\"http://devopen.club/\">*分享软件开发视频</a></p>\n<h3 id=\"2019-05-10\"><a href=\"#2019-05-10\" class=\"headerlink\" title=\"2019.05.10\"></a>2019.05.10</h3><p><a href=\"http://v1.iviewui.com/\">*iView-UI框架</a><br><a href=\"https://element.eleme.cn/#/zh-CN\">*Elements-UI框架</a></p>\n<h3 id=\"2019-05-08\"><a href=\"#2019-05-08\" class=\"headerlink\" title=\"2019.05.08\"></a>2019.05.08</h3><p><a href=\"https://www.cnblogs.com/keepfool/\">*Vue分享博客-Blog</a><br><a href=\"http://wenku.baiduvvv.com/doc/\">VVV文档在线导出工具-工具</a><br><a href=\"https://blogs.niceboybao.com/\">*资源-Blog</a><br><a href=\"http://blog.parryqiu.com/\">*好记性不如烂键盘-教程-Blog</a></p>\n<h3 id=\"2019-05-07\"><a href=\"#2019-05-07\" class=\"headerlink\" title=\"2019.05.07\"></a>2019.05.07</h3><p><a href=\"https://www.awesomes.cn/\">*Awesomes</a></p>\n<h3 id=\"2019-05-04\"><a href=\"#2019-05-04\" class=\"headerlink\" title=\"2019.05.04\"></a>2019.05.04</h3><p><a href=\"https://github.com/wangdoc\">wangdoc</a><br><del><a href=\"http://impatient-js.apachecn.org/#/docs/\">写给不耐烦程序员的JavaScript</a></del><br><a href=\"https://juejin.im/post/5cb534386fb9a0685727e1eb\">*超全的设计模式简介（45种）</a></p>\n<h3 id=\"2019-05-03\"><a href=\"#2019-05-03\" class=\"headerlink\" title=\"2019.05.03\"></a>2019.05.03</h3><p><a href=\"https://javaee.strivebo.com/\">Java后端升级打怪</a><br><a href=\"https://www.rowkey.me/blog/2016/06/27/java-backend-study/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\">后端技术杂谈</a><br><a href=\"https://segmentfault.com/a/1190000014933213\">Java 学习路线之四个阶段</a><br><a href=\"https://juejin.im/entry/5a7a9a13f265da4e865a578c\">Java 后端自学之路</a><br><a href=\"https://www.rowkey.me/\">飒然HangBlog</a></p>\n<h3 id=\"2019-05-01\"><a href=\"#2019-05-01\" class=\"headerlink\" title=\"2019.05.01\"></a>2019.05.01</h3><p><a href=\"https://githuber.cn/search?language=JavaScript\">Githuber</a><br><a href=\"https://github.com/orsanawwad/awesome-roadmaps\">Github</a><br><a href=\"https://miku.tools/\">MikuTools</a><br><a href=\"http://idea.lanyus.com/\">IDEA</a><br><a href=\"http://www.xzpc6.com/\">资源</a><br><a href=\"http://www.olecn.com/\">资源</a></p>\n<h3 id=\"2019-04-29\"><a href=\"#2019-04-29\" class=\"headerlink\" title=\"2019.04.29\"></a>2019.04.29</h3><p><a href=\"https://www.jianshu.com/u/c7a11d79d777\">杰瑞米大魔王-Ghost文章</a><br><a href=\"https://my.oschina.net/letiantian/blog/633055\">Ghost博客主题制作简明教程</a><br><a href=\"http://www.webhek.com/\">Web骇客Blog</a><br><a href=\"https://www.dandyweng.com/\">翁天信Blog</a><br><a href=\"https://luolei.org/\">罗磊Blog</a></p>\n<h3 id=\"2019-03-2019-04\"><a href=\"#2019-03-2019-04\" class=\"headerlink\" title=\"2019.03-2019.04\"></a>2019.03-2019.04</h3><p><a href=\"https://zh-hans.reactjs.org/\" title=\"React\">React</a><br><a href=\"http://www.bootcss.com/\" title=\"BootStrap\">BootStrap</a><br><a href=\"https://www.gulpjs.com.cn/\" title=\"Gulp\">Gulp</a><br><a href=\"https://webpack.docschina.org/\" title=\"Webpack\">Webpack</a><br><a href=\"https://www.sass.hk/\" title=\"Sass\">Sass</a><br><a href=\"http://www.bootcss.com/p/lesscss/\" title=\"Less\">Less</a><br><a href=\"https://github.com/yangchong211/YCBlogs\" title=\"YCBlogs\">YCBlogs</a><br><a href=\"https://segmentfault.com/a/1190000016337325\" title=\"JavaScript\">JavaScript</a><br><a href=\"https://xoihazard.com/tools/halftone/\">Vector Halftone Maker</a><br><a href=\"http://www.easycolor.cc/\">EasyColor</a><br><a href=\"https://css-doodle.com/\">css-doodle</a><br><a href=\"https://opensource.apple.com/\">opensource apple</a><br><a href=\"https://github.com/freebsd/freebsd\">freebsd</a><br><a href=\"https://github.com/apple/darwin-xnu\">darwin-xnu</a><br><a href=\"https://opensource.apple.com/source/\">opensource apple/source</a><br><a href=\"http://www.1zlab.com/\">1Z实验室</a><br><a href=\"https://lib-pku.github.io/\">清华课程</a><br><a href=\"https://minhaskamal.github.io/DownGit/#/home\">downgit</a><br><a href=\"https://github.com/Louiszhai/tool\">Mac生产力工具链推荐</a><br><a href=\"https://zhuanlan.zhihu.com/p/25443704\">值得推荐的C/C++框架和库</a><br><a href=\"https://wangdoc.com/javascript/\">JavaScript 教程</a><br><a href=\"http://wiki.jikexueyuan.com/\">极客学院</a><br><a href=\"https://segmentfault.com/a/1190000016337325\">JavaScript 初学者教程（指南）</a><br><a href=\"https://www.cnblogs.com/qianguyihao/p/10701923.html\">2019年Web前端最新导航（常见前端框架、前端大牛）</a><br><a href=\"http://www.raychase.net/allarticle\">四火Blog</a><br><a href=\"http://reborncodinglife.com/\">李松松Blog</a><br><a href=\"http://wrran.com/blog/2017/02/27/cheatsheet/dev/open-lib-in-c/\">C/C++ 常用开源库</a><br><a href=\"https://coolshell.cn/\">酷壳Blog</a><br><a href=\"https://mp.weixin.qq.com/s/LJB7fad7lbMQtHd6YPJ8vg\">书单</a><br><a href=\"https://yangyangwithgnu.github.io/\">yangyangwithgnu Blog</a><br><a href=\"https://www.otkz.com/\">宅区</a><br><a href=\"https://blog.linesh.tw/#/\">Linesh Blog</a><br><a href=\"https://wdxtub.com/2016/03/30/tmux-guide/\">Tmux</a><br><a href=\"https://xiaozhou.net/learn-the-command-line-tmux-2018-04-27.html\">Tmux</a><br><a href=\"http://louiszhai.github.io/2017/09/30/tmux/\">Tmux</a><br><a href=\"https://gist.github.com/ryerh/14b7c24dfd623ef8edc7\">Tmux</a><br><a href=\"https://likexia.gitee.io/game/index.html\">Github Game</a></p>\n<h3 id=\"归档\"><a href=\"#归档\" class=\"headerlink\" title=\"归档\"></a>归档</h3><p><a href=\"https://www.tinymind.cn/articles/3759\">算法和编程面试题精选TOP50！(附代码+解题思路+答案)</a><br><a href=\"https://juejin.im/post/5a9fcc5e51882555602074e3\">localstorage 必知必会</a><br><a href=\"https://juejin.im/post/5ca2e1935188254416288eb2?utm_source=gold_browser_extension\">ES6、ES7、ES8、ES9、ES10新特性一览</a><br><a href=\"https://juejin.im/entry/5af2557c6fb9a07aa83eb59c\">2018年最新Java面试题及答案整理(持续完善中…)</a></p>\n"},{"title":"深度探索C++对象模型","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:36:44.000Z","updated":"2020-12-03T06:36:50.000Z","keywords":"C++对象模型","description":null,"passwords":null,"img":null,"abstract":"C++面相对象","_content":"\n[深度探索C++对象模型](https://wangpengcheng.github.io/2019/11/28/cplusplus_object_model/)\n[深入探索C++对象模型](https://www.jianshu.com/p/620448dcc81a)","source":"_posts/8.深度探索C++对象模型.md","raw":"---\ntitle: 深度探索C++对象模型\ncategories: \n- [技术]\ntags: [C++, 对象]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:36:44\nupdated: 2020-12-03 14:36:50\nkeywords: C++对象模型\ndescription: \npasswords:\nimg: \nabstract: C++面相对象\n---\n\n[深度探索C++对象模型](https://wangpengcheng.github.io/2019/11/28/cplusplus_object_model/)\n[深入探索C++对象模型](https://www.jianshu.com/p/620448dcc81a)","slug":"8.深度探索C++对象模型","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqs1001c3th809qf0ucv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><a href=\"https://wangpengcheng.github.io/2019/11/28/cplusplus_object_model/\">深度探索C++对象模型</a><br><a href=\"https://www.jianshu.com/p/620448dcc81a\">深入探索C++对象模型</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/autumn.png","excerpt":"","more":"<p><a href=\"https://wangpengcheng.github.io/2019/11/28/cplusplus_object_model/\">深度探索C++对象模型</a><br><a href=\"https://www.jianshu.com/p/620448dcc81a\">深入探索C++对象模型</a></p>\n"},{"title":"iOS开发知识集合","copyright":true,"comments":1,"top":false,"author":"XQ","mathjax":false,"date":"2020-12-03T06:40:21.000Z","updated":"2020-12-03T06:40:24.000Z","keywords":"C++对象模型","description":null,"passwords":null,"img":null,"abstract":"C++面相对象","_content":"\n# 1.Runtime四部曲\n[iOS 开发：『Runtime』详解（一）基础知识](https://juejin.im/post/6844903878794706957)  \n[ iOS 开发：『Runtime』详解（二）Method Swizzling](https://juejin.im/post/6844903888122822669)\n[iOS 开发：『Runtime』详解（三）Category 底层原理](https://juejin.im/post/6844903896708562952)\n[iOS 开发：『Runtime』详解（四）获取类详细属性、方法](https://juejin.im/post/6844903903939526669)\n\n\n# 2.iOS探索系列\n[iOS探索 内存管理篇](https://juejin.im/post/6857758064658153486)\n\n# 3.《Effective Objective-C》干货三部曲\n[概念篇](https://juejin.im/post/6844903545636913159) \n[规范篇](https://juejin.im/post/6844903548942024717)\n[技巧篇](https://juejin.im/post/6844903549780885511)\n\n# 4.《Objective-C 高级编程》干货三部曲\n[引用计数篇 ](https://juejin.im/post/6844903473272586254)\n[Blocks篇](https://juejin.im/post/6844903474312773646) \n[GCD篇](https://juejin.im/post/6844903475378159623)\n\n# 5.『Blocks』详尽总结\n[基本使用](https://juejin.im/post/6844903874118025229) \n[底层原理](https://juejin.im/post/6844903875795779591)\n\n# 6.Runloop\n[RunLoop 源码阅读](https://juejin.im/post/6844903592369848328)\n[iOS底层原理探究-Runloop](https://juejin.im/post/6844903604965523464) \n[iOS底层原理总结 - RunLoop](https://juejin.im/post/6844903598350925831)\n\n# 7.iOS 开发：『Crash 防护系统』\n[Unrecognized Selector ](https://juejin.im/post/6844903922667094023)\n[KVO 防护](https://juejin.im/post/6844903927469588488) \n[KVC 防护](https://juejin.im/post/6844903934662803464)\n[iOS Crash防护](https://juejin.im/post/6874435201632583694) \n[一文读懂崩溃原理](https://juejin.im/post/6873868181635760142)\n\n# 8.多线程\n[iOS多线程：『GCD』详尽总结](https://juejin.im/post/6844903566398717960)\n[iOS多线程：『pthread、NSThread』详尽总结](https://juejin.im/post/6844903556009443335)\n[iOS多线程：『NSOperation、NSOperationQueue』详尽总结](https://juejin.im/post/6844903570467192845)\n\n# 9.网络\n[iOS开发·网络请求大总结](https://juejin.im/post/6844903636137410574)\n\n# 10.锁\n[iOS各种锁总结](https://juejin.im/post/6844904143157460999)\n","source":"_posts/9.iOS开发知识点集合.md","raw":"---\ntitle: iOS开发知识集合\ncategories: \n- [技术]\ntags: [iOS]\ncopyright: true\ncomments: true\ntop: false\nauthor: XQ\nmathjax: false\ndate: 2020-12-03 14:40:21\nupdated: 2020-12-03 14:40:24\nkeywords: C++对象模型\ndescription: \npasswords:\nimg: \nabstract: C++面相对象\n---\n\n# 1.Runtime四部曲\n[iOS 开发：『Runtime』详解（一）基础知识](https://juejin.im/post/6844903878794706957)  \n[ iOS 开发：『Runtime』详解（二）Method Swizzling](https://juejin.im/post/6844903888122822669)\n[iOS 开发：『Runtime』详解（三）Category 底层原理](https://juejin.im/post/6844903896708562952)\n[iOS 开发：『Runtime』详解（四）获取类详细属性、方法](https://juejin.im/post/6844903903939526669)\n\n\n# 2.iOS探索系列\n[iOS探索 内存管理篇](https://juejin.im/post/6857758064658153486)\n\n# 3.《Effective Objective-C》干货三部曲\n[概念篇](https://juejin.im/post/6844903545636913159) \n[规范篇](https://juejin.im/post/6844903548942024717)\n[技巧篇](https://juejin.im/post/6844903549780885511)\n\n# 4.《Objective-C 高级编程》干货三部曲\n[引用计数篇 ](https://juejin.im/post/6844903473272586254)\n[Blocks篇](https://juejin.im/post/6844903474312773646) \n[GCD篇](https://juejin.im/post/6844903475378159623)\n\n# 5.『Blocks』详尽总结\n[基本使用](https://juejin.im/post/6844903874118025229) \n[底层原理](https://juejin.im/post/6844903875795779591)\n\n# 6.Runloop\n[RunLoop 源码阅读](https://juejin.im/post/6844903592369848328)\n[iOS底层原理探究-Runloop](https://juejin.im/post/6844903604965523464) \n[iOS底层原理总结 - RunLoop](https://juejin.im/post/6844903598350925831)\n\n# 7.iOS 开发：『Crash 防护系统』\n[Unrecognized Selector ](https://juejin.im/post/6844903922667094023)\n[KVO 防护](https://juejin.im/post/6844903927469588488) \n[KVC 防护](https://juejin.im/post/6844903934662803464)\n[iOS Crash防护](https://juejin.im/post/6874435201632583694) \n[一文读懂崩溃原理](https://juejin.im/post/6873868181635760142)\n\n# 8.多线程\n[iOS多线程：『GCD』详尽总结](https://juejin.im/post/6844903566398717960)\n[iOS多线程：『pthread、NSThread』详尽总结](https://juejin.im/post/6844903556009443335)\n[iOS多线程：『NSOperation、NSOperationQueue』详尽总结](https://juejin.im/post/6844903570467192845)\n\n# 9.网络\n[iOS开发·网络请求大总结](https://juejin.im/post/6844903636137410574)\n\n# 10.锁\n[iOS各种锁总结](https://juejin.im/post/6844904143157460999)\n","slug":"9.iOS开发知识点集合","published":1,"layout":"post","photos":[],"link":"","_id":"ckirdhqs2001f3th81zxk3xk6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"1-Runtime四部曲\"><a href=\"#1-Runtime四部曲\" class=\"headerlink\" title=\"1.Runtime四部曲\"></a>1.Runtime四部曲</h1><p><a href=\"https://juejin.im/post/6844903878794706957\">iOS 开发：『Runtime』详解（一）基础知识</a><br><a href=\"https://juejin.im/post/6844903888122822669\"> iOS 开发：『Runtime』详解（二）Method Swizzling</a><br><a href=\"https://juejin.im/post/6844903896708562952\">iOS 开发：『Runtime』详解（三）Category 底层原理</a><br><a href=\"https://juejin.im/post/6844903903939526669\">iOS 开发：『Runtime』详解（四）获取类详细属性、方法</a></p>\n<h1 id=\"2-iOS探索系列\"><a href=\"#2-iOS探索系列\" class=\"headerlink\" title=\"2.iOS探索系列\"></a>2.iOS探索系列</h1><p><a href=\"https://juejin.im/post/6857758064658153486\">iOS探索 内存管理篇</a></p>\n<h1 id=\"3-《Effective-Objective-C》干货三部曲\"><a href=\"#3-《Effective-Objective-C》干货三部曲\" class=\"headerlink\" title=\"3.《Effective Objective-C》干货三部曲\"></a>3.《Effective Objective-C》干货三部曲</h1><p><a href=\"https://juejin.im/post/6844903545636913159\">概念篇</a><br><a href=\"https://juejin.im/post/6844903548942024717\">规范篇</a><br><a href=\"https://juejin.im/post/6844903549780885511\">技巧篇</a></p>\n<h1 id=\"4-《Objective-C-高级编程》干货三部曲\"><a href=\"#4-《Objective-C-高级编程》干货三部曲\" class=\"headerlink\" title=\"4.《Objective-C 高级编程》干货三部曲\"></a>4.《Objective-C 高级编程》干货三部曲</h1><p><a href=\"https://juejin.im/post/6844903473272586254\">引用计数篇 </a><br><a href=\"https://juejin.im/post/6844903474312773646\">Blocks篇</a><br><a href=\"https://juejin.im/post/6844903475378159623\">GCD篇</a></p>\n<h1 id=\"5-『Blocks』详尽总结\"><a href=\"#5-『Blocks』详尽总结\" class=\"headerlink\" title=\"5.『Blocks』详尽总结\"></a>5.『Blocks』详尽总结</h1><p><a href=\"https://juejin.im/post/6844903874118025229\">基本使用</a><br><a href=\"https://juejin.im/post/6844903875795779591\">底层原理</a></p>\n<h1 id=\"6-Runloop\"><a href=\"#6-Runloop\" class=\"headerlink\" title=\"6.Runloop\"></a>6.Runloop</h1><p><a href=\"https://juejin.im/post/6844903592369848328\">RunLoop 源码阅读</a><br><a href=\"https://juejin.im/post/6844903604965523464\">iOS底层原理探究-Runloop</a><br><a href=\"https://juejin.im/post/6844903598350925831\">iOS底层原理总结 - RunLoop</a></p>\n<h1 id=\"7-iOS-开发：『Crash-防护系统』\"><a href=\"#7-iOS-开发：『Crash-防护系统』\" class=\"headerlink\" title=\"7.iOS 开发：『Crash 防护系统』\"></a>7.iOS 开发：『Crash 防护系统』</h1><p><a href=\"https://juejin.im/post/6844903922667094023\">Unrecognized Selector </a><br><a href=\"https://juejin.im/post/6844903927469588488\">KVO 防护</a><br><a href=\"https://juejin.im/post/6844903934662803464\">KVC 防护</a><br><a href=\"https://juejin.im/post/6874435201632583694\">iOS Crash防护</a><br><a href=\"https://juejin.im/post/6873868181635760142\">一文读懂崩溃原理</a></p>\n<h1 id=\"8-多线程\"><a href=\"#8-多线程\" class=\"headerlink\" title=\"8.多线程\"></a>8.多线程</h1><p><a href=\"https://juejin.im/post/6844903566398717960\">iOS多线程：『GCD』详尽总结</a><br><a href=\"https://juejin.im/post/6844903556009443335\">iOS多线程：『pthread、NSThread』详尽总结</a><br><a href=\"https://juejin.im/post/6844903570467192845\">iOS多线程：『NSOperation、NSOperationQueue』详尽总结</a></p>\n<h1 id=\"9-网络\"><a href=\"#9-网络\" class=\"headerlink\" title=\"9.网络\"></a>9.网络</h1><p><a href=\"https://juejin.im/post/6844903636137410574\">iOS开发·网络请求大总结</a></p>\n<h1 id=\"10-锁\"><a href=\"#10-锁\" class=\"headerlink\" title=\"10.锁\"></a>10.锁</h1><p><a href=\"https://juejin.im/post/6844904143157460999\">iOS各种锁总结</a></p>\n","site":{"data":{"link":[{"class_name":"友链","class_desc":"那些人，那些事","link_list":[{"name":"JerryC","link":"https://jerryc.me/","avatar":"https://jerryc.me/image/avatar.png","descr":"今日事,今日毕"},{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频"}]}]}},"cover":"https://upic-1257961856.cos.ap-nanjing.myqcloud.com/uPic/solar_system.png","excerpt":"","more":"<h1 id=\"1-Runtime四部曲\"><a href=\"#1-Runtime四部曲\" class=\"headerlink\" title=\"1.Runtime四部曲\"></a>1.Runtime四部曲</h1><p><a href=\"https://juejin.im/post/6844903878794706957\">iOS 开发：『Runtime』详解（一）基础知识</a><br><a href=\"https://juejin.im/post/6844903888122822669\"> iOS 开发：『Runtime』详解（二）Method Swizzling</a><br><a href=\"https://juejin.im/post/6844903896708562952\">iOS 开发：『Runtime』详解（三）Category 底层原理</a><br><a href=\"https://juejin.im/post/6844903903939526669\">iOS 开发：『Runtime』详解（四）获取类详细属性、方法</a></p>\n<h1 id=\"2-iOS探索系列\"><a href=\"#2-iOS探索系列\" class=\"headerlink\" title=\"2.iOS探索系列\"></a>2.iOS探索系列</h1><p><a href=\"https://juejin.im/post/6857758064658153486\">iOS探索 内存管理篇</a></p>\n<h1 id=\"3-《Effective-Objective-C》干货三部曲\"><a href=\"#3-《Effective-Objective-C》干货三部曲\" class=\"headerlink\" title=\"3.《Effective Objective-C》干货三部曲\"></a>3.《Effective Objective-C》干货三部曲</h1><p><a href=\"https://juejin.im/post/6844903545636913159\">概念篇</a><br><a href=\"https://juejin.im/post/6844903548942024717\">规范篇</a><br><a href=\"https://juejin.im/post/6844903549780885511\">技巧篇</a></p>\n<h1 id=\"4-《Objective-C-高级编程》干货三部曲\"><a href=\"#4-《Objective-C-高级编程》干货三部曲\" class=\"headerlink\" title=\"4.《Objective-C 高级编程》干货三部曲\"></a>4.《Objective-C 高级编程》干货三部曲</h1><p><a href=\"https://juejin.im/post/6844903473272586254\">引用计数篇 </a><br><a href=\"https://juejin.im/post/6844903474312773646\">Blocks篇</a><br><a href=\"https://juejin.im/post/6844903475378159623\">GCD篇</a></p>\n<h1 id=\"5-『Blocks』详尽总结\"><a href=\"#5-『Blocks』详尽总结\" class=\"headerlink\" title=\"5.『Blocks』详尽总结\"></a>5.『Blocks』详尽总结</h1><p><a href=\"https://juejin.im/post/6844903874118025229\">基本使用</a><br><a href=\"https://juejin.im/post/6844903875795779591\">底层原理</a></p>\n<h1 id=\"6-Runloop\"><a href=\"#6-Runloop\" class=\"headerlink\" title=\"6.Runloop\"></a>6.Runloop</h1><p><a href=\"https://juejin.im/post/6844903592369848328\">RunLoop 源码阅读</a><br><a href=\"https://juejin.im/post/6844903604965523464\">iOS底层原理探究-Runloop</a><br><a href=\"https://juejin.im/post/6844903598350925831\">iOS底层原理总结 - RunLoop</a></p>\n<h1 id=\"7-iOS-开发：『Crash-防护系统』\"><a href=\"#7-iOS-开发：『Crash-防护系统』\" class=\"headerlink\" title=\"7.iOS 开发：『Crash 防护系统』\"></a>7.iOS 开发：『Crash 防护系统』</h1><p><a href=\"https://juejin.im/post/6844903922667094023\">Unrecognized Selector </a><br><a href=\"https://juejin.im/post/6844903927469588488\">KVO 防护</a><br><a href=\"https://juejin.im/post/6844903934662803464\">KVC 防护</a><br><a href=\"https://juejin.im/post/6874435201632583694\">iOS Crash防护</a><br><a href=\"https://juejin.im/post/6873868181635760142\">一文读懂崩溃原理</a></p>\n<h1 id=\"8-多线程\"><a href=\"#8-多线程\" class=\"headerlink\" title=\"8.多线程\"></a>8.多线程</h1><p><a href=\"https://juejin.im/post/6844903566398717960\">iOS多线程：『GCD』详尽总结</a><br><a href=\"https://juejin.im/post/6844903556009443335\">iOS多线程：『pthread、NSThread』详尽总结</a><br><a href=\"https://juejin.im/post/6844903570467192845\">iOS多线程：『NSOperation、NSOperationQueue』详尽总结</a></p>\n<h1 id=\"9-网络\"><a href=\"#9-网络\" class=\"headerlink\" title=\"9.网络\"></a>9.网络</h1><p><a href=\"https://juejin.im/post/6844903636137410574\">iOS开发·网络请求大总结</a></p>\n<h1 id=\"10-锁\"><a href=\"#10-锁\" class=\"headerlink\" title=\"10.锁\"></a>10.锁</h1><p><a href=\"https://juejin.im/post/6844904143157460999\">iOS各种锁总结</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckirdhqrh000b3th8dy6v9p4c","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrq000n3th89hzfcwuv"},{"post_id":"ckirdhqr400033th8g4zi669x","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrr000q3th82o0e5wze"},{"post_id":"ckirdhqrj000d3th8fxwwfs0d","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrs000t3th8dntw9cfu"},{"post_id":"ckirdhqrm000i3th8c49kb4mf","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrt000w3th8b7zaf03z"},{"post_id":"ckirdhqr800053th8d7ku9u90","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrv000z3th85dw16khf"},{"post_id":"ckirdhqrn000j3th83f9g3zwk","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrw00123th8bofy6r00"},{"post_id":"ckirdhqrp000m3th826yubc50","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrx00143th85fadbfnt"},{"post_id":"ckirdhqrc00083th85zk46oxp","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqry00183th8evxr281i"},{"post_id":"ckirdhqrq000p3th8085if635","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqrz001a3th8gr8949c5"},{"post_id":"ckirdhqrs000s3th80tv36zlw","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs2001d3th85l28czps"},{"post_id":"ckirdhqrt000v3th83f6xes8a","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs3001g3th8c14k422t"},{"post_id":"ckirdhqru000y3th8gzard452","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs5001i3th8f734d8no"},{"post_id":"ckirdhqrv00113th8a3v335q0","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs5001k3th8buor4lg3"},{"post_id":"ckirdhqrw00133th8aw1sax1l","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs6001m3th869hn0og0"},{"post_id":"ckirdhqrx00173th8en5bfqa5","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs6001o3th89wlwh743"},{"post_id":"ckirdhqry00193th8di12255g","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs6001p3th85o6l0vnb"},{"post_id":"ckirdhqs1001c3th809qf0ucv","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs6001s3th8eyhs8w7z"},{"post_id":"ckirdhqs2001f3th81zxk3xk6","category_id":"ckirdhqrd00093th82xdt8u28","_id":"ckirdhqs6001t3th8c05bat2w"}],"PostTag":[{"post_id":"ckirdhqr400033th8g4zi669x","tag_id":"ckirdhqra00063th8ghvsey2v","_id":"ckirdhqrl000g3th822xq7lzb"},{"post_id":"ckirdhqr800053th8d7ku9u90","tag_id":"ckirdhqrk000e3th8b8p1g4fd","_id":"ckirdhqrq000o3th88orh6jel"},{"post_id":"ckirdhqrc00083th85zk46oxp","tag_id":"ckirdhqrp000l3th8avmo8qhw","_id":"ckirdhqrt000u3th85z8g7abl"},{"post_id":"ckirdhqrh000b3th8dy6v9p4c","tag_id":"ckirdhqrr000r3th8hqj92r97","_id":"ckirdhqrv00103th89yvse2j7"},{"post_id":"ckirdhqrj000d3th8fxwwfs0d","tag_id":"ckirdhqru000x3th801kfauk3","_id":"ckirdhqrx00163th8chpeb8l4"},{"post_id":"ckirdhqrm000i3th8c49kb4mf","tag_id":"ckirdhqrx00153th8hggmhrjm","_id":"ckirdhqs2001e3th87ejy3add"},{"post_id":"ckirdhqrn000j3th83f9g3zwk","tag_id":"ckirdhqrz001b3th8afejcpp8","_id":"ckirdhqs5001j3th8en535foc"},{"post_id":"ckirdhqrp000m3th826yubc50","tag_id":"ckirdhqs3001h3th8g4n32zr0","_id":"ckirdhqs6001n3th85e3zdobj"},{"post_id":"ckirdhqrq000p3th8085if635","tag_id":"ckirdhqs5001l3th89jqx3hfz","_id":"ckirdhqs6001r3th8cjua38v3"},{"post_id":"ckirdhqrs000s3th80tv36zlw","tag_id":"ckirdhqs6001q3th8g0xic1tf","_id":"ckirdhqs7001v3th81ols1gqx"},{"post_id":"ckirdhqrt000v3th83f6xes8a","tag_id":"ckirdhqs7001u3th893x3a1sw","_id":"ckirdhqs7001x3th8fpkyb1b6"},{"post_id":"ckirdhqru000y3th8gzard452","tag_id":"ckirdhqs7001w3th87oxodh7p","_id":"ckirdhqs8001z3th8gxny707e"},{"post_id":"ckirdhqrv00113th8a3v335q0","tag_id":"ckirdhqs7001y3th885y1hqd7","_id":"ckirdhqs900233th84kh30yuh"},{"post_id":"ckirdhqrv00113th8a3v335q0","tag_id":"ckirdhqs800203th8eovzgbl2","_id":"ckirdhqs900243th889sugtfk"},{"post_id":"ckirdhqrv00113th8a3v335q0","tag_id":"ckirdhqs800213th89zczcqoz","_id":"ckirdhqs900263th84crdh43z"},{"post_id":"ckirdhqrw00133th8aw1sax1l","tag_id":"ckirdhqs7001y3th885y1hqd7","_id":"ckirdhqsa00293th8e32ncp9i"},{"post_id":"ckirdhqrw00133th8aw1sax1l","tag_id":"ckirdhqs800203th8eovzgbl2","_id":"ckirdhqsa002a3th83p94eodq"},{"post_id":"ckirdhqrw00133th8aw1sax1l","tag_id":"ckirdhqs800213th89zczcqoz","_id":"ckirdhqsa002c3th84wux7w57"},{"post_id":"ckirdhqrx00173th8en5bfqa5","tag_id":"ckirdhqra00063th8ghvsey2v","_id":"ckirdhqsb002e3th8dk478hia"},{"post_id":"ckirdhqrx00173th8en5bfqa5","tag_id":"ckirdhqsa00283th8a4qg7kvm","_id":"ckirdhqsb002f3th82lc6dwwe"},{"post_id":"ckirdhqrx00173th8en5bfqa5","tag_id":"ckirdhqsa002b3th825b34mjo","_id":"ckirdhqsc002h3th87nuw7se1"},{"post_id":"ckirdhqry00193th8di12255g","tag_id":"ckirdhqsa002d3th8bs2n6jql","_id":"ckirdhqsc002i3th8bgt4a6cv"},{"post_id":"ckirdhqs1001c3th809qf0ucv","tag_id":"ckirdhqra00063th8ghvsey2v","_id":"ckirdhqsd002k3th82h6rfgrz"},{"post_id":"ckirdhqs1001c3th809qf0ucv","tag_id":"ckirdhqsb002g3th8dt0i64hr","_id":"ckirdhqsd002l3th82p7m6axn"},{"post_id":"ckirdhqs2001f3th81zxk3xk6","tag_id":"ckirdhqsc002j3th807o15mry","_id":"ckirdhqsd002m3th8c0c3bilv"}],"Tag":[{"name":"C++","_id":"ckirdhqra00063th8ghvsey2v"},{"name":"Android","_id":"ckirdhqrk000e3th8b8p1g4fd"},{"name":"源管理","_id":"ckirdhqrp000l3th8avmo8qhw"},{"name":"后端","_id":"ckirdhqrr000r3th8hqj92r97"},{"name":"前端","_id":"ckirdhqru000x3th801kfauk3"},{"name":"算法","_id":"ckirdhqrx00153th8hggmhrjm"},{"name":"项目","_id":"ckirdhqrz001b3th8afejcpp8"},{"name":"移动端","_id":"ckirdhqs3001h3th8g4n32zr0"},{"name":"OpenGL","_id":"ckirdhqs5001l3th89jqx3hfz"},{"name":"阅读","_id":"ckirdhqs6001q3th8g0xic1tf"},{"name":"通用","_id":"ckirdhqs7001u3th893x3a1sw"},{"name":"软实力","_id":"ckirdhqs7001w3th87oxodh7p"},{"name":"网络","_id":"ckirdhqs7001y3th885y1hqd7"},{"name":"HTTP","_id":"ckirdhqs800203th8eovzgbl2"},{"name":"HTTPS","_id":"ckirdhqs800213th89zczcqoz"},{"name":"数据结构","_id":"ckirdhqsa00283th8a4qg7kvm"},{"name":"红黑树","_id":"ckirdhqsa002b3th825b34mjo"},{"name":"收藏夹","_id":"ckirdhqsa002d3th8bs2n6jql"},{"name":"对象","_id":"ckirdhqsb002g3th8dt0i64hr"},{"name":"iOS","_id":"ckirdhqsc002j3th807o15mry"}]}}